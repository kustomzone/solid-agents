{"version":3,"file":"js/170-legacy.3cb9fa5e.js","mappings":"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","sources":["webpack://agent/./src/views/connectors/LocalConnector.vue?8e44","webpack://agent/./src/views/connectors/connector/base.js","webpack://agent/./src/views/connectors/connector/local.js","webpack://agent/src/views/connectors/LocalConnector.vue","webpack://agent/./src/views/connectors/LocalConnector.vue?4f11","webpack://agent/./src/views/connectors/LocalConnector.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._v(\"Local: \"),_c('b-button',{staticClass:\"ml-2\",attrs:{\"size\":\"sm\",\"variant\":\"primary\"},on:{\"click\":_vm.download}},[_vm._v(\"Download\")]),_c('b-button',{staticClass:\"ml-2\",attrs:{\"variant\":\"primary\",\"size\":\"sm\"},on:{\"click\":function($event){return _vm.openFileUpload()}}},[_vm._v(\"Upload Brains\")]),_c('input',{ref:\"fileUpload\",attrs:{\"type\":\"file\",\"multiple\":\"\",\"hidden\":\"\"},on:{\"change\":_vm.loadFiles}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { v4 as uuidv4 } from 'uuid';\n\n// import modele from './templates/neurone1.js'\n\n\nexport { Base }\n\nclass Base {\n  constructor(options = {}) {\n    // this['ve:type'] = \"base\"\n    // loading modele\n    //Object.assign(this, modele);\n    // update basic props\n    this.id = uuidv4()\n    this.type = \"baseConnector\"\n    this.created = Date.now()\n    // updating with options\n    Object.assign(this, options);\n    // this.options = options\n\n    // ...\n  }\n  debug(){\n      console.log(this)\n  }\n}\n","import { Base } from \"./base.js\"\nimport store from '@/store'\n\nexport { LocalConnector }\n\nclass LocalConnector extends Base {\n\n  constructor(options = {}) {\n    super(options)\n    options['type'] == undefined ? this['type'] = \"LocalConnector\": \"\"\n  }\n  async upload (file, cb){\n    const fileReader = new FileReader()\n\n    await fileReader.addEventListener('load', () => {\n      cb(fileReader.result)\n    })\n    fileReader.readAsText(file, \"UTF-8\")\n    // console.log(result)\n    // return result\n  }\n  async upload1(files){\n    for (var i = 0; i < files.length; i++) {\n      let f = files[i]\n      let filename = f.name\n      var extension = f.name.split('.').pop();\n      const fileReader = new FileReader()\n      fileReader.addEventListener('load', () => {\n        var result = fileReader.result;\n        console.log(typeof result, result);\n        switch (extension) {\n          case 'json':\n          var data = JSON.parse(result)\n          console.log(data)\n          if(data.nodes != undefined){\n            console.log(data)\n            store.commit('soukai/setNeurones', data.nodes)\n            // store.commit ('graph3D/addNodes', data.nodes)\n            // store.commit('graph3D/setNeurones', data.nodes)\n            // store.commit('graph3D/addNodes', data.nodes)\n            // store.commit('graph3D/addLinks', data.links)\n          }\n          break;\n          default:\n          alert(\"your file must be a .json file\", filename)\n\n        }\n        // let result = {name: filename, result: fileReader.result}\n        // console.log(result)\n      })\n      fileReader.readAsText(f)\n    }\n  }\n\n  downloadFile(data){\n    var contenu = JSON.stringify(data.content, null, 2) //`{\"test\": \"json\" }` //this.content\n    console.log(\"todo: poser la question compresser\",contenu)\n    var format = data.format || \"json\" //this.format;\n    //  console.log(contenu, format)\n    var contentType = \"\";\n    var fileNameToSaveAs = \"\"\n    let suggested = \"Brain_\"+Date.now()\n    var filename = prompt(\"Choose a name for the exported file :\", suggested);\n    if (filename == null || filename == \"\") {\n      return;\n    }\n\n    switch (format) {\n      case 'json':\n      contentType = 'application/json';\n      fileNameToSaveAs = filename + \".json\"; //Date.now() +\n      break;\n      case 'ttl':\n      contentType = 'text/turtle';\n      fileNameToSaveAs = filename + \".ttl\"; //Date.now() +\n      break;\n      case 'jsonld':\n      contentType = 'application/ld+json';\n      fileNameToSaveAs = filename + \".jsonld\"; //Date.now() +\n      break;\n      default:\n      alert('Format de fichier non reconnu', format);\n    }\n    var textFileAsBlob = new Blob([contenu], { type: contentType }\n    );\n    var downloadLink = document.createElement(\"a\");\n    downloadLink.download = fileNameToSaveAs;\n    downloadLink.innerHTML = \"Download File\";\n    if(navigator.userAgent.indexOf(\"Chrome\") != -1) {\n      downloadLink.href = window.URL.createObjectURL(textFileAsBlob);\n    } else {\n      downloadLink.href = window.URL.createObjectURL(textFileAsBlob);\n      downloadLink.target=\"_blank\";\n      downloadLink.style.display = \"none\";\n      document.body.appendChild(downloadLink);\n    }\n    var event = document.createEvent(\"MouseEvents\");\n    event.initMouseEvent(\n      \"click\", true, false, window, 0, 0, 0, 0, 0\n      , false, false, false, false, 0, null\n    );\n    downloadLink.dispatchEvent(event);\n    setTimeout(function(){\n      document.body.removeChild(downloadLink);\n      window.URL.revokeObjectURL(downloadLink);\n    }, 1000);\n  }\n}\n","<template>\n  <div>Local:\n    <b-button @click=\"download\" size=\"sm\" variant=\"primary\" class=\"ml-2\">Download</b-button>\n    <b-button @click=\"openFileUpload()\" variant=\"primary\" size=\"sm\" class=\"ml-2\">Upload Brains</b-button>\n    <input ref=\"fileUpload\" type=\"file\" multiple hidden @change=\"loadFiles\" />\n  </div>\n</template>\n\n<script>\nimport { LocalConnector } from \"./connector/local.js\"\nexport default {\n  name: \"LocalConnectorConnector\",\n  data(){\n    return {\n      connector : new LocalConnector(/*options*/)\n    }\n  },\n  mounted(){\n    console.log(this.connector)\n  },\n  methods: {\n    async loadFiles(event){\n      const files = event.target.files\n      for(const file of files) {\n        this.connector.upload(file, this.processFile)\n      }\n    },\n    async processFile(f){\n      console.log(f)\n      console.log(f.name)\n      let g = JSON.parse(f)\n      console.log()\n      for await (let n of g.nodes){\n        console.log(n)\n        await this.$newNode(n)\n        //await context.dispatch('saveNode', n)\n        await this.$store.dispatch('core/saveNode',n)\n        //this.$soukai_create(n)\n      }\n      //\n      // for(let l of g.links){\n      //   this.$addLink(l)\n      //   //this.$soukai_create(n)\n      // }\n      console.log(\"end\")\n      await this.$store.dispatch('core/getNodes')\n\n    },\n    openFileUpload(){\n      this.$refs.fileUpload.click()\n    },\n    download(){\n      //https://github.com/scenaristeur/ipgs/blob/4436a12ccdb2b3de9c02a34fc2a699ccf9c68bf2/src/components/network/ExportModal.vue\n      console.log(\"download\"/*,  this.$store.state.soukai.neurones*/)\n      let graphData = {format: \"json\",\n      content: {\n        nodes: this.$store.state.core.nodes,\n        links: this.$store.state.core.links,\n        //  neurones: this.$store.state.soukai.neurones\n      }}\n      this.connector.downloadFile(graphData)\n    },\n    // upload(){\n    //   //https://github.com/scenaristeur/ipgs/blob/4436a12ccdb2b3de9c02a34fc2a699ccf9c68bf2/src/components/network/ImportModal.vue\n    //   console.log(\"upload\")\n    // }\n  }\n}\n</script>\n\n<style>\n.custom-file-input:lang(en) ~ .custom-file-label::after {\n  content: 'Uplaod a brain';\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LocalConnector.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LocalConnector.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./LocalConnector.vue?vue&type=template&id=185ae310&\"\nimport script from \"./LocalConnector.vue?vue&type=script&lang=js&\"\nexport * from \"./LocalConnector.vue?vue&type=script&lang=js&\"\nimport style0 from \"./LocalConnector.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","_v","staticClass","attrs","on","download","$event","openFileUpload","ref","loadFiles","staticRenderFns","Base","options","id","uuidv4","type","created","Date","now","Object","assign","console","log","LocalConnector","undefined","file","cb","fileReader","FileReader","addEventListener","result","readAsText","files","f","i","filename","name","extension","split","pop","data","JSON","parse","nodes","store","alert","length","contenu","stringify","content","format","contentType","fileNameToSaveAs","suggested","prompt","textFileAsBlob","Blob","downloadLink","document","createElement","innerHTML","navigator","userAgent","indexOf","href","window","URL","createObjectURL","target","style","display","body","appendChild","event","createEvent","initMouseEvent","dispatchEvent","setTimeout","removeChild","revokeObjectURL","connector","mounted","methods","processFile","g","n","links","component"],"sourceRoot":""}