"use strict";(self["webpackChunkagent"]=self["webpackChunkagent"]||[]).push([[984],{97984:function(n,o,t){t.r(o),t.d(o,{default:function(){return u}});var i=function(){var n=this,o=n.$createElement,t=n._self._c||o;return t("div",[t("b-button",{on:{click:n.saveBrainToSolid}},[n._v("Save brain to Solid")]),t("b-button",{on:{click:n.loadBrainFromSolid}},[n._v("Load brain from Solid")]),t("b-button",{on:{click:n.clear}},[n._v("Clear")]),t("SolidLogin"),t("div",{ref:"graph",attrs:{id:"graph"}},[n._v("Loading graph... ")])],1)},e=[],s=t(4367),r=(t(41539),t(78783),t(33948),t(21249),{name:"VisualisationView",components:{SolidLogin:function(){return t.e(221).then(t.bind(t,14221))}},data:function(){return{}},mounted:function(){this.$graphInit({domElement:this.$refs.graph}),this.$checkSolidSession()},methods:{saveBrain:function(){this.$store.dispatch("core/saveBrain")},saveBrainToSolid:function(){this.$saveBrainToSolid()},loadBrainFromSolid:function(){this.$loadBrainFromSolid()},clear:function(){confirm("Are you sure you want to remove all nodes?")&&(this.$store.dispatch("core/removeAllNodes"),this.$store.commit("core/setCurrentNode",null))},update:function(){if(console.log(this.nodes),void 0!=this.graph){var n=this.nodes.map((function(n){return(0,s.Z)({},n)})),o=this.links.map((function(n){return(0,s.Z)({},n)}));this.graph.graphData({nodes:n,links:o}),console.log(this.nodes)}}},watch:{nodes:function(){console.log(this.nodes),this.update()},links:function(){console.log(this.links),this.update()},graph:function(){this.update()}},computed:{nodes:function(){return this.$store.state.core.nodes},links:function(){return this.$store.state.core.links},graph:function(){return this.$store.state.core.graph}}}),a=r,l=t(1001),c=(0,l.Z)(a,i,e,!1,null,null,null),u=c.exports}}]);
//# sourceMappingURL=984-legacy.104a3471.js.map