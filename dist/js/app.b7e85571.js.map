{"version":3,"file":"js/app.b7e85571.js","mappings":"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","sources":["webpack://agent/./node_modules/gun/ sync","webpack://agent/./src/App.vue?b477","webpack://agent/src/App.vue","webpack://agent/./src/App.vue?facb","webpack://agent/./src/App.vue","webpack://agent/./src/registerServiceWorker.js","webpack://agent/./src/views/HomeView.vue?2db6","webpack://agent/src/views/HomeView.vue","webpack://agent/./src/views/HomeView.vue?4768","webpack://agent/./src/views/HomeView.vue","webpack://agent/./src/router/index.js","webpack://agent/./src/api/idb-nodes.js","webpack://agent/./src/store/modules/core.js","webpack://agent/./src/store/modules/solid.js","webpack://agent/./src/store/modules/terminal.js","webpack://agent/./src/store/modules/gun.js","webpack://agent/./src/store/index.js","webpack://agent/./src/api/galaxy.js","webpack://agent/./src/plugins/galaxy-plugin.js","webpack://agent/./src/plugins/core-plugin.js","webpack://agent/./src/plugins/graph3d-plugin.js","webpack://agent/./src/plugins/tools-plugin.js","webpack://agent/./src/plugins/solid-plugin.js","webpack://agent/./src/plugins/solid-data-plugin.js","webpack://agent/./src/plugins/ipfs-data-plugin.js","webpack://agent/./src/api/dfs.js","webpack://agent/./src/plugins/gun-plugin.js","webpack://agent/./src/main.js","webpack://agent/./src/neurone-factory/templates/neurone1.js","webpack://agent/./src/neurone-factory/base.js","webpack://agent/./src/neurone-factory/core.js","webpack://agent/./src/neurone-factory/command.js","webpack://agent/webpack/bootstrap","webpack://agent/webpack/runtime/chunk loaded","webpack://agent/webpack/runtime/compat get default export","webpack://agent/webpack/runtime/create fake namespace object","webpack://agent/webpack/runtime/define property getters","webpack://agent/webpack/runtime/ensure chunk","webpack://agent/webpack/runtime/get javascript chunk filename","webpack://agent/webpack/runtime/get mini-css chunk filename","webpack://agent/webpack/runtime/global","webpack://agent/webpack/runtime/hasOwnProperty shorthand","webpack://agent/webpack/runtime/load script","webpack://agent/webpack/runtime/make namespace object","webpack://agent/webpack/runtime/node module decorator","webpack://agent/webpack/runtime/publicPath","webpack://agent/webpack/runtime/css loading","webpack://agent/webpack/runtime/jsonp chunk loading","webpack://agent/webpack/startup"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 1661;\nmodule.exports = webpackEmptyContext;","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('NavBar'),(_vm.message != null)?_c('div',[_c('b',[_c('hr'),_c('hr'),_vm._v(_vm._s(_vm.message)),_c('hr'),_c('hr')])]):_vm._e(),_c('router-view'),_c('small',[_c('i',[_vm._v(\"0.0.1 - soukai layout | \"),_c('a',{attrs:{\"href\":\"https://github.com/scenaristeur/agent\",\"target\":\"_blank\"}},[_vm._v(\"contribute\")]),_vm._v(\" | \"),_c('a',{attrs:{\"href\":\"https://github.com/scenaristeur/agent/wiki\",\"target\":\"_blank\"}},[_vm._v(\"help\")]),_vm._v(\" | \"),_c('a',{attrs:{\"href\":\"https://youtu.be/YT61BcjGfwc\",\"target\":\"_blank\"}},[_vm._v(\"How To use 3dmindmap Video Demo\")]),_vm._v(\" | \"),_c('router-link',{attrs:{\"to\":\"/test\"}},[_vm._v(\"Test\")])],1)]),_c('DataCaching')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div id=\"app\">\r\n    <NavBar />\r\n    <!-- <hr>\r\n    <hr>\r\n    <hr>\r\n    <hr> -->\r\n    <!-- <nav>\r\n    <router-link to=\"/\">Home</router-link> |\r\n    <router-link to=\"/about\">About</router-link>\r\n  </nav> -->\r\n  <div v-if=\"message != null\"><b><hr><hr>{{message}}<hr><hr></b></div>\r\n\r\n  <router-view/>\r\n  <small><i>0.0.1 - soukai layout |\r\n    <a href=\"https://github.com/scenaristeur/agent\" target=\"_blank\">contribute</a> |\r\n    <a href=\"https://github.com/scenaristeur/agent/wiki\" target =\"_blank\">help</a> |\r\n    <a href=\"https://youtu.be/YT61BcjGfwc\" target =\"_blank\">How To use 3dmindmap Video Demo</a> |\r\n    <router-link to=\"/test\">Test</router-link>\r\n  </i></small>\r\n  <DataCaching />\r\n</div>\r\n</template>\r\n\r\n\r\n<script>\r\n// @ is an alias to /src\r\n// import HelloWorld from '@/components/HelloWorld.vue'\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    'NavBar': ()=>import('@/views/NavBar'),\r\n    'DataCaching': ()=>import('@/views/experiments/DataCaching'),\r\n  },\r\n  data(){\r\n    return{\r\n      message: null\r\n    }\r\n  },\r\n  created(){\r\n    this.$coreInit({name: \"SuperCore\"})\r\n    if(this.$route.query.source){\r\n      let source = this.$route.query.source\r\n      console.log(\"source\",source)\r\n      this.$loadBrainFromSolid(source)\r\n    }else if(this.$route.query.cid){\r\n      this.loadBrainFromIpfs()\r\n    }else{\r\n      this.$checkSolidSession()\r\n      this.$store.dispatch('core/getNodes')\r\n    }\r\n  },\r\n  methods:{\r\n    loadBrainFromIpfs(){\r\n      if(this.$route.query.cid){\r\n        if (this.ipfsNode != null){\r\n          this.$loadBrainFromIpfs(this.$route.query.cid)\r\n          this.message = null\r\n        }else{\r\n          this.message = \"connecting to ipfs, could take 30s, please be patient (todo : fusion avec le graph existant)\"\r\n        }\r\n      }\r\n    }\r\n  },\r\n  watch:{\r\n    ipfsNode(){\r\n      this.loadBrainFromIpfs()\r\n\r\n    }\r\n  },\r\n  computed: {\r\n    ipfsNode() {\r\n      return this.$store.state.core.ipfsNode\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: #2c3e50;\r\n}\r\n\r\nnav {\r\n  padding: 30px;\r\n  text-align: center;\r\n}\r\n\r\nnav a {\r\n  font-weight: bold;\r\n  color: #2c3e50;\r\n}\r\n\r\nnav a.router-link-exact-active {\r\n  color: #42b983;\r\n}\r\n</style>\r\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=7a0e0b35&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/* eslint-disable no-console */\r\n\r\nimport { register } from 'register-service-worker'\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  register(`${process.env.BASE_URL}service-worker.js`, {\r\n    ready () {\r\n      console.log(\r\n        'App is being served from cache by a service worker.\\n' +\r\n        'For more details, visit https://goo.gl/AFskqB'\r\n      )\r\n    },\r\n    registered () {\r\n      console.log('Service worker has been registered.')\r\n    },\r\n    cached () {\r\n      console.log('Content has been cached for offline use.')\r\n    },\r\n    updatefound () {\r\n      console.log('New content is downloading.')\r\n    },\r\n    updated () {\r\n      console.log('New content is available; please refresh.')\r\n      alert('This app has been updated, please, close and reopen.')\r\n    },\r\n    offline () {\r\n      console.log('No internet connection found. App is running in offline mode.')\r\n    },\r\n    error (error) {\r\n      console.error('Error during service worker registration:', error)\r\n    }\r\n  })\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('CommandInput',{attrs:{\"fluid\":\"sm\"}}),_c('b-row',[_c('b-col',{attrs:{\"md\":\"6\"}},[_c('VisualisationView')],1),_c('b-col',{attrs:{\"md\":\"6\"}},[_c('SideView')],1)],1),_c('FabMenu'),_c('ExternalSource')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <CommandInput fluid=\"sm\" />\r\n    <b-row>\r\n      <b-col md=\"6\">\r\n        <VisualisationView />\r\n      </b-col>\r\n      <b-col md=\"6\">\r\n        <SideView />\r\n\r\n      </b-col>\r\n    </b-row>\r\n    <FabMenu />\r\n    <ExternalSource />\r\n  </div>\r\n\r\n\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: 'HomeView',\r\n  components: {\r\n    'VisualisationView': ()=>import('@/views/VisualisationView'),\r\n    'CommandInput': ()=>import('@/views/CommandInput'),\r\n    'FabMenu': ()=>import('@/views/FabMenu'),\r\n    'ExternalSource': ()=>import('@/views/ExternalSource'),\r\n    'SideView': ()=>import('@/views/SideView'),\r\n\r\n\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HomeView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HomeView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./HomeView.vue?vue&type=template&id=36486b12&\"\nimport script from \"./HomeView.vue?vue&type=script&lang=js&\"\nexport * from \"./HomeView.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\nimport HomeView from '../views/HomeView.vue'\r\n\r\nVue.use(VueRouter)\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'home',\r\n    component: HomeView\r\n  },\r\n  {\r\n    path: '/test',\r\n    name: 'test',\r\n    // route level code-splitting\r\n    // this generates a separate chunk (about.[hash].js) for this route\r\n    // which is lazy-loaded when the route is visited.\r\n    component: () => import(/* webpackChunkName: \"test\" */ '../views/TestView.vue')\r\n  }\r\n]\r\n\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  base: process.env.BASE_URL,\r\n  routes\r\n})\r\n\r\nexport default router\r\n","const DB_NAME = 'nodedb';\r\nconst DB_VERSION = 1;\r\nlet DB;\r\n// https://www.raymondcamden.com/2019/10/16/using-indexeddb-with-vuejs\r\n\r\nexport default {\r\n\r\n\tasync getDb() {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\tif(DB) { return resolve(DB); }\r\n\t\t\tconsole.log('OPENING DB', DB);\r\n\t\t\tlet request = window.indexedDB.open(DB_NAME, DB_VERSION);\r\n\r\n\t\t\trequest.onerror = e => {\r\n\t\t\t\tconsole.log('Error opening db', e);\r\n\t\t\t\treject('Error');\r\n\t\t\t};\r\n\r\n\t\t\trequest.onsuccess = e => {\r\n\t\t\t\tDB = e.target.result;\r\n\t\t\t\tresolve(DB);\r\n\t\t\t};\r\n\r\n\t\t\trequest.onupgradeneeded = e => {\r\n\t\t\t\tconsole.log('onupgradeneeded');\r\n\t\t\t\tlet db = e.target.result;\r\n\t\t\t\tdb.createObjectStore(\"nodes\", { keyPath:'id' });\r\n\t\t\t};\r\n\t\t});\r\n\t},\r\n\tasync deleteNode(node) {\r\n\r\n\t\tlet db = await this.getDb();\r\n\r\n\t\treturn new Promise(resolve => {\r\n\r\n\t\t\tlet trans = db.transaction(['nodes'],'readwrite');\r\n\t\t\ttrans.oncomplete = () => {\r\n\t\t\t\tresolve();\r\n\t\t\t};\r\n\r\n\t\t\tlet store = trans.objectStore('nodes');\r\n\t\t\tstore.delete(node.id);\r\n\t\t});\r\n\t},\r\n\tasync clearStore(){\r\n\t\tconsole.log(\"clear store\")\r\n\t\ttry{\r\n\t\t\tlet db = await this.getDb();\r\n\t\t\tvar transaction = db.transaction([\"nodes\"], \"readwrite\");\r\n\t\t\t// create an object store on the transaction\r\n\t\t\tvar objectStore = transaction.objectStore(\"nodes\");\r\n\r\n\t\t\t// Make a request to clear all the data out of the object store\r\n\t\t\tvar objectStoreRequest = objectStore.clear();\r\n\r\n\t\t\tobjectStoreRequest.onsuccess = function(event) {\r\n\t\t\t\tconsole.log(event)\r\n\t\t\t\t// report the success of our request\r\n\t\t\t\t//note.innerHTML += '<li>Request successful.</li>';\r\n\t\t\t};\r\n\t\t\t//window.indexedDB.deleteDatabase(DB_NAME)\r\n\t\t}catch(e){\r\n\t\t\talert(e)\r\n\t\t}\r\n\t\tawait this.getNodes()\r\n\t},\r\n\tasync getNodes() {\r\n\r\n\t\tlet db = await this.getDb();\r\n\r\n\t\treturn new Promise(resolve => {\r\n\r\n\t\t\tlet trans = db.transaction(['nodes'],'readonly');\r\n\t\t\ttrans.oncomplete = () => {\r\n\t\t\t\tresolve(nodes);\r\n\t\t\t};\r\n\r\n\t\t\tlet store = trans.objectStore('nodes');\r\n\t\t\tlet nodes = [];\r\n\r\n\t\t\tstore.openCursor().onsuccess = e => {\r\n\t\t\t\tlet cursor = e.target.result;\r\n\t\t\t\tif (cursor) {\r\n\t\t\t\t\tnodes.push(cursor.value)\r\n\t\t\t\t\tcursor.continue();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t});\r\n\t},\r\n\r\n\tasync saveNode(node) {\r\n\r\n\t\tlet db = await this.getDb();\r\n\r\n\t\treturn new Promise(resolve => {\r\n\r\n\t\t\tlet trans = db.transaction(['nodes'],'readwrite');\r\n\t\t\ttrans.oncomplete = () => {\r\n\t\t\t\tresolve();\r\n\t\t\t};\r\n\r\n\t\t\tlet store = trans.objectStore('nodes');\r\n\t\t\tstore.put(node);\r\n\r\n\t\t});\r\n\r\n\t}\r\n\r\n}\r\n","import Vue from 'vue'\r\nimport idb from '@/api/idb-nodes';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst vocab = \"https://scenaristeur.github.io/agent/\"\r\n\r\nconst state = () => ({\r\n  core: undefined,\r\n  currentNode : undefined,\r\n  brain: undefined,\r\n  brains: undefined,\r\n  showBrainLoader: false,\r\n  graph: undefined,\r\n  db: undefined,\r\n  commandHistory: [],\r\n  command: null,\r\n  nodes: [],\r\n  links: [],\r\n  jsonldProps: ['@context', 'id', 'reverse', 'type'],\r\n  graphProps: ['__ob__', '__threeObj', 'index', 'vx', 'vy', 'vz', 'x', 'y', 'z' ],\r\n  spinner: [],\r\n  ipfsNode: null,\r\n  ipfs_cids: [],\r\n  graph_cid : null,\r\n  highlightNodes: new Set(),\r\n  highlightLinks: new Set(),\r\n  // selectedNodes: new Set(),\r\n  hoverNode: null,\r\n  search: null,\r\n  galaxy : null\r\n})\r\n\r\nconst mutations = {\r\n  setGalaxy(state, g){\r\n    state.galaxy = g\r\n  },\r\n  setIpfsNode(state, n){\r\n    state.ipfsNode = n\r\n  },\r\n  setGraphCid(state, c){\r\n    state.graph_cid = c\r\n  },\r\n  resetIpfsCid(state){\r\n    state.ipfs_cids = []\r\n  },\r\n  addIpfsCid(state, cid){\r\n    state.ipfs_cids.push(cid)\r\n  },\r\n  setCore(state, c){\r\n    state.c = c\r\n  },\r\n  setCurrentNode(state, n){\r\n    state.currentNode = n\r\n  },\r\n  setBrain(state, b){\r\n    console.log(b)\r\n    state.brain = b\r\n  },\r\n  setBrains(state, b){\r\n    state.brains = b\r\n    state.showBrainLoader = true\r\n  },\r\n  setShowBrainLoader(state, v){\r\n    state.showBrainLoader = v\r\n  },\r\n  setGraph(state, g){\r\n    state.graph = g\r\n  },\r\n  setDb(state, db){\r\n    state.db = db\r\n  },\r\n  setCommand(state, c){\r\n    state.command = c\r\n  },\r\n  pushHistory(state, c){\r\n    state.commandHistory.push(c)\r\n  },\r\n  setLinks(state, l){\r\n    state.links = l\r\n  },\r\n  spinnerAdd(state,t){\r\n    state.spinner.push(t)\r\n  },\r\n  spinnerRemove(state, t){\r\n    state.spinner = state.spinner.filter(x => x.id!=t.id )\r\n  },\r\n  resetSpinner(state){\r\n    state.spinner = []\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  async pushCommandHistory(context, c){\r\n    context.commit('setCommand', c)\r\n    context.commit('pushHistory',c)\r\n    if(c.type == \"triplet\"){\r\n      let subjectNode = context.state.nodes.find(x => x.name == c.value.subject)\r\n      subjectNode == undefined ? subjectNode = await Vue.prototype.$newNode({name: c.value.subject}) : \"\"\r\n      if (c.value.predicate.startsWith('.'))\r\n      {\r\n        let p = c.value.predicate.slice(1)\r\n        let n = await Vue.prototype.$addProp({node: subjectNode, propertie: p, value: c.value.object})\r\n        await context.dispatch('saveNode', n)\r\n        await context.dispatch('getNodes')\r\n      }\r\n      else\r\n      {\r\n        let objectNode = context.state.nodes.find(x => x.id == c.value.object || x.name == c.value.object)\r\n        objectNode == undefined ? objectNode = await Vue.prototype.$newNode({name: c.value.object}) : \"\"\r\n        let nodes2save  = await Vue.prototype.$addLink({subject: subjectNode, predicate:c.value.predicate, object:objectNode})\r\n        nodes2save.forEach(async function(n) {\r\n          await context.dispatch('saveNode', n)\r\n        });\r\n        await context.dispatch('getNodes') // pose problème de rafraichissement, certainement car on a enlevé __ob & __threeObj\r\n      }\r\n    }\r\n  },\r\n  async newNode(context){\r\n    let node = await Vue.prototype.$newNode()\r\n    context.commit('setCurrentNode', node)\r\n  },\r\n  async saveNode(context, node){\r\n    node['@context'] == undefined ? node['@context'] = {} : \"\"\r\n    node['@context']['@vocab'] == undefined ? node['@context']['@vocab'] = vocab : \"\"\r\n    try{\r\n      // console.log(\"saving\", node)\r\n      await idb.saveNode(node);\r\n      await Vue.prototype.$saveNodeToGun(node)\r\n    }catch(e){\r\n      alert(e)\r\n    }\r\n  },\r\n  async removeNode(context,n){\r\n    console.log(\"removing\", n)\r\n    console.log(\"todo remove backlinks/reverse\")\r\n\r\n    if(n.reverse){\r\n      console.log(n.reverse)\r\n      for (const [key, value] of Object.entries(n.reverse)) {\r\n        let val = Array.isArray(value) ? value : [value]\r\n        console.log(val)\r\n        console.log(\"must remove\", n.id, \"in\",val, key);\r\n        console.log(\"get each node from id \")\r\n      }\r\n    }\r\n\r\n\r\n    // if (n.reverse){\r\n    //   console.log(\"must update DOES NOT WORK\", n.reverse)\r\n    //   for (const [key, value] of Object.entries(n.reverse)) {\r\n    //     console.log(key, \":\", value);\r\n    //     if(Array.isArray(value)){\r\n    //       for(const item of value ){\r\n    //         console.log(\"remove\",n.id , \"at\", key, \"from\",  item.name)\r\n    //         let node = context.state.nodes.find(x => x.id == item.id)\r\n    //         //  console.log(node)\r\n    //         console.log(\"----A\", key,  node[key])\r\n    //         if(Array.isArray(node[key])){\r\n    //           node[key] = node[key].filter(function(candidate) {\r\n    //             return candidate.id != n.id;\r\n    //           });\r\n    //         }else{\r\n    //           delete node[key]\r\n    //         }\r\n    //\r\n    //         console.log(\"====A\",key,  node[key])\r\n    //         console.log(node)\r\n    //         context.dispatch('saveNode',node)\r\n    //       }\r\n    //     }else{\r\n    //       console.log(\"remove object\", n.id, \"at\", key, \"from\",  value.id , value.name)\r\n    //       let node = context.state.nodes.find(x => x.id == value.id)\r\n    //       console.log(node)\r\n    //       console.log(\"----O\", key,  node[key])\r\n    //       if(Array.isArray(node[key])){\r\n    //         node[key] = node[key].filter(function(candidate) {\r\n    //           return candidate.id != n.id;\r\n    //         });\r\n    //       }else{\r\n    //         delete node[key]\r\n    //       }\r\n    //       // node[key] = node[key].filter(function(candidate) {\r\n    //       //   return candidate.id != n.id;\r\n    //       // });\r\n    //       // console.log(\"====O\",key,  node[key])\r\n    //       console.log(node)\r\n    //       context.dispatch('saveNode',node)\r\n    //     }\r\n    //   }\r\n    // }\r\n    try{\r\n      await idb.deleteNode(n);\r\n      context.state.links = context.state.links.filter(l => l.source != n.id && l.target != n.id)\r\n      context.state.nodes = context.state.nodes.filter(x=> x.id!= n.id)\r\n      await context.dispatch('getNodes')\r\n    }catch(e){\r\n      alert(e)\r\n    }\r\n\r\n\r\n  },\r\n  async removeAllNodes(context){\r\n    try{\r\n      context.state.links = []\r\n      context.state.nodes.forEach(async function(n) {\r\n        await idb.deleteNode(n);\r\n\r\n      });\r\n      context.state.nodes = []\r\n      await context.dispatch('getNodes')\r\n      //  await context.dispatch('getNodes')\r\n    }catch(e){\r\n      alert(e)\r\n    }\r\n  },\r\n  async getNodes(context) {\r\n    let nodes = await idb.getNodes();\r\n    let linksTemp = []\r\n    console.log(\"nodes in db\", nodes)\r\n    let last = null\r\n    nodes.forEach(n => {\r\n      n.type == undefined ? n.type = \"neurone\" : \"\"\r\n      n['@context'] == undefined ? n['@context'] = {} : \"\"\r\n      n['@context']['@vocab'] == undefined ? n['@context']['@vocab'] = vocab : \"\"\r\n      var index = context.state.nodes.findIndex(x => x.id==n.id);\r\n\r\n      index === -1 ? context.state.nodes.push(n) : Object.assign(context.state.nodes[index], n)\r\n      for (let [p,v] of Object.entries(n)){\r\n        if(!context.state.jsonldProps.includes(p) && !context.state.graphProps.includes(p)){\r\n          // console.log(\"#\", typeof v,p, v)\r\n          let rot = Math.random()*Math.PI\r\n          if(Array.isArray(v)){\r\n            for(let item of v ){\r\n              //  console.log('##',item.id, item)\r\n              linksTemp.push({source: n.id, target: item.id, label: p, curvature: .3, rotation: rot})\r\n            }\r\n          }else if(typeof v == \"object\" && v.id != undefined){\r\n            linksTemp.push({source: n.id, target: v.id, label: p, curvature: .3, rotation: rot})\r\n          }\r\n        }\r\n      }\r\n      last = n\r\n    });\r\n\r\n\r\n    let validLinks = linksTemp.filter(l => context.state.nodes.findIndex(n => n.id==l.target) > -1 )\r\n    let otherLinks = linksTemp.filter(l => context.state.nodes.findIndex(n => n.id==l.target) === -1 )\r\n    console.log(\"validlinks, otherlinks\",validLinks, otherLinks)\r\n    context.commit('setLinks', validLinks)\r\n    console.log(\"last\",last)\r\n  },\r\n  async saveBrain(context){\r\n    let {nodes, links} = context.state.graph.graphData()\r\n    console.log(nodes, links)\r\n    let nodes_ids = []\r\n    for (let node of nodes){\r\n      console.log(node)\r\n      delete node.__ob__\r\n      delete node.__threeObj\r\n      node.id == undefined ? node.id = uuidv4() : \"\"\r\n      node.created == undefined ? node.created = Date.now() : \"\"\r\n      node.updated = Date.now()\r\n      nodes_ids.push(node.id)\r\n      console.log(node)\r\n      await idb.saveNode(node);\r\n    }\r\n\r\n    let brain = {id: uuidv4(), nodes: nodes_ids, type: 'brain', color: \"#fffff\"}\r\n    await idb.saveNode(brain);\r\n    //  context.dispatch('getNodes')\r\n\r\n  },\r\n  switchTo(context, id){\r\n    let n = context.state.nodes.find(n=> n.id == id)\r\n    context.commit('setCurrentNode', n)\r\n  }\r\n  // async addWorkspace(context, w) {\r\n  //   context.state.pod.workspaces.push(w)\r\n  //   Vue.prototype.$addWorkspaceToPod(w)\r\n  // },\r\n}\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  actions,\r\n  mutations\r\n}\r\n","// import Vue from 'vue'\r\n// import idb from '@/api/idb-nodes';\r\n// import * as Automerge from 'automerge'\r\n// import { v4 as uuidv4 } from 'uuid';\r\n\r\nconst state = () => ({\r\n  // doc: null\r\n  session: null,\r\n  pod: null\r\n})\r\n\r\nconst mutations = {\r\n  setSession(state, s){\r\n    console.log(\"session\",s)\r\n    state.session = s\r\n  },\r\n  setPod(state, p){\r\n    console.log(\"pod\",p)\r\n    state.pod = p\r\n  },\r\n  // updateDoc(state, newDoc) {\r\n  //   state.doc = newDoc\r\n  //   //render(newDoc)\r\n  // },\r\n\r\n}\r\n\r\nconst actions = {\r\n  // async newDoc(context){\r\n  //   let doc = Automerge.init()\r\n  //   context.commit('setDoc', doc)\r\n  // },\r\n  // addItem(context, text) {\r\n  //   console.log(context.state.doc)\r\n  //   let newDoc = Automerge.change(context.state.doc, doc => {\r\n  //     if (!doc.items) doc.items = []\r\n  //     doc.items.push({ text, done: false })\r\n  //   })\r\n  //   context.commit('updateDoc', newDoc)\r\n  // }\r\n}\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  actions,\r\n  mutations\r\n}\r\n","// import Vue from 'vue'\r\n// import idb from '@/api/idb-nodes';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n//\r\n// const vocab = \"https://scenaristeur.github.io/agent/\"\r\n\r\nconst state = () => ({\r\n  showTerminal: false\r\n})\r\n\r\nconst mutations = {\r\n  toggleTerminal(state){\r\n    state.showTerminal = ! state.showTerminal\r\n  },\r\n}\r\n\r\nconst actions = {\r\n  // async pushCommandHistory(context, c){\r\n  //   context.commit('setCommand', c)\r\n  //   context.commit('pushHistory',c)\r\n  //   if(c.type == \"triplet\"){\r\n  //     let subjectNode = context.state.nodes.find(x => x.name == c.value.subject)\r\n  //     subjectNode == undefined ? subjectNode = await Vue.prototype.$newNode({name: c.value.subject}) : \"\"\r\n  //     if (c.value.predicate.startsWith('.'))\r\n  //     {\r\n  //       let p = c.value.predicate.slice(1)\r\n  //           let n = await Vue.prototype.$addProp({node: subjectNode, propertie: p, value: c.value.object})\r\n  //             await context.dispatch('saveNode', n)\r\n  //       await context.dispatch('getNodes')\r\n  //     }\r\n  //     else\r\n  //     {\r\n  //       let objectNode = context.state.nodes.find(x => x.id == c.value.object || x.name == c.value.object)\r\n  //       objectNode == undefined ? objectNode = await Vue.prototype.$newNode({name: c.value.object}) : \"\"\r\n  //       let nodes2save  = await Vue.prototype.$addLink({subject: subjectNode, predicate:c.value.predicate, object:objectNode})\r\n  //       nodes2save.forEach(async function(n) {\r\n  //         await context.dispatch('saveNode', n)\r\n  //       });\r\n  //       await context.dispatch('getNodes') // pose problème de rafraichissement, certainement car on a enlevé __ob & __threeObj\r\n  //     }\r\n  //   }\r\n  // },\r\n\r\n}\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  actions,\r\n  mutations\r\n}\r\n","// import Vue from 'vue'\r\n\r\nconst state = () => ({\r\n  rootNode: \"test-brains\",\r\n  gunBrains : []\r\n})\r\n\r\nconst mutations = {\r\n  setGunBrains(state, b){\r\n    state.gunBrains = b\r\n  },\r\n  async addGunBrains(state, b){\r\n    console.log(b)\r\n    const index = await state.gunBrains.findIndex(object => object.key == b.key);\r\n    console.log(index)\r\n    if (index === -1) {\r\n      let br = Object.assign({},b.node)\r\n      br.key = b.key\r\n      await state.gunBrains.push(br)\r\n      // await Vue.prototype.$gun.get(b.key).open(async (doc) => {\r\n      //   console.log(\"doc\",b.key,  doc)\r\n      //   doc.key = b.key\r\n      //   await state.gunBrains.push(doc)\r\n      // })\r\n    }\r\n\r\n\r\n\r\n  },\r\n  setRootNode(state,r){\r\n    state.rootNode = r\r\n  }\r\n  // setPod(state, p){\r\n  //   console.log(\"pod\",p)\r\n  //   state.pod = p\r\n  // },\r\n  // updateDoc(state, newDoc) {\r\n  //   state.doc = newDoc\r\n  //   //render(newDoc)\r\n  // },\r\n\r\n}\r\n\r\nconst actions = {\r\n  // async newDoc(context){\r\n  //   let doc = Automerge.init()\r\n  //   context.commit('setDoc', doc)\r\n  // },\r\n  // addItem(context, text) {\r\n  //   console.log(context.state.doc)\r\n  //   let newDoc = Automerge.change(context.state.doc, doc => {\r\n  //     if (!doc.items) doc.items = []\r\n  //     doc.items.push({ text, done: false })\r\n  //   })\r\n  //   context.commit('updateDoc', newDoc)\r\n  // }\r\n}\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  actions,\r\n  mutations\r\n}\r\n","import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport core from './modules/core'\r\nimport solid from './modules/solid'\r\nimport terminal from './modules/terminal'\r\nimport gun from './modules/gun'\r\n// import automerge from './modules/automerge'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n  },\r\n  getters: {\r\n  },\r\n  mutations: {\r\n  },\r\n  actions: {\r\n  },\r\n  modules: {\r\n    core, solid, terminal, gun /*automerge*/\r\n  }\r\n})\r\n","let worlds = [\r\n  {\r\n    name: \"gundb\",\r\n    onCreated: {action: \"$gunListen\"/*, params: \"brains\"*/},\r\n  //  onMounted: {action: \"$gunListen\", params: \"blop\"}, // brains\r\n    installed : null,\r\n    version: null,\r\n    type: \"gundb\",\r\n    state: null,\r\n    active: false\r\n  },\r\n  {name: \"browser\"},\r\n  {name: \"graph3d\"},\r\n  {name: 'indexeddb'},\r\n  {name: \"Solid Public\"},\r\n  {name: \"Solid Pod\"},\r\n  {name: \"Solid Friends\", active: false},\r\n  {name: \"Solid Notification\"},\r\n  {name: \"Wikidata\"},\r\n  {name: \"realtime\"},\r\n  {name: \"automerge\"},\r\n  {name: \"ipfs\", onCreated: {action: \"$initIpfs\"}, active: true},\r\n  {name: \"pinata\"},\r\n  {name: \"safe\"},\r\n  {name: \"darkweb\"},\r\n  {name: \"excel/ods\"},\r\n  {name: \"notion\"},\r\n  {name: \"upload\"},\r\n  {name: \"url_param\"},\r\n  {name: \"Persée\"},\r\n  {name: \"sparqlanything\"},\r\n  {name: \"semapps\"},\r\n  {name: \"websocket\"},\r\n  {name: \"socket.io\"},\r\n  {name: \"matrix-crdt\"},\r\n  {name: \"jmv\"},\r\n  {name: \"soukai\"}\r\n]\r\n\r\n\r\nexport { Galaxy }\r\n\r\nclass Galaxy {\r\n  constructor() {\r\n\r\n  }\r\n  init(){\r\n    this.worlds = worlds\r\n  }\r\n\r\n\r\n}\r\n","import { Galaxy } from '@/api/galaxy';\r\nconst plugin = {\r\n  install(Vue, opts = {}) {\r\n    let store = opts.store\r\n    console.log(store)\r\n    let galaxy = new Galaxy()\r\n    galaxy.init()\r\n    console.log(galaxy)\r\n    store.commit('core/setGalaxy', galaxy)\r\n    // Vue.prototype.$search = async function(params){\r\n    //   console.log(\"searching \", params.text, store.state.core.nodes)\r\n    //   let candidates = store.state.core.nodes\r\n    //   let results = candidates.filter(n => (n.name != undefined && n.name.includes(params.text)) )\r\n    //   if (params.searchById == true){\r\n    //     /* || n.id.includes(text)*/\r\n    //     let resultsById = candidates.filter(n => (n.id.includes(params.text)) )\r\n    //     results = results.concat(resultsById)\r\n    //   }\r\n    //\r\n    //\r\n    //   //store.commit('app/setBrain', brain)\r\n    //   return results\r\n    // }\r\n\r\n\r\n  }\r\n}\r\n\r\n// Auto-install\r\nif (typeof window !== 'undefined' && window.Vue) {\r\n  window.Vue.use(plugin)\r\n}\r\n\r\nexport default plugin\r\n","// import ForceGraph3D from '3d-force-graph';\r\nimport { Core /*Neurone, Brain,  Graph*/ } from '@/neurone-factory'\r\n//\r\n// let graph = undefined\r\nconst plugin = {\r\n  install(Vue, opts = {}) {\r\n    let store = opts.store\r\n    Vue.prototype.$coreInit = async function(options = {}){\r\n        let core = new Core(options)\r\n      store.commit ('core/setCore', core)\r\n    }\r\n    Vue.prototype.$spinnerAdd = function(task){\r\n      store.commit('core/spinnerAdd', task)\r\n    }\r\n    Vue.prototype.$spinnerRemove = function(task){\r\n      store.commit('core/spinnerRemove', task)\r\n    }\r\n  }\r\n}\r\n\r\n// Auto-install\r\nif (typeof window !== 'undefined' && window.Vue) {\r\n  window.Vue.use(plugin)\r\n}\r\n\r\nexport default plugin\r\n","import ForceGraph3D from '3d-force-graph';\r\nimport {CSS2DRenderer, CSS2DObject} from 'three/examples/jsm/renderers/CSS2DRenderer.js';\r\nimport SpriteText from 'three-spritetext';\r\nimport * as THREE from 'three';\r\n\r\n// let selectedNodes = new Set(),\r\n// let highlightNodes = new Set(),\r\n// highlightLinks = new Set(),\r\n// hoverNode= null\r\n// import { Neurone/*, Brain,*/ /* Graph*/ } from '@/neurone-factory'\r\n\r\n// let graph = undefined\r\nconst plugin = {\r\n  install(Vue, opts = {}) {\r\n    let store = opts.store\r\n    let size = getSize()\r\n\r\n    function getSize(){\r\n      //768 = medium bootstrap\r\n      return {w: window.innerWidth > 768 ? window.innerWidth/2 : window.innerWidth,\r\n        h: window.innerWidth > 768 ? window.innerHeight*.9 : window.innerHeight*.8}\r\n      }\r\n      window.addEventListener('resize', function(){\r\n        if (store.state.core.graph != null){\r\n          size = getSize()\r\n          store.state.core.graph.width(size.w)\r\n          store.state.core.graph.height(size.h)\r\n        }\r\n      } );\r\n\r\n\r\n      Vue.prototype.$graphInit = async function(options){\r\n        // console.log(options)\r\n        let graphData={nodes: [], links: []}\r\n        let highlightNodes = store.state.core.highlightNodes\r\n        let highlightLinks = store.state.core.highlightLinks\r\n        let hoverNode = store.state.core.hoverNode\r\n\r\n        let graph = ForceGraph3D({extraRenderers: [new CSS2DRenderer()]})(options.domElement).graphData(graphData)\r\n        graph\r\n        .width(size.w)\r\n        .height(size.h)\r\n        //.backgroundColor('#eafaff')\r\n        // .nodeId('id')\r\n        .nodeLabel('name')\r\n        .nodeAutoColorBy(\"type\")\r\n        .nodeRelSize(9)\r\n        .nodeColor(node => highligth(node) ? 'yellow' : highlightNodes.has(node) ? node === hoverNode ? 'rgb(255,0,0,1)' : 'rgba(255,160,0,0.8)' : node.color)\r\n        //.nodeColor(node => /*highlightNodes.has(node) ? node === hoverNode ? 'rgb(255,0,0,1)' : 'rgba(255,160,0,0.8)' :*/ node.color)\r\n        //.onBackgroundClick(event => onBackgroundClick(event))\r\n        .onNodeClick(node => onNodeClick(node))\r\n        .onLinkClick(ln => onLinkClick(ln))\r\n        .nodeThreeObjectExtend(node => node.shape == undefined || node.shape == null)\r\n        .nodeThreeObject(node => nodeThreeObject(node))\r\n        // .nodeThreeObject(node => nodeThreeObjectGroup(node))\r\n        .linkCurvature('curvature')\r\n        .linkCurveRotation('rotation')\r\n        .linkThreeObjectExtend(true)\r\n        .linkThreeObject(link => {\r\n          // extend link with text sprite\r\n          if(link.label != undefined){\r\n            const sprite = new SpriteText(`${link.label}`);\r\n            sprite.color = 'lightgrey';\r\n            sprite.textHeight = 1.5;\r\n            return sprite;\r\n          }\r\n        })\r\n        .linkDirectionalArrowLength(3.5)\r\n        .linkDirectionalArrowRelPos(1)\r\n        //  .linkCurvature(0.25)\r\n        .linkPositionUpdate((sprite, { start, end }) => {\r\n          if(sprite != undefined){\r\n            const middlePos = Object.assign(...['x', 'y', 'z'].map(c => ({\r\n              [c]: start[c] + (end[c] - start[c]) / 4 // calc middle point\r\n            })))\r\n            // Position sprite\r\n            Object.assign(sprite.position, middlePos);\r\n          }\r\n        })\r\n        .linkWidth(link => highlightLinks.has(link) ? 4 : 1)\r\n        .linkDirectionalParticles(link => highlightLinks.has(link) ? 4 : 0)\r\n        .linkDirectionalParticleWidth(4)\r\n        .onNodeHover(node => {\r\n          // no state change\r\n          if ((!node && !highlightNodes.size) || (node && hoverNode === node)) return;\r\n\r\n          highlightNodes.clear();\r\n          highlightLinks.clear();\r\n          if (node) {\r\n            highlightNodes.add(node);\r\n            //  node.neighbors.forEach(neighbor => highlightNodes.add(neighbor));\r\n            //  node.links.forEach(link => highlightLinks.add(link));\r\n          }\r\n\r\n          hoverNode = node || null;\r\n\r\n          Vue.prototype.$updateHighlight();\r\n        })\r\n        .onLinkHover(link => {\r\n          highlightNodes.clear();\r\n          highlightLinks.clear();\r\n\r\n          if (link) {\r\n            highlightLinks.add(link);\r\n            highlightNodes.add(link.source);\r\n            highlightNodes.add(link.target);\r\n          }\r\n          Vue.prototype.$updateHighlight();\r\n        })\r\n        // console.log(graph)\r\n        store.commit ('core/setGraph', graph)\r\n      }\r\n\r\n      function highligth(node){\r\n        //console.log(node)\r\n        return store.state.core.search != null && store.state.core.search.text.length > 0 && node.name.includes(store.state.core.search.text)\r\n      }\r\n      // Vue.prototype.$onNodeSearch = async function (node, event){\r\n      //   console.log(node, event)\r\n      //     // if (event.ctrlKey || event.shiftKey || event.altKey) { // multi-selection\r\n      //     //   store.state.core.selectedNodes.has(node) ? store.state.core.selectedNodes.delete(node) : store.state.core.selectedNodes.add(node);\r\n      //     // } else { // single-selection\r\n      //     //   const untoggle = store.state.core.selectedNodes.has(node) && store.state.core.selectedNodes.size === 1;\r\n      //     //   store.state.core.selectedNodes.clear();\r\n      //     //   !untoggle && store.state.core.selectedNodes.add(node);\r\n      //     // }\r\n      //     store.state.core.selectedNodes.add(node)\r\n      //\r\n      //     store.state.core.graph.nodeColor(store.state.core.graph.nodeColor()); // update color of selected nodes\r\n      //   }\r\n\r\n      Vue.prototype.$updateHighlight = function() {\r\n        // trigger update of highlighted objects in scene\r\n      //  console.log(store.state.core.highlightNodes)\r\n        let graph = store.state.core.graph\r\n        graph\r\n        .nodeColor(graph.nodeColor())\r\n        .linkWidth(graph.linkWidth())\r\n        .linkDirectionalParticles(graph.linkDirectionalParticles());\r\n      }\r\n\r\n\r\n      function onLinkClick(ln){\r\n        console.log(ln)\r\n      }\r\n\r\n\r\n      function nodeThreeObject(node){\r\n        let shape = null\r\n        let geometry = null\r\n        let material =   new THREE.MeshLambertMaterial({\r\n          color: node.color ||Math.round(Math.random() * Math.pow(2, 24)),\r\n          transparent: true,\r\n          opacity: 0.75\r\n        })\r\n        let image, texture, sprite = null\r\n        // console.log(material)\r\n        // console.log(node.shape)\r\n        switch (node.shape) {\r\n          case \"box\":\r\n          geometry = new THREE.BoxGeometry( 20,  20,  20)\r\n          break;\r\n          case \"cylinder\":\r\n          geometry = new THREE.CylinderGeometry( 10,  10,  20)\r\n          break;\r\n          case \"cone\":\r\n          geometry = new THREE.ConeGeometry( 10,  20)\r\n          break;\r\n          case \"dodecahedron\":\r\n          geometry = new THREE.DodecahedronGeometry( 10)\r\n          break;\r\n          case \"sphere\":\r\n          geometry = new THREE.SphereGeometry( 10)\r\n          break;\r\n          case \"torus\":\r\n          geometry = new THREE.TorusGeometry( 10,  2)\r\n          break;\r\n          case \"torusKnot\":\r\n          geometry = new THREE.TorusKnotGeometry( 10,  2)\r\n          break;\r\n          case \"base64\":\r\n          //  console.log(\"base64\",node)\r\n          image = new Image();\r\n          image.src = node.base64;\r\n          texture = new THREE.Texture();\r\n          texture.image = image;\r\n          image.onload = function () {\r\n            texture.needsUpdate = true;\r\n          };\r\n          material = new THREE.SpriteMaterial({ map: texture });\r\n          sprite = new THREE.Sprite(material);\r\n          sprite.scale.set(12, 12);\r\n          //return sprite;\r\n          break;\r\n          default:\r\n          //  geometry = null\r\n\r\n        }\r\n        if (sprite != null){\r\n          shape = sprite\r\n          //  console.log(\"sprite\", shape)\r\n        }else{\r\n          if(geometry == null){\r\n            const nodeEl = document.createElement('div');\r\n            nodeEl.textContent = node.name //node.id;\r\n            nodeEl.style.color = node.color || \"#ffffff\";\r\n            nodeEl.className = 'node-label';\r\n            shape = new CSS2DObject(nodeEl);\r\n            // console.log(shape)\r\n            // nodeEl.addEventListener('pointerdown', () => {\r\n            //   alert(1)\r\n            //   console.log(shape)\r\n            //  })\r\n          }else{\r\n            shape = new THREE.Mesh(geometry, material)\r\n          }\r\n        }\r\n        return shape\r\n      }\r\n\r\n\r\n      // function nodeThreeObjectGroup(node){\r\n      //\r\n      //   const group = new THREE.Group();\r\n      //\r\n      //   let label = null\r\n      //   let geometry = null\r\n      //   let material =   new THREE.MeshLambertMaterial({\r\n      //     color: node.color ||Math.round(Math.random() * Math.pow(2, 24)),\r\n      //     transparent: true,\r\n      //     opacity: 0.75\r\n      //   })\r\n      //   // console.log(material)\r\n      //   // console.log(node.shape)\r\n      //   switch (node.shape) {\r\n      //     case \"box\":\r\n      //     geometry = new THREE.BoxGeometry(Math.random() * 20, Math.random() * 20, Math.random() * 20)\r\n      //     break;\r\n      //     case \"cylinder\":\r\n      //     geometry = new THREE.CylinderGeometry(Math.random() * 10, Math.random() * 10, Math.random() * 20)\r\n      //     break;\r\n      //     case \"cone\":\r\n      //     geometry = new THREE.ConeGeometry(Math.random() * 10, Math.random() * 20)\r\n      //     break;\r\n      //     case \"dodecahedron\":\r\n      //     geometry = new THREE.DodecahedronGeometry(Math.random() * 10)\r\n      //     break;\r\n      //     case \"sphere\":\r\n      //     geometry = new THREE.SphereGeometry(Math.random() * 10)\r\n      //     break;\r\n      //     case \"torus\":\r\n      //     geometry = new THREE.TorusGeometry(Math.random() * 10, Math.random() * 2)\r\n      //     break;\r\n      //     case \"torusKnot\":\r\n      //     geometry = new THREE.TorusKnotGeometry(Math.random() * 10, Math.random() * 2)\r\n      //     break;\r\n      //     default:\r\n      //   }\r\n      //\r\n      //   const nodeEl = document.createElement('div');\r\n      //   nodeEl.textContent = node.name //node.id;\r\n      //   nodeEl.style.color = node.color || \"#ffffff\";\r\n      //   nodeEl.className = 'node-label';\r\n      //   label =  new CSS2DObject(nodeEl);\r\n      //\r\n      //   if (geometry != null){\r\n      //     group.add(new THREE.Mesh(geometry, material))\r\n      //   }\r\n      //   group.add(label)\r\n      //\r\n      //   return group\r\n      // }\r\n\r\n\r\n      // function nodeThreeObject1(node){\r\n      //   const nodeEl = document.createElement('div');\r\n      //   nodeEl.textContent = node.name //node.id;\r\n      //   nodeEl.style.color = node.color || \"#ffffff\";\r\n      //   nodeEl.className = 'node-label';\r\n      //   return new CSS2DObject(nodeEl);\r\n      // }\r\n      // function nodeThreeObject({url}){\r\n      //   // .nodeThreeObject(({ url }) => {\r\n      //\r\n      //   // if(url == undefined){\r\n      //   //   url = \"root\"\r\n      //   // }\r\n      //   if (url != undefined && (url.endsWith('.png') || url.endsWith('.jpg') || url.endsWith('.jpeg'))){\r\n      //     const imgTexture = new THREE.TextureLoader().load(`${url}`);\r\n      //     const material = new THREE.SpriteMaterial({ map: imgTexture });\r\n      //     const sprite = new THREE.Sprite(material);\r\n      //     sprite.scale.set(12, 12);\r\n      //     return sprite;\r\n      //   }\r\n      //\r\n      // // })\r\n      // }\r\n\r\n\r\n      async function onNodeClick(node){\r\n        // Aim at node from outside it\r\n        //  console.log(node)\r\n        //this.selectedNodes.clear()\r\n        //this.selectedNodes.has(node) ? this.selectedNodes.delete(node) : this.selectedNodes.add(node);\r\n        // console.log(this.selectedNodes)\r\n        // if(node.url != undefined && node.url.startsWith('http')){\r\n        //   app.$store.commit ('app/mustExplore', node.url)\r\n        // }\r\n        console.log(\"node\",node)\r\n\r\n        const distance = 40;\r\n        let pos = {x: distance, y: distance, z: distance}\r\n        if(node.x != 0 && node.y != 0 && node.z != 0){\r\n          const distRatio = 1 + distance/Math.hypot(node.x, node.y, node.z);\r\n          pos = { x: node.x * distRatio, y: node.y * distRatio, z: node.z * distRatio }\r\n        }\r\n        store.state.core.graph.cameraPosition(\r\n          pos, // new position\r\n          node, // lookAt ({ x, y, z })\r\n          3000  // ms transition duration\r\n        );\r\n        // console.log(store.state.core.graph)\r\n        let n = store.state.core.nodes.find(n => n.id == node.id)\r\n        store.commit ('core/setCurrentNode', n)\r\n\r\n      }\r\n\r\n      // async function onBackgroundClick(event){\r\n      //   // let node =       new Neurone(\r\n      //   //   {\r\n      //   //     //  blip: \"blop\",\r\n      //   //     //  color: this.randomColor(),\r\n      //   //     //\r\n      //   //     //  id: i,\r\n      //   //     //  name: \"node fictif \"+i, //\"name for graph_\",\r\n      //   //     age: 0,\r\n      //   //     type: \"neurone\",\r\n      //   //     color: '#ffff00'\r\n      //   //   }\r\n      //   // )\r\n      //   console.log(event)\r\n      //   store.dispatch('core/newNode')\r\n      //   // console.log(\"new\", node)\r\n      //   //  Vue.prototype.$bvModal.show(\"modal-node\")\r\n      //\r\n      // }\r\n    }\r\n  }\r\n\r\n  // Auto-install\r\n  if (typeof window !== 'undefined' && window.Vue) {\r\n    window.Vue.use(plugin)\r\n  }\r\n\r\n  export default plugin\r\n","// import ForceGraph3D from '3d-force-graph';\r\n// import { Core /*Neurone, Brain,  Graph*/ } from '@/neurone-factory'\r\n//\r\nimport { v4 as uuidv4 } from 'uuid';\r\n// let graph = undefined\r\nconst plugin = {\r\n  install(Vue, opts = {}) {\r\n    opts ? console.log(opts): {}\r\n    // let store = opts.store\r\n    // console.log(store)\r\n\r\n    Vue.prototype.$newNode = async function(options = {}){\r\n      if (options.name != undefined && options.name.startsWith(\"http\")){\r\n        console.log(\"search\", options)\r\n        let node = await Vue.prototype.$loadNeurone(options.name)\r\n        console.log(\"neurone\", node)\r\n        return node\r\n      }else{\r\n        let context =  {\r\n          \"name\": \"http://xmlns.com/foaf/0.1/name\",\r\n          \"knows\": \"http://xmlns.com/foaf/0.1/knows\",\r\n          \"@base\": \"http://local/\",\r\n          \"@vocab\": \"https://scenaristeur.github.io/agent/\",\r\n          \"id\": \"@id\",\r\n          \"type\": \"@type\",\r\n          \"reverse\": \"@reverse\",\r\n          \"homepage\": {\r\n            \"@id\": \"http://xmlns.com/foaf/0.1/homepage\",\r\n            \"@type\": \"@id\"\r\n          }\r\n        }\r\n        let node = {\r\n          \"@context\" : Object.assign(context, options['@context']),\r\n          \"id\": options['@id'] || options.id || uuidv4(),\r\n          \"name\": options.name && options.name['@value'] || options.name || \"\",\r\n          type: \"neurone\",\r\n         //'shape': 'sphere' || options.shape,\r\n          //color: \"#00ff00\",\r\n          \"homepage\": \"https://scenaristeur.github.io/agent/\",\r\n        };\r\n        if(options.base64 != undefined){\r\n          node.shape = 'base64'\r\n          node.base64 = options.base64\r\n          node.type = options.type\r\n        }\r\n\r\n        return node\r\n      }\r\n    }\r\n\r\n    Vue.prototype.$addProp = function(data){\r\n      let n = data.node\r\n      let p = data.propertie\r\n      let newValue = data.value\r\n      let oldValue = n[p]\r\n      console.log(typeof oldValue, oldValue)\r\n      if (oldValue == undefined){\r\n        n[p] = newValue\r\n      }else if(Array.isArray(oldValue)){\r\n        n[p].push(newValue)\r\n      }else{\r\n        n[p] = [oldValue, newValue]\r\n      }\r\n\r\n      // }else if(typeof oldValue == 'object'){\r\n      //\r\n      // }else if(typeof oldValue == 'string'){\r\n      //   n[p] = [oldValue, newValue]\r\n      // }else{\r\n      //   console.log(\"todo\", data)\r\n      // }\r\n\r\n\r\n\r\n      return n\r\n    }\r\n\r\n    Vue.prototype.$addLink = function(t){\r\n      console.log(t)\r\n      let s = t.subject\r\n      let p = t.predicate\r\n      let o = t.object\r\n      s = set(s, p, o)\r\n      o = setReverse(o, p, s)\r\n      return [s,o]\r\n    }\r\n\r\n    function setReverse(main, p, item){\r\n      main.reverse ==  undefined ? main.reverse = {}: \"\"\r\n      if(main.reverse[p] == undefined){\r\n        main.reverse[p] = {id: item.id, name: item.name}\r\n      }else{\r\n        switch (typeof main.reverse[p]) {\r\n          case \"string\":\r\n          console.log(\"TODO string\", main.reverse[p] )\r\n          break;\r\n          default:\r\n          if(Array.isArray(main.reverse[p])){\r\n            main.reverse[p].push({id: item.id, name: item.name})\r\n          }else{\r\n            let old = main.reverse[p]\r\n            main.reverse[p] = []\r\n            main.reverse[p].push(old)\r\n            main.reverse[p].push({id: item.id, name: item.name})\r\n          }\r\n        }\r\n      }\r\n      console.log(main)\r\n      return main\r\n    }\r\n    function set(main, p, item){\r\n      console.log(typeof main[p], main[p], item)\r\n      let name = item.name\r\n      let id = item.id\r\n\r\n      if(main[p] == undefined){\r\n        main[p] = {id: id, name: name}\r\n      }else{\r\n        switch (typeof main[p]) {\r\n          case \"string\":\r\n          console.log(\"TODO string\", main[p] )\r\n          // let old =\r\n          main[p] = [main[p]]\r\n          main[p].push({id: id, name: name})\r\n          break;\r\n          default:\r\n          if(Array.isArray(main[p])){\r\n            main[p].push({id: id, name: name})\r\n          }else{\r\n            let old = main[p]\r\n            main[p] = []\r\n            main[p].push(old)\r\n            main[p].push({id: id, name: name})\r\n          }\r\n        }\r\n      }\r\n      console.log(main)\r\n      return main\r\n    }\r\n\r\n\r\n    // Vue.prototype.$findNodeByName = async function(name){\r\n    //   console.log(name)\r\n    //   let nodes = store.state.nodes\r\n    //   console.log(nodes)\r\n    //\r\n    //\r\n    //\r\n    //\r\n    //\r\n    //\r\n    // }\r\n    //\r\n    // Vue.prototype.$findNodeById = async function(id){\r\n    //   console.log(id)\r\n    //   let nodes = store.state.nodes\r\n    //   console.log(nodes)\r\n    //\r\n    // }\r\n\r\n\r\n  }\r\n}\r\n\r\n// Auto-install\r\nif (typeof window !== 'undefined' && window.Vue) {\r\n  window.Vue.use(plugin)\r\n}\r\n\r\nexport default plugin\r\n","import {\r\n  getSolidDataset,\r\n  getThingAll,\r\n  //getPublicAccess,\r\n  //  getAgentAccess,\r\n  //getSolidDatasetWithAcl,\r\n  //getPublicAccess,\r\n  //getAgentAccess,\r\n  // getFile,\r\n  // isRawData,\r\n  // getContentType,\r\n  //saveFileInContainer,\r\n  // getContainedResourceUrlAll,\r\n  // getStringNoLocaleAll,\r\n  // createContainerAt,\r\n  // getSourceUrl,\r\n  // deleteFile,\r\n  //removeThing,\r\n  // removeAll,\r\n  //removeStringNoLocale,\r\n  //deleteContainer,\r\n  //addStringNoLocale,\r\n  //setThing,\r\n  //saveSolidDatasetAt,\r\n  //createSolidDataset,\r\n  //createThing,\r\n  //addUrl,\r\n  //buildThing,\r\n  //overwriteFile,\r\n  getStringNoLocale,\r\n  getThing,\r\n  getUrlAll,\r\n  getUrl,\r\n  //addDatetime,\r\n  //  getDatetime,\r\n  //setUrl,\r\n  //setStringNoLocale,\r\n  //setDecimal,\r\n  //setInteger,\r\n  //  getDecimal,\r\n  //getInteger,\r\n  // setDatetime\r\n} from \"@inrupt/solid-client\";\r\nimport { FOAF, /*LDP,*/ VCARD, /*RDF,*/ AS, /*RDFS, OWL*/  } from \"@inrupt/vocab-common-rdf\";\r\nimport { WS, SOLID } from \"@inrupt/vocab-solid-common\";\r\n\r\nimport * as sc from '@inrupt/solid-client-authn-browser'\r\n\r\nconst plugin = {\r\n  install(Vue, opts = {}) {\r\n    let store = opts.store\r\n\r\n    Vue.prototype.$checkSolidSession = async function(){\r\n      await sc.handleIncomingRedirect({\r\n        restorePreviousSession: true\r\n      }).then((info) => {\r\n        if(info.isLoggedIn ==  true){\r\n          console.log(`Logged in with WebID [${info.webId}]`)\r\n          store.commit('solid/setSession',info)\r\n          let session = sc.getDefaultSession()\r\n          this.$getPodInfosFromSession(session)\r\n        }\r\n      })\r\n\r\n    },\r\n\r\n    Vue.prototype.$login = async function(issuer){\r\n      console.log(\"login\", issuer)\r\n      if (!sc.getDefaultSession().info.isLoggedIn) {\r\n        await sc.login({\r\n          oidcIssuer: issuer,\r\n          redirectUrl: window.location.href,\r\n          clientName: \"Verse\"\r\n        });\r\n      }\r\n    },\r\n\r\n    Vue.prototype.$logout = async function(){\r\n      let session = sc.getDefaultSession()\r\n      await session.logout()\r\n      store.commit('solid/setSession',null)\r\n      store.commit('solid/setPod', null)\r\n      //store.dispatch('nodes/clearStore')\r\n    },\r\n    Vue.prototype.$getPodInfosFromSession = async function(session){\r\n      // try{\r\n      let pod = {}\r\n      pod.logged = session.info.isLoggedIn\r\n      if (pod.logged) {\r\n        pod.webId = session.info.webId\r\n        pod = await this.$getPodInfos(pod)\r\n        pod.neuroneStore == undefined ? pod.neuroneStore = pod.storage+'public/neurones/' : \"\"\r\n        pod.workspaces == undefined ? pod.workspaces = [] : \"\"\r\n\r\n        store.commit('solid/setPod', pod)\r\n        //  this.$checkChanges()\r\n        //this.$synchronize()\r\n        //  await this.$getVerses(pod)\r\n\r\n        if (pod.storage != null){\r\n          pod.brains = pod.storage+'brains.json'\r\n          Vue.prototype.$checkBrains()\r\n          //  this.$setCurrentThingUrl(pod.storage)\r\n          //  store.commit('booklice/setPath', pod.storage+'public/bookmarks/')\r\n          //let publicTagFile = pod.storage+'public/tags.ttl'\r\n          //let privateTagFile = podStorage+'private/tags.ttl'\r\n          // let tags = await this.$getTags(publicTagFile)\r\n          // console.log(\"############################tags\",tags)\r\n        }\r\n      }else{\r\n        store.commit('solid/setPod', null)\r\n        //  store.commit('solid/setThings', [])\r\n      }\r\n      // } catch(e){\r\n      //   alert(\"$getPodInfosFromSession \"+e)\r\n      // }\r\n    },\r\n    Vue.prototype.$getPodInfos = async function(pod){\r\n      try{\r\n        const dataset = await getSolidDataset( pod.webId, { fetch: sc.fetch });\r\n        let profile = await getThing( dataset, pod.webId );\r\n        pod.name = await getStringNoLocale(profile, FOAF.name);\r\n        pod.friends = await getUrlAll(profile, FOAF.knows).map(webId => {return {webId: webId}})\r\n        pod.storage = await getUrl(profile, WS.storage);\r\n        pod.photo = await getUrl(profile, VCARD.hasPhoto);\r\n        pod.neuroneStore == undefined ? pod.neuroneStore = pod.storage+'public/neurones/' : \"\"\r\n        pod.workspaces = []\r\n\r\n        let publicTypeIndexUtl = pod.storage+'settings/publicTypeIndex.ttl'\r\n        const pti_ds = await getSolidDataset( publicTypeIndexUtl, { fetch: sc.fetch });\r\n        let indexes = await getThingAll(pti_ds)\r\n        for await (const i of indexes){\r\n          let types = await getUrlAll(i, \"http://www.w3.org/ns/solid/terms#forClass\");\r\n          //console.log(types)\r\n          if(types.includes(\"https://scenaristeur.github.io/verse#Workspace\")){\r\n            console.log(i)\r\n            let ws = {}\r\n            ws.name =  await getStringNoLocale(i, AS.name)\r\n            ws.url = await getUrl(i,SOLID.instance)\r\n            pod.workspaces.push(ws)\r\n          }\r\n        }\r\n        //console.log(ws)\r\n        //  pod.workspaces = await getUrlAll(pti_ds, \"http://www.w3.org/ns/solid/terms#forClass\", \"https://www.w3.org/ns/activitystreams#Collection\");\r\n        // pod.publicTags = await this.$getTags(pod.storage+'public/tags.ttl')\r\n        // store.commit(\"vatch/addToNetwork\", pod.publicTags)\r\n        //this.$subscribe(pod.storage)\r\n        //  console.log(\"getpodinfos\",pod)\r\n      }catch(e)\r\n      {\r\n        console.log(\"erreur\",e, pod)\r\n      }\r\n      console.log(pod)\r\n      return await pod\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n}\r\n\r\n// Auto-install\r\nif (typeof window !== 'undefined' && window.Vue) {\r\n  window.Vue.use(plugin)\r\n}\r\n\r\nexport default plugin\r\n","// import ForceGraph3D from '3d-force-graph';\r\n// import { Core /*Neurone, Brain,  Graph*/ } from '@/neurone-factory'\r\n//\r\nimport { v4 as uuidv4 } from 'uuid';\r\n// let graph = undefined\r\n\r\n\r\nimport {\r\n  getSolidDataset,\r\n  // getThingAll,\r\n  //getPublicAccess,\r\n  //  getAgentAccess,\r\n  //getSolidDatasetWithAcl,\r\n  //getPublicAccess,\r\n  //getAgentAccess,\r\n  getFile,\r\n  // isRawData,\r\n  // getContentType,\r\n  //saveFileInContainer,\r\n  getContainedResourceUrlAll,\r\n  //getStringNoLocaleAll,\r\n  // createContainerAt,\r\n  getSourceUrl,\r\n  // deleteFile,\r\n  //removeThing,\r\n  // removeAll,\r\n  //removeStringNoLocale,\r\n  //deleteContainer,\r\n  // addStringNoLocale,\r\n  // setThing,\r\n  // saveSolidDatasetAt,\r\n  //createSolidDataset,\r\n  // createThing,\r\n  // addUrl,\r\n  //buildThing,\r\n\r\n  overwriteFile,\r\n  // getStringNoLocale,\r\n  // getThing,\r\n  // getUrlAll,\r\n  // getUrl,\r\n  //addDatetime,\r\n  //  getDatetime,\r\n  //setUrl,\r\n  //setStringNoLocale,\r\n  //setDecimal,\r\n  //setInteger,\r\n  //  getDecimal,\r\n  //getInteger,\r\n  // setDatetime\r\n} from \"@inrupt/solid-client\";\r\n\r\n// import * as jsonld from 'jsonld';\r\n// import { RDF,  } from \"@inrupt/vocab-common-rdf\";\r\n\r\nimport * as sc from '@inrupt/solid-client-authn-browser'\r\nconst plugin = {\r\n  install(Vue, opts = {}) {\r\n    let store = opts.store\r\n\r\n    Vue.prototype.$saveBrainToSolid = async function(){\r\n      console.log(store.state.core.nodes)\r\n      if(store.state.solid.pod == null){\r\n        alert(\"Please Login to your pod before trying to save this brain\")\r\n      }else{\r\n\r\n        let suggestedpath = store.state.solid.pod.storage+\"brains/\"\r\n        console.log(suggestedpath)\r\n\r\n        let  path = prompt(\"Please confirm the path where to store the nodes\", suggestedpath);\r\n        console.log(path)\r\n        if(path != null){\r\n          path = !path.endsWith('/') ? path+= '/' : path\r\n\r\n          store.state.core.nodes.forEach(n => {\r\n            Vue.prototype.$spinnerAdd({id: \"saving \"+n.id})\r\n          });\r\n\r\n\r\n\r\n          for await (const n of store.state.core.nodes){\r\n            console.log(n.id, n)\r\n\r\n            n['@context']['@base'] = path\r\n\r\n            const savedFile = await overwriteFile(\r\n              path+lastPartOfUrl(n.id),\r\n              new Blob([JSON.stringify(n)], { type: \"application/ld+json\" }),\r\n              { contentType: \"application/ld+json\", fetch: sc.fetch }\r\n            );\r\n            //  console.log(savedFile)\r\n\r\n            console.log(`File saved at ${getSourceUrl(savedFile)}`);\r\n            Vue.prototype.$spinnerRemove({id: \"saving \"+n.id})\r\n\r\n\r\n            // let brainsDataset = await getSolidDataset(\r\n            //   store.state.solid.pod.brains, {\r\n            //     fetch: sc.fetch\r\n            //   });\r\n            //\r\n            //   let brain = await getThing(brainsDataset, path, {fetch: sc.fetch})\r\n            //   console.log(brain)\r\n            //   if (brain == null){\r\n            //\r\n            //\r\n            //\r\n            //\r\n            //\r\n            //\r\n            //\r\n            //\r\n            //     // let last = lastPartOfUrl(path)\r\n            //     // console.log(last)\r\n            //     // let brainThing = createThing({ name: last });\r\n            //     // brainThing = addStringNoLocale(brainThing, \"http://xmlns.com/foaf/0.1/name\", last);\r\n            //     // brainThing = addUrl(brainThing, RDF.type, \"https://scenaristeur.github.io/agent/brain\");\r\n            //     // brainsDataset = setThing(brainsDataset, brainThing);\r\n            //     // console.log(brainsDataset)\r\n            //     // const savedSolidDataset = await saveSolidDatasetAt(\r\n            //     //   store.state.solid.pod.brains,\r\n            //     //   brainsDataset,\r\n            //     //   { fetch: sc.fetch }             // fetch from authenticated Session\r\n            //     // );\r\n            //     // console.log(savedSolidDataset)\r\n            //   }\r\n\r\n          }\r\n\r\n          Vue.prototype.$spinnerAdd({id: \"saving \"+store.state.solid.pod.brains})\r\n          const brainsFile = await getFile(store.state.solid.pod.brains, { fetch: sc.fetch });\r\n          //  console.log(brainsFile)\r\n          const reader = new FileReader();\r\n          reader.onload = async () => {\r\n            try {\r\n\r\n              let brainsIndex = JSON.parse(reader.result)\r\n\r\n              let now = Date.now()\r\n              let currentBrain = {id: path, name: lastPartOfUrl(path), updated: now, checksum: 1000*Math.random()}\r\n              var index = brainsIndex.brains.findIndex(x => x.id==currentBrain.id);\r\n              if(index === -1){\r\n                currentBrain.created= now\r\n                brainsIndex.brains.push(currentBrain)\r\n              }else{\r\n                Object.assign(brainsIndex.brains[index], currentBrain)\r\n              }\r\n\r\n\r\n              await overwriteFile(\r\n                store.state.solid.pod.brains,\r\n\r\n                new Blob([JSON.stringify(brainsIndex)], { type: \"application/ld+json\" }),\r\n                { contentType: \"application/ld+json\", fetch: sc.fetch }\r\n              );\r\n\r\n              //reload brains\r\n              Vue.prototype.$checkBrains()\r\n              Vue.prototype.$spinnerRemove({id: \"saving \"+store.state.solid.pod.brains})\r\n            } catch (err) {\r\n              console.log(err);\r\n            }\r\n          };\r\n          reader.onerror = (error) => {\r\n            console.log(error);\r\n          };\r\n          reader.readAsText(brainsFile);\r\n\r\n        }else{\r\n          alert(\"saving to Solid Pod aborted\")\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    Vue.prototype.$loadBrainsFromWikidata = async function(tags){\r\n      console.log(tags)\r\n\r\n      tags.forEach(async function(t) {\r\n        console.log(t)\r\n        let node = {id: t.url, name: t.item.aliases && t.item.aliases[0] || t.item.label || t.text, color: \"lightblue\", url: t.url, source: \"https://wikidata.org\"}\r\n\r\n\r\n        await store.dispatch('core/saveNode', node)\r\n\r\n      });\r\n\r\n      await store.dispatch('core/getNodes')\r\n\r\n\r\n\r\n      // let test = \"https://www.wikidata.org/wiki/Special:EntityData/Q182665.jsonld\"\r\n      // console.log(test)\r\n      //loadExternalNeurones(tags)\r\n\r\n    }\r\n\r\n    Vue.prototype.$brainsFromPod = async function(pod){\r\n      let path = pod.storage+\"public/brains/\"\r\n      Vue.prototype.$spinnerAdd({id: \"loading \"+path})\r\n      let dataset = null\r\n      try{\r\n        dataset = await getSolidDataset( path, { fetch: sc.fetch });\r\n        let remotesUrl  = await getContainedResourceUrlAll(dataset,{fetch: sc.fetch} )\r\n        console.log(remotesUrl)\r\n        await loadNeurones(remotesUrl)\r\n        return remotesUrl\r\n      }\r\n      catch(e){\r\n        console.log(e)\r\n      }\r\n      Vue.prototype.$spinnerRemove({id: \"loading \"+path})\r\n    }\r\n\r\n\r\n    Vue.prototype.$loadBrainFromSolid = async function(path){\r\n      if (path == undefined){\r\n        let suggestedpath = store.state.solid.pod != null ? store.state.solid.pod.storage+\"brains/\" : \"https://solid.provider/brains_folder or example...\"\r\n        console.log(suggestedpath)\r\n        path = prompt(\"Load brain from \", suggestedpath);\r\n      }\r\n\r\n      if(path != null){\r\n        console.log(\"load brain from\", path)\r\n        Vue.prototype.$spinnerAdd({id: \"loading \"+path})\r\n        let dataset = null\r\n        try{\r\n          dataset = await getSolidDataset( path, { fetch: sc.fetch });\r\n          let remotesUrl  = await getContainedResourceUrlAll(dataset,{fetch: sc.fetch} )\r\n          console.log(remotesUrl)\r\n          await loadNeurones(remotesUrl)\r\n        }\r\n        catch(e){\r\n          alert(e)\r\n        }\r\n        Vue.prototype.$spinnerRemove({id: \"loading \"+path})\r\n      }\r\n    }\r\n\r\n    Vue.prototype.$checkBrains = async function(){\r\n      Vue.prototype.$spinnerAdd({id: \"checkBrains\"})\r\n      try{\r\n        const file = await getFile(store.state.solid.pod.brains, { fetch: sc.fetch });\r\n        console.log(file)\r\n      }catch(e){\r\n        let default_brains = {\r\n          \"@context\": {\r\n            \"name\": \"http://xmlns.com/foaf/0.1/name\",\r\n            \"knows\": \"http://xmlns.com/foaf/0.1/knows\",\r\n            \"@base\": \"http://local/\",\r\n            \"@vocab\": \"https://scenaristeur.github.io/agent/\",\r\n            \"id\": \"@id\",\r\n            \"type\": \"@type\",\r\n            \"reverse\": \"@reverse\",\r\n            \"homepage\": {\r\n              \"@id\": \"http://xmlns.com/foaf/0.1/homepage\",\r\n              \"@type\": \"@id\"\r\n            }\r\n          },\r\n          \"id\": uuidv4(),\r\n          \"name\": \"Brain Index\",\r\n          type: \"brainIndex\",\r\n          brains: [],\r\n          \"homepage\": \"https://scenaristeur.github.io/agent\",\r\n        };\r\n        await overwriteFile(\r\n          store.state.solid.pod.brains,\r\n          new Blob([JSON.stringify(default_brains)], { type: \"application/ld+json\" }),\r\n          { contentType: \"application/ld+json\", fetch: sc.fetch }\r\n        );\r\n      }\r\n\r\n      try{\r\n        const file = await getFile(store.state.solid.pod.brains, { fetch: sc.fetch });\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = async () => {\r\n          try {\r\n            let brainsIndex = JSON.parse(reader.result)\r\n            store.commit('core/setBrains',brainsIndex)\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        };\r\n        reader.onerror = (error) => {\r\n          console.log(error);\r\n        };\r\n        reader.readAsText(file);\r\n      }catch(e){\r\n        console.log(e)\r\n      }finally{\r\n        Vue.prototype.$spinnerRemove({id: \"checkBrains\"})\r\n      }\r\n    }\r\n\r\n\r\n    // async function loadExternalNeurones(sources){\r\n    //   // todo : move move outside \"solid\"-data-plugin\r\n    //   console.log(sources)\r\n    //   let test = \"simple\" // \"jsonld\" || \"json\"\r\n    //   // let test =  \"jsonld\"\r\n    //\r\n    //   for await (let s of sources){\r\n    //     console.log(s)\r\n    //     let id = s.item.id\r\n    //     let node = null\r\n    //\r\n    //     if(test == \"simple\"){\r\n    //       let response = await fetch(\"https://www.wikidata.org/wiki/Special:EntityData/\"+id+\".json\")\r\n    //       let data = await response.json()\r\n    //       console.log(data)\r\n    //       node = data.entities[id]\r\n    //       console.log(node)\r\n    //       await store.dispatch('core/saveNode', node)\r\n    //       //let node = JSON.parse(reader.result)\r\n    //\r\n    //     }else{\r\n    //       //full loading the graph of the resource\r\n    //       Vue.prototype.$spinnerAdd({id: \"loading \"+id})\r\n    //       let response = await fetch(\"https://www.wikidata.org/wiki/Special:EntityData/\"+id+\".jsonld\")\r\n    //       let jsonld = await response.json()\r\n    //       console.log(jsonld)\r\n    //       console.log(jsonld['@graph'])\r\n    //       let cpt = 1000\r\n    //       for(let item of jsonld['@graph']){\r\n    //         if (cpt ==0){\r\n    //           store.dispatch('core/getNodes')\r\n    //           Vue.prototype.$spinnerRemove({id: \"loading \"+id})\r\n    //           return\r\n    //         }\r\n    //         cpt--\r\n    //         Vue.prototype.$spinnerAdd({id: \"loading \"+cpt})\r\n    //         console.log(cpt)\r\n    //         console.log(item)\r\n    //         // let options = {}\r\n    //        item['@context'] == undefined ? item['@context'] = jsonld['@context'] : \"\"\r\n    //         // // item['@context'].id = '@id'\r\n    //         // // item['@context'].type = \"@type\"\r\n    //         // options.id = item['@id']\r\n    //         // options.name = item.about\r\n    //         // //  item.type = item['@type']\r\n    //         // console.log(options)\r\n    //         node = Vue.prototype.$newNode(item)\r\n    //         console.log(node)\r\n    //         await store.dispatch('core/saveNode', node)\r\n    //         Vue.prototype.$spinnerRemove({id: \"loading \"+cpt})\r\n    //\r\n    //       }\r\n    //\r\n    //     }\r\n    //\r\n    //     console.log(\"done\")\r\n    //\r\n    //     store.dispatch('core/getNodes')\r\n    //\r\n    //   }\r\n    //\r\n    //\r\n    //   //     var url = \"https://en.wikipedia.org/w/api.php\";\r\n    //   //\r\n    //   //     var params = {\r\n    //   //         action: \"query\",\r\n    //   //         format: \"json\",\r\n    //   //         titles: \"Lyon\",\r\n    //   //         prop: \"links\"\r\n    //   //     };\r\n    //   //\r\n    //   //     url = url + \"?origin=*\";\r\n    //   //     Object.keys(params).forEach(function(key){url += \"&\" + key + \"=\" + params[key];});\r\n    //   //\r\n    //   //     fetch(url)\r\n    //   //         .then(function(response){return response.json();})\r\n    //   //         .then(function(response) {\r\n    //   //           console.log(response)\r\n    //   //             var pages = response.query.pages;\r\n    //   //             for (var p in pages) {\r\n    //   //                 for (var l of pages[p].links) {\r\n    //   //                     console.log(l.title);\r\n    //   //                 }\r\n    //   //             }\r\n    //   //         })\r\n    //   //         .catch(function(error){console.log(error);});\r\n    //   //\r\n    //   // }\r\n    //\r\n    //\r\n    //   // async function loadExternalNeurones1(sources){\r\n    //   //   console.log(sources)\r\n    //   //\r\n    //   //   var url = \"https://wikidata.org/w/api.php\";\r\n    //   //   // var url = \"https://en.wikipedia.org/w/api.php\";\r\n    //   //\r\n    //   //   var params = {\r\n    //   //     action: \"query\",\r\n    //   //     format: \"json\",\r\n    //   //     // titles: \"Albert Einstein\",\r\n    //   //     pageids: \"680\",\r\n    //   //     prop: \"links\"\r\n    //   //   };\r\n    //   //   // var params = {\r\n    //   //   //     action: \"query\",\r\n    //   //   //     format: \"json\",\r\n    //   //   //     list: \"tags\",\r\n    //   //   //     tgprop: \"hitcount\",\r\n    //   //   //     tglimit: \"3\"\r\n    //   //   // };\r\n    //   //\r\n    //   //   url = url + \"?origin=*\";\r\n    //   //   Object.keys(params).forEach(function(key){url += \"&\" + key + \"=\" + params[key];});\r\n    //   //\r\n    //   //\r\n    //   //   fetch(url)\r\n    //   //   .then(function(response){return response.json();})\r\n    //   //   .then(function(response) {\r\n    //   //     var pages = response.query.pages;\r\n    //   //     for (var p in pages) {\r\n    //   //       for (var l of pages[p].links) {\r\n    //   //         console.log(l.title);\r\n    //   //       }\r\n    //   //     }\r\n    //   //   })\r\n    //   //   .catch(function(error){console.log(error);});\r\n    //   //\r\n    //   //   // fetch(url)\r\n    //   //   //     .then(function(response){return response.json();})\r\n    //   //   //     .then(function(response) {\r\n    //   //   //         var tags = response.query.tags;\r\n    //   //   //         for (var t in tags) {\r\n    //   //   //             console.log(tags[t].name);\r\n    //   //   //         }\r\n    //   //   //     })\r\n    //   //   //     .catch(function(error){console.log(error);});\r\n    //   //\r\n    //   //\r\n    //   //   // const filePromises = sources.map(async function(s) {\r\n    //   //   //   // let url = s.url+'.jsonld'\r\n    //   //   //   let url = s.item.concepturi+\".jsonld&origin*\"\r\n    //   //   //   //https://www.wikidata.org/entity/Q42.jsonld\r\n    //   //   //   console.log(\"loading\",s.text)\r\n    //   //   //   try{\r\n    //   //   //     console.log(\"fetching\",url)\r\n    //   //   //     const res = await fetch(url)\r\n    //   //   //     const data = await res.json()\r\n    //   //   //     console.log(data)\r\n    //   //   //     // this.items = suggestions.search\r\n    //   //   //     // console.log(this.items)\r\n    //   //   //     // this.autocompleteItems = suggestions.search.map(a => {\r\n    //   //   //     //   return { text: a.match.text+\" (\"+a.description+\")\", url: a.concepturi };\r\n    //   //   //     // });\r\n    //   //   //   }catch(e){\r\n    //   //   //     alert(e)\r\n    //   //   //   }\r\n    //   //   // });\r\n    //   //   //\r\n    //   //   // // Wait for all promises to be resolved\r\n    //   //   // await Promise.all(filePromises);\r\n    //   //   //  store.dispatch('core/getNodes')\r\n    //   //\r\n    //   //\r\n    // }\r\n\r\n    async function loadNeurones(remotesUrl){\r\n\r\n      // urls.forEach(async function (u) {\r\n      //   // let doc = null\r\n      //   console.log(u)\r\n      //   const file = await getFile(u, { fetch: sc.fetch });\r\n      //   //  console.log(file)\r\n      //   const reader = new FileReader();\r\n      //\r\n      //   reader.onload = async () => {\r\n      //     try {\r\n      //       //response =\r\n      //       // Resolve the promise with the response value\r\n      //       let doc = JSON.parse(reader.result)\r\n      //       let context = doc['@context']\r\n      //       console.log(\"result\", doc);\r\n      //\r\n      //       const compacted = await jsonld.compact(doc, context);\r\n      //       console.log(JSON.stringify(compacted, null, 2));\r\n      //\r\n      //       await store.dispatch('core/saveNode', compacted)\r\n      //\r\n      //\r\n      //     } catch (err) {\r\n      //       console.log(err);\r\n      //     }\r\n      //   };\r\n      //   reader.onerror = (error) => {\r\n      //     console.log(error);\r\n      //   };\r\n      //   reader.readAsText(file);\r\n      //\r\n      // });\r\n\r\n      // let nodes = []\r\n\r\n      const filePromises = remotesUrl.map(async function(url) {\r\n\r\n        if(url.endsWith('/')){\r\n          Vue.prototype.$loadBrainFromSolid(url)\r\n          return\r\n        }\r\n\r\n        // Return a promise per file\r\n        Vue.prototype.$spinnerAdd({id: \"loading \"+url})\r\n        const file = await getFile(url, { fetch: sc.fetch });\r\n        return new Promise( function(resolve, reject) {\r\n\r\n          const reader = new FileReader();\r\n          reader.onload = async () => {\r\n            try {\r\n              //response =\r\n              // Resolve the promise with the response value\r\n              let node = JSON.parse(reader.result)\r\n              await store.dispatch('core/saveNode', node)\r\n              Vue.prototype.$spinnerRemove({id: \"loading \"+url})\r\n              resolve(node);\r\n            } catch (err) {\r\n              reject(err);\r\n            }\r\n          };\r\n          reader.onerror = (error) => {\r\n            reject(error);\r\n          };\r\n          reader.readAsText(file);\r\n        });\r\n      });\r\n\r\n      // Wait for all promises to be resolved\r\n      await Promise.all(filePromises);\r\n      store.dispatch('core/getNodes')\r\n\r\n    }\r\n\r\n    Vue.prototype.$loadNeurone = async function(url){\r\n      Vue.prototype.$spinnerAdd({id: \"loading \"+url})\r\n      const file = await getFile(url, { fetch: sc.fetch });\r\n      return new Promise( function(resolve, reject) {\r\n\r\n        const reader = new FileReader();\r\n        reader.onload = async () => {\r\n          try {\r\n            //response =\r\n            // Resolve the promise with the response value\r\n            let node = JSON.parse(reader.result)\r\n          //  await store.dispatch('core/saveNode', node)\r\n            Vue.prototype.$spinnerRemove({id: \"loading \"+url})\r\n            resolve(node);\r\n          } catch (err) {\r\n            reject(err);\r\n          }\r\n        };\r\n        reader.onerror = (error) => {\r\n          reject(error);\r\n        };\r\n        reader.readAsText(file);\r\n      });\r\n    }\r\n\r\n    function lastPartOfUrl(str){\r\n      var n = str.lastIndexOf('/');\r\n      var result = str.substring(n + 1);\r\n      return result.length == 0 ? lastPartOfUrl(str.slice(0, -1)) : result\r\n    }\r\n\r\n    // Vue.prototype.$newNode = function(options = {}){\r\n    //   let node = {\r\n    //     \"@context\": {\r\n    //       \"name\": \"http://xmlns.com/foaf/0.1/name\",\r\n    //       \"knows\": \"http://xmlns.com/foaf/0.1/knows\",\r\n    //       \"id\": \"@id\",\r\n    //       \"type\": \"@type\",\r\n    //       \"reverse\": \"@reverse\",\r\n    //       \"homepage\": {\r\n    //         \"@id\": \"http://xmlns.com/foaf/0.1/homepage\",\r\n    //         \"@type\": \"@id\"\r\n    //       }\r\n    //     },\r\n    //     \"id\": \"http://local/\"+uuidv4(),\r\n    //     \"name\": options.name || \"\",\r\n    //     type: \"neurone\",\r\n    //     //color: \"#00ff00\",\r\n    //     \"homepage\": \"http://manu.sporny.org/\",\r\n    //     // \"knows\": [{\r\n    //     //   \"name\": \"Daniele\"\r\n    //     // }, {\r\n    //     //   \"name\": \"Lucio\"\r\n    //     // }],\r\n    //     // \"knows\": [{\r\n    //     //   \"id\": \"_:7053c150-5fea-11e3-a62e-adadc4e3df76\",\r\n    //     //   \"name\": \"Boby\"\r\n    //     // }, {\r\n    //     //   \"id\": \"_:9d2bb59d-3baf-42ff-ba5d-9f8eab34ada4\",\r\n    //     //   \"name\": \"John\"\r\n    //     // }]\r\n    //   };\r\n    //\r\n    //   return node\r\n    // }\r\n    //\r\n    // Vue.prototype.$addProp = function(data){\r\n    //   let n = data.node\r\n    //   let p = data.propertie\r\n    //   let newValue = data.value\r\n    //   let oldValue = n[p]\r\n    //   console.log(typeof oldValue, oldValue)\r\n    //   if (oldValue == undefined){\r\n    //     n[p] = newValue\r\n    //   }else if(Array.isArray(oldValue)){\r\n    //     n[p].push(newValue)\r\n    //   }else{\r\n    //     n[p] = [oldValue, newValue]\r\n    //   }\r\n    //\r\n    //   // }else if(typeof oldValue == 'object'){\r\n    //   //\r\n    //   // }else if(typeof oldValue == 'string'){\r\n    //   //   n[p] = [oldValue, newValue]\r\n    //   // }else{\r\n    //   //   console.log(\"todo\", data)\r\n    //   // }\r\n    //\r\n    //\r\n    //\r\n    //   return n\r\n    // }\r\n    //\r\n    // Vue.prototype.$addLink = function(t){\r\n    //   console.log(t)\r\n    //   let s = t.subject\r\n    //   let p = t.predicate\r\n    //   let o = t.object\r\n    //   s = set(s, p, o)\r\n    //   o = setReverse(o, p, s)\r\n    //   return [s,o]\r\n    // }\r\n    //\r\n    // function setReverse(main, p, item){\r\n    //   main.reverse ==  undefined ? main.reverse = {}: \"\"\r\n    //   if(main.reverse[p] == undefined){\r\n    //     main.reverse[p] = {id: item.id, name: item.name}\r\n    //   }else{\r\n    //     switch (typeof main.reverse[p]) {\r\n    //       case \"string\":\r\n    //       console.log(\"TODO string\", main.reverse[p] )\r\n    //       break;\r\n    //       default:\r\n    //       if(Array.isArray(main.reverse[p])){\r\n    //         main.reverse[p].push({id: item.id, name: item.name})\r\n    //       }else{\r\n    //         let old = main.reverse[p]\r\n    //         main.reverse[p] = []\r\n    //         main.reverse[p].push(old)\r\n    //         main.reverse[p].push({id: item.id, name: item.name})\r\n    //       }\r\n    //     }\r\n    //   }\r\n    //   console.log(main)\r\n    //   return main\r\n    // }\r\n    // function set(main, p, item){\r\n    //   console.log(typeof main[p], main[p], item)\r\n    //   if(main[p] == undefined){\r\n    //     main[p] = {id: item.id, name: item.name}\r\n    //   }else{\r\n    //     switch (typeof main[p]) {\r\n    //       case \"string\":\r\n    //       console.log(\"TODO string\", main[p] )\r\n    //       break;\r\n    //       default:\r\n    //       if(Array.isArray(main[p])){\r\n    //         main[p].push({id: item.id, name: item.name})\r\n    //       }else{\r\n    //         let old = main[p]\r\n    //         main[p] = []\r\n    //         main[p].push(old)\r\n    //         main[p].push({id: item.id, name: item.name})\r\n    //       }\r\n    //     }\r\n    //   }\r\n    //   console.log(main)\r\n    //   return main\r\n    // }\r\n\r\n\r\n    // Vue.prototype.$findNodeByName = async function(name){\r\n    //   console.log(name)\r\n    //   let nodes = store.state.nodes\r\n    //   console.log(nodes)\r\n    //\r\n    //\r\n    //\r\n    //\r\n    //\r\n    //\r\n    // }\r\n    //\r\n    // Vue.prototype.$findNodeById = async function(id){\r\n    //   console.log(id)\r\n    //   let nodes = store.state.nodes\r\n    //   console.log(nodes)\r\n    //\r\n    // }\r\n\r\n\r\n  }\r\n}\r\n\r\n// Auto-install\r\nif (typeof window !== 'undefined' && window.Vue) {\r\n  window.Vue.use(plugin)\r\n}\r\n\r\nexport default plugin\r\n","// import ForceGraph3D from '3d-force-graph';\r\n// import { Core /*Neurone, Brain,  Graph*/ } from '@/neurone-factory'\r\n//\r\n\r\n// import * as IPFS from 'ipfs-core' // pb webpack https://github.com/ipfs/js-ipfs/issues/1927\r\n\r\n\r\nimport {concat} from 'uint8arrays'\r\n\r\n// import { v4 as uuidv4 } from 'uuid';\r\n\r\nconst plugin = {\r\n  async install(Vue, opts = {}) {\r\n    let store = opts.store\r\n    let IPFS, ipfs\r\n\r\n    Vue.prototype.$initIpfs = async function(){\r\n       IPFS = window.IpfsCore;\r\n      ipfs = await IPFS.create()\r\n      let id = await ipfs.id()\r\n      console.log(ipfs,id )\r\n      store.commit('core/setIpfsNode',id)\r\n    }\r\n\r\n\r\n    Vue.prototype.$saveBrainToIpfs = async function(){\r\n\r\n      console.log(\"IPFS\",ipfs,store.state.core.nodes)\r\n      let nodes = store.state.core.nodes\r\n    //  let links = store.state.core.links\r\n    //  let graph = nodes.concat(links)\r\n      const graph_cid = await ipfs.add(JSON.stringify(nodes))\r\n\r\n      console.log(graph_cid)\r\n      store.commit('core/setGraphCid', graph_cid)\r\n\r\n    }\r\n\r\nVue.prototype.$loadBrainFromIpfs = async function(cid){\r\n  console.log(cid)\r\n  let chunks = []\r\n\r\n  for await (const chunk of ipfs.cat(cid)) {\r\n    chunks.push(chunk);\r\n  }\r\n\r\n  const data = concat(chunks)\r\n  const decodedData = JSON.parse(new TextDecoder().decode(data).toString());\r\n  console.log(\"decoded\",decodedData)\r\n  for await (const node of decodedData) {\r\n    await store.dispatch('core/saveNode', node)\r\n  }\r\n  console.log('1')\r\n  await store.dispatch('core/getNodes')\r\n  console.log('2')\r\n  //alert(\"comming soon\",JSON.stringify(decodedData))\r\n\r\n}\r\n\r\n\r\n    Vue.prototype.$saveNodesToIpfs = async function(){\r\n\r\n      console.log(\"IPFS\",ipfs,store.state.core.nodes)\r\n      store.commit('core/resetIpfsCid')\r\n\r\n\r\n      store.state.core.nodes.forEach(async function(node) {\r\n\r\n        console.log(node)\r\n        const cid = await ipfs.add(JSON.stringify(node))\r\n        console.log(cid, node)\r\n        let c = {cid: cid.path, name: node.name, id: node.id}\r\n        store.commit('core/addIpfsCid', c)\r\n        let chunks = []\r\n\r\n        for await (const chunk of ipfs.cat(cid.path)) {\r\n          chunks.push(chunk);\r\n        }\r\n\r\n        const data = concat(chunks)\r\n        const decodedData = JSON.parse(new TextDecoder().decode(data).toString());\r\n        console.log(decodedData)\r\n        // const cid = await ipfs.object.new(node)\r\n        // console.log(cid)\r\n      });\r\n\r\n\r\n\r\n      // we loop over the results because 'add' supports multiple\r\n      // additions, but we only added one entry here so we only see\r\n      // one log line in the output\r\n      // for await (const { cid } of results) {\r\n      //   // CID (Content IDentifier) uniquely addresses the data\r\n      //   // and can be used to get it again.\r\n      //   console.log(cid.toString())\r\n      // }\r\n\r\n      // const { cid } = await ipfs.add('Hello world')\r\n      // console.info(cid)\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n  }\r\n}\r\n\r\n// Auto-install\r\nif (typeof window !== 'undefined' && window.Vue) {\r\n  window.Vue.use(plugin)\r\n}\r\n\r\nexport default plugin\r\n","// from https://github.com/Dletta/visualGraph/blob/master/visualGraph.js\r\n/* Depth First Search - explore all of the nodes from the given Soul\r\n* then update D3 data and the force-layout from the html\r\n*/\r\nimport Gun from 'gun'\r\nvar stack;\r\nvar nodes;\r\nvar edges;\r\nvar start;\r\nvar u;\r\nvar label;\r\nvar opt = false;\r\nvar stop = false;\r\nvar limit = 500;\r\nvar gun = undefined\r\nlet mod = undefined\r\n\r\nvar util = {}\r\n\r\n  util.printMap = function (map) {\r\n    var array = Array.from(map);\r\n    var i =0;\r\n    var l = array.length;\r\n    for(;i<l;i++){\r\n      console.log(array[i][1])\r\n    }\r\n  }\r\n\r\n  util.printArr = function (array){\r\n    var i =0;\r\n    var l = array.length;\r\n    for(;i<l;i++){\r\n      console.log(array[i])\r\n    }\r\n  };\r\n\r\n  util.makeNodes = function (map){\r\n    var array = Array.from(map);\r\n    var nodes = [];\r\n    var i =0;\r\n    var l = array.length;\r\n    for(;i<l;i++){\r\n      nodes.push(array[i][1])\r\n    }\r\n    return nodes;\r\n  };\r\n\r\n  util.makeEdges = function (map) {\r\n    var array = Array.from(map);\r\n    var edges = [];\r\n    var i =0;\r\n    var l = array.length;\r\n    for(;i<l;i++){\r\n      edges.push(array[i][1])\r\n    }\r\n    return edges;\r\n  };\r\n\r\nexport { Dfs }\r\n\r\nclass Dfs {\r\n  constructor(_gun) {\r\n    gun = _gun\r\n    console.log(gun)\r\n    mod = this\r\n  }\r\n  search(soul, lbl, lim){\r\n    console.log('Starting with:',soul);\r\n    if(lbl){opt = true;} else { opt = false;}\r\n    if(lim){limit = lim}\r\n    console.log(limit);\r\n    label = lbl;\r\n    start = soul;\r\n    stack = [];\r\n    nodes = new Map();\r\n    edges = new Map();\r\n    gun.get(soul).once(mod.node)\r\n  }\r\n\r\n  node(node, key) {\r\n    //console.log('called', nodes.size);\r\n    if(!node){console.error('no data:',key, node); mod.back();return;}\r\n    var soul = Gun.node.soul(node);\r\n    if(soul == start){\r\n      stack.push(soul);\r\n    }\r\n    u = node;\r\n    if(!opt || node[label] == undefined){\r\n      nodes.set(soul, {id:soul,label:key})\r\n    } else {\r\n      nodes.set(soul, {id:soul,label:node[label]})\r\n    }\r\n    console.log(this)\r\n    console.log(u, edges)\r\n    mod.edge(u, edges);\r\n  }\r\n\r\n\r\n    edge(node, edges) {\r\n      if(stop){console.log('stopped');return;}\r\n      var temp;\r\n      var soul = Gun.node.soul(node);\r\n      var tLabel = 'none';\r\n      var arr = Object.keys(node);\r\n      for(var item of arr){\r\n        //save label if the prop meets the label\r\n        if(item == label) { tLabel = node[item] }\r\n        //console.log(tLabel);\r\n        // if it's an object, then there is more\r\n        if(typeof node[item] == 'object'){\r\n          //skip nulled items or metadata\r\n          if(node[item] == null || item == \"_\"){continue}\r\n          if(!edges.has(soul+node[item]['#'])){\r\n           temp = node[item];\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if(temp){\r\n        mod.next(temp, soul,temp['#'], tLabel);\r\n      } else {\r\n        if(start == soul) {stack.pop()}\r\n        mod.back();\r\n      }\r\n    }\r\n\r\n    next(next, edgeS, edgeT, tLabel) {\r\n      console.log(tLabel)\r\n      var v = next;\r\n      var soul = v['#'];\r\n      nodes.set(soul, {id:soul,label:v['#']})\r\n      edges.set(edgeS+edgeT, {source:edgeS,target:edgeT})\r\n      stack.push(soul)\r\n      u = v;\r\n      if(nodes.size >= limit){console.info('Reached limit');mod.render();return;}\r\n      gun.get(soul).once(mod.node)\r\n    }\r\n\r\n  back() {\r\n    if(!(stack.length == 0)){\r\n      var soul = stack.pop();\r\n      gun.get(soul).once(mod.node)\r\n    } else {\r\n      mod.render();\r\n    }\r\n  }\r\n\r\n    render() {\r\n      //console.log('Rendering');\r\n      let graph = {}\r\n      graph.nodes = util.makeNodes(nodes);\r\n      graph.edges = util.makeEdges(edges);\r\n      console.log(\"graph\", graph)\r\n      //update();\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n// var DFS = (function(){\r\n//   var stack;\r\n//   var nodes;\r\n//   var edges;\r\n//   var start;\r\n//   var u;\r\n//   var label;\r\n//   var opt = false;\r\n//   var stop = false;\r\n//   var limit = 500;\r\n//\r\n//   var util = {};\r\n//\r\n//   util.printMap = function (map) {\r\n//     var array = Array.from(map);\r\n//     var i =0;\r\n//     var l = array.length;\r\n//     for(;i<l;i++){\r\n//       console.log(array[i][1])\r\n//     }\r\n//   }\r\n//\r\n//   util.printArr = function (array){\r\n//     var i =0;\r\n//     var l = array.length;\r\n//     for(;i<l;i++){\r\n//       console.log(array[i])\r\n//     }\r\n//   };\r\n//\r\n//   util.makeNodes = function (map){\r\n//     var array = Array.from(map);\r\n//     var nodes = [];\r\n//     var i =0;\r\n//     var l = array.length;\r\n//     for(;i<l;i++){\r\n//       nodes.push(array[i][1])\r\n//     }\r\n//     return nodes;\r\n//   };\r\n//\r\n//   util.makeEdges = function (map) {\r\n//     var array = Array.from(map);\r\n//     var edges = [];\r\n//     var i =0;\r\n//     var l = array.length;\r\n//     for(;i<l;i++){\r\n//       edges.push(array[i][1])\r\n//     }\r\n//     return edges;\r\n//   };\r\n//\r\n//   var dfs = {};\r\n//\r\n//   dfs.search = function(soul, lbl, lim){\r\n//     console.log('Starting with:',soul);\r\n//     if(lbl){opt = true;} else { opt = false;}\r\n//     if(lim){limit = lim}\r\n//     console.log(limit);\r\n//     label = lbl;\r\n//     start = soul;\r\n//     stack = [];\r\n//     nodes = new Map();\r\n//     edges = new Map();\r\n//     gun.get(soul).once(dfs.node)\r\n//   };\r\n//\r\n//   dfs.node = function(node, key) {\r\n//     //console.log('called', nodes.size);\r\n//     if(!node){console.error('no data:',key, node); dfs.back();return;}\r\n//     var soul = Gun.node.soul(node);\r\n//     if(soul == start){\r\n//       stack.push(soul);\r\n//     }\r\n//     u = node;\r\n//     if(!opt || node[label] == undefined){\r\n//       nodes.set(soul, {id:soul,label:key})\r\n//     } else {\r\n//       nodes.set(soul, {id:soul,label:node[label]})\r\n//     }\r\n//     dfs.edge(u, edges);\r\n//   };\r\n//\r\n//   dfs.edge = function (node, edges) {\r\n//     if(stop){console.log('stopped');return;}\r\n//     var temp;\r\n//     var soul = Gun.node.soul(node);\r\n//     var tLabel = 'none';\r\n//     var arr = Object.keys(node);\r\n//     for(var item of arr){\r\n//       //save label if the prop meets the label\r\n//       if(item == label) { tLabel = node[item] }\r\n//       //console.log(tLabel);\r\n//       // if it's an object, then there is more\r\n//       if(typeof node[item] == 'object'){\r\n//         //skip nulled items or metadata\r\n//         if(node[item] == null || item == \"_\"){continue}\r\n//         if(!edges.has(soul+node[item]['#'])){\r\n//          temp = node[item];\r\n//\r\n//           break;\r\n//         }\r\n//       }\r\n//     }\r\n//     if(temp){\r\n//       dfs.next(temp, soul,temp['#'], tLabel);\r\n//     } else {\r\n//       if(start == soul) {stack.pop()}\r\n//       dfs.back();\r\n//     }\r\n//   };\r\n//\r\n//   dfs.next = function (next, edgeS, edgeT, tLabel) {\r\n//     console.log(tLabel)\r\n//     var v = next;\r\n//     var soul = v['#'];\r\n//     nodes.set(soul, {id:soul,label:v['#']})\r\n//     edges.set(edgeS+edgeT, {source:edgeS,target:edgeT})\r\n//     stack.push(soul)\r\n//     u = v;\r\n//     if(nodes.size >= limit){console.info('Reached limit');dfs.render();return;}\r\n//     gun.get(soul).once(dfs.node)\r\n//   };\r\n//\r\n//   dfs.back = function () {\r\n//     if(!(stack.length == 0)){\r\n//       var soul = stack.pop();\r\n//       gun.get(soul).once(dfs.node)\r\n//     } else {\r\n//       dfs.render();\r\n//     }\r\n//   };\r\n//\r\n//   dfs.render = function () {\r\n//     //console.log('Rendering');\r\n//     let graph = {}\r\n//     graph.nodes = util.makeNodes(nodes);\r\n//     graph.edges = util.makeEdges(edges);\r\n//     console.log(\"graph\", graph)\r\n//     update();\r\n//   };\r\n//\r\n//   return dfs;\r\n// }) (Gun, gun, graph, update);\r\n","// import * as sc from '@inrupt/solid-client-authn-browser'\r\n// gun JSON https://gist.github.com/rosko/57ab2083ee4adf2f078d4d76851d9dc6\r\nimport { Dfs } from '@/api/dfs';\r\n\r\nconst plugin = {\r\n  install(Vue, opts = {}) {\r\n    let store = opts.store\r\n    //  console.log(store)\r\n\r\n\r\n    Vue.prototype.$gunSearch = async function(/*'brains')*/){\r\n      console.log(Dfs)\r\n      let dfs = new Dfs(Vue.prototype.$gun)\r\n      dfs.search(store.state.gun.rootNode, 'name')\r\n    }\r\n\r\n    Vue.prototype.$gunListen = async function(){\r\n      // let gunBrains = []\r\n      console.log(\"Map\",await Vue.prototype.$gun.get(store.state.gun.rootNode).map())\r\n      await Vue.prototype.$gun.get(store.state.gun.rootNode).map().on(\r\n        (node, key) => store.commit('gun/addGunBrains', {node:node, key: key})\r\n      )\r\n      //   function(node,key) {\r\n      //   console.log(node,key)\r\n      //   Vue.prototype.$gun.get(key).open((doc) => {\r\n      //   //console.log(\"doc\",key,  doc)\r\n      //   doc.key = key\r\n      //   gunBrains.push(doc)\r\n      // //  gunBrains[key] = doc\r\n      //   console.log(gunBrains)\r\n      //     store.commit('gun/setGunBrains', gunBrains)\r\n      //   });\r\n    }\r\n\r\n\r\n\r\n    // await Vue.prototype.$gun.get('neurones').map().on(function(node,key) {\r\n    // //  console.log(node,key)\r\n    // let gunNeurones = []\r\n    //   Vue.prototype.$gun.get(key).open((doc) => {\r\n    //   //console.log(\"doc\",key,  doc)\r\n    //   doc.key = key\r\n    //   gunNeurones.push(doc)\r\n    // //  gunBrains[key] = doc\r\n    //   console.log(gunNeurones)\r\n    //     //store.commit('gun/setGunBrains', gunBrains)\r\n    //   });\r\n    // })\r\n\r\n    // }\r\n    Vue.prototype.$saveBrainToGun = async function(){\r\n      let path = Vue.prototype.$gun.get(store.state.gun.rootNode).get(store.state.core.brain.key).get('nodes')\r\n      for await (const n of store.state.core.nodes){\r\n        delete n['@context']\r\n        console.error(\"must not be used , use store.rootNode\",n.id, n)\r\n        path.set(n)\r\n\r\n      }\r\n    }\r\n\r\n    Vue.prototype.$saveNodeToGun = async function(node){\r\n      console.log(\"Brain\", store.state.core.brain, store.state.core.galaxy, store.state.core.galaxy.worlds, node)\r\n      // if (store.state.brain != null){\r\n      //\r\n      // }\r\n\r\n    }\r\n\r\n    Vue.prototype.$gunSet = async function(object){\r\n      console.log(store.state.gun.rootNode, object)\r\n      Vue.prototype.$gun.get(store.state.gun.rootNode).set(object)\r\n    }\r\n\r\n    Vue.prototype.$gunExplore = async function(){\r\n      // inspiration https://github.com/Stefdv/gun-ui-graph/blob/master/gun-ui-graph.html\r\n      let rootNode = store.state.gun.rootNode\r\n      console.log(rootNode)\r\n      console.log('build gun._.graph')\r\n      // var self = this\r\n      // function each(node) {\r\n      //   console.log(node)\r\n      //   //self._processGunNode(node)\r\n      // }\r\n      // function ended(collection) {\r\n      //   console.log('Done mapping over:', collection);\r\n      //   //self._initCy()\r\n      //\r\n      //\r\n      //   self._mapNodes()\r\n      // }\r\n\r\n      let node = Vue.prototype.$gun.get(rootNode)//.valMapEnd(each,ended)\r\n      console.log(\"Gun Node\", node)\r\n      let graph = await processNode(node)\r\n      console.log(\"graph\", graph)\r\n      console.log(Vue.prototype.$gun)\r\n      Vue.prototype.$gun.get(rootNode).open((doc) => {\r\n        console.log(\"doc\", doc)\r\n      });\r\n      return graph\r\n\r\n    }\r\n    async function processNode(n){\r\n      let gunNodes = []\r\n      var soul = n._['#'];\r\n      console.log(\"soul\", soul)\r\n      n.map().once((node) => {\r\n        //console.log(key, node)\r\n        gunNodes.push(node)\r\n        // add results straight to the Vue component state\r\n        // and get updates when nodes are updated by GUN\r\n        // this.todos[key] = node;\r\n        //  console.log(this.todos)\r\n      });\r\n      //let isSet = await _isSet(soul)\r\n      //console.log(isSet)\r\n      // console.log(gunNodes)\r\n      return gunNodes\r\n    }\r\n\r\n\r\n    // Vue.prototype.$createBrain = async function(brain){\r\n    //\r\n    //   console.log(\"creation\",brain)\r\n    //   let brains = []\r\n    //   let rootNode = null\r\n    //   switch (brain.world) {\r\n    //     case \"gun\":\r\n    //     if (brain.privacy == \"user\"){\r\n    //       rootNode = Vue.prototype.$gun.user().get('brains')\r\n    //     }else {\r\n    //       rootNode = Vue.prototype.$gun.get('brains')\r\n    //     }\r\n    //\r\n    //\r\n    //\r\n    //     rootNode.map().on((node, key) => {\r\n    //       console.log(key, node)\r\n    //       brains.push({key: key, node: node})\r\n    //       // add results straight to the Vue component state\r\n    //       // and get updates when nodes are updated by GUN\r\n    //       // this.todos[key] = node;\r\n    //       //  console.log(this.todos)\r\n    //     });\r\n    //\r\n    //     rootNode.set({name: brain.name, created: Date.now(), type: brain.type})\r\n    //\r\n    //\r\n    //     brain.brains = brains\r\n    //     console.log(\"brains\",brain.brains)\r\n    //\r\n    //\r\n    //\r\n    //     break;\r\n    //     default:\r\n    //     console.log(\"todo\")\r\n    //   }\r\n    //\r\n    //   //store.commit('app/setBrain', brain)\r\n    //   return brain\r\n    // }\r\n\r\n    // Vue.prototype.$gunGet = async function(brain){\r\n    //   let gunNodes = []\r\n    //   Vue.prototype.$gun.get(brain.name).map().on((node, key) => {\r\n    //     console.log(key, node)\r\n    //     gunNodes.push({key: key, node: node})\r\n    //     // add results straight to the Vue component state\r\n    //     // and get updates when nodes are updated by GUN\r\n    //     // this.todos[key] = node;\r\n    //     //  console.log(this.todos)\r\n    //   });\r\n    //   console.log(gunNodes)\r\n    //   brain.gunNodes = gunNodes\r\n    //   console.log(brain)\r\n    //   store.commit('app/setBrain', brain)\r\n    //   //  Vue.prototype.$listenNeurones(brain)\r\n    //   return brain\r\n    // }\r\n\r\n\r\n\r\n    Vue.prototype.$saveToGun = async function(data){\r\n      console.log(\"brain\", store.state.gun.brain)\r\n      let brain_name = store.state.gun.brain.name\r\n      console.log(data, data.value, data.triple)\r\n      let object = data.triple.object\r\n      delete object.__ob__\r\n      delete object.__threeObj\r\n      let objectNode  = Vue.prototype.$gun.get(brain_name).set(object)\r\n\r\n      let subject = data.triple.subject\r\n      delete subject.__ob__\r\n      delete subject.__threeObj\r\n\r\n      let key = data.triple.edge.label\r\n      subject[key] = objectNode\r\n\r\n\r\n      console.log(subject)\r\n\r\n      Vue.prototype.$gun.get(brain_name).set(subject)\r\n\r\n    }\r\n\r\n    // Vue.prototype.$listenNeurones = async function(brain){\r\n    //   Vue.prototype.$gun.get(brain.name).map().on((node, key) => {\r\n    //     console.log(key, node)\r\n    //     // add results straight to the Vue component state\r\n    //     // and get updates when nodes are updated by GUN\r\n    //     // this.todos[key] = node;\r\n    //     //  console.log(this.todos)\r\n    //   });\r\n    //   console.log(\"ready to hear neurones\")\r\n    // }\r\n\r\n\r\n\r\n\r\n    // async function _isSet(ref){\r\n    //   Vue.prototype.$gun.get(ref).once(function(node){\r\n    //     let set = true\r\n    //     let iterated = false\r\n    //     console.log(node)\r\n    //     // Vue.prototype.$gun.node.is(node, function(value, field){\r\n    //     //   console.log(field)\r\n    //     //   iterated = true\r\n    //     //   if(!Vue.prototype.$gun.val.rel.is(value)){\r\n    //     //     set = false\r\n    //     //   }\r\n    //     // })\r\n    //     return {set: set, iterated: iterated}\r\n    //   })\r\n    // }\r\n\r\n  }\r\n}\r\n\r\n// Auto-install\r\nif (typeof window !== 'undefined' && window.Vue) {\r\n  window.Vue.use(plugin)\r\n}\r\n\r\nexport default plugin\r\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport './registerServiceWorker'\r\nimport router from './router'\r\nimport store from './store'\r\n\r\n// import OsCorePlugin from './plugins/os-core-plugin';\r\n// Vue.use(OsCorePlugin, {store: store});\r\nimport GalaxyPlugin from './plugins/galaxy-plugin';\r\nVue.use(GalaxyPlugin, {store: store});\r\n\r\nimport VueSocialSharing from 'vue-social-sharing'\r\nVue.use(VueSocialSharing);\r\n\r\nimport CorePlugin from './plugins/core-plugin';\r\nVue.use(CorePlugin, {store: store});\r\n\r\nimport Graph3dPlugin from './plugins/graph3d-plugin';\r\nVue.use(Graph3dPlugin, {store: store});\r\nimport ToolsPlugin from './plugins/tools-plugin';\r\nVue.use(ToolsPlugin, {store: store});\r\nimport SolidPlugin from './plugins/solid-plugin';\r\nVue.use(SolidPlugin, {store: store});\r\nimport SolidDataPlugin from './plugins/solid-data-plugin';\r\nVue.use(SolidDataPlugin, {store: store});\r\nimport IpfsDataPlugin from './plugins/ipfs-data-plugin';\r\nVue.use(IpfsDataPlugin, {store: store});\r\n// import LevelgraphJsonLDPlugin from './plugins/levelgraphjsonld-plugin';\r\n// Vue.use(LevelgraphJsonLDPlugin, {store: store});\r\nimport VueFab from 'vue-float-action-button'\r\n\r\nVue.use(VueFab,  {\r\n  // opitons Optional Alibaba iconfont icon or MaterialIcons\r\n  iconType: 'MaterialDesign'\r\n  // iconType: 'iconfont'\r\n} )\r\n\r\n\r\nimport { BootstrapVue, IconsPlugin } from 'bootstrap-vue'\r\n\r\n// Import Bootstrap an BootstrapVue CSS files (order is important)\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport 'bootstrap-vue/dist/bootstrap-vue.css'\r\n\r\n// Make BootstrapVue available throughout your project\r\nVue.use(BootstrapVue)\r\n// Optionally install the BootstrapVue icon components plugin\r\nVue.use(IconsPlugin)\r\n\r\nimport GunPlugin from './plugins/gun-plugin';\r\nVue.use(GunPlugin, {store: store});\r\n\r\nimport VueGun from 'vue-gun';\r\nimport('gun/lib/load.js')\r\n// import SEA from 'gun/sea'; // Required for SEA functions and user authentication\r\n// Vue.use(SEA)\r\nVue.use(VueGun, {\r\n  //  gun: gun // must be passed in at `gun` key\r\n   peers: ['https://spogg.herokuapp.com/gun',/*'http://localhost:9090/gun',*/ 'https://gun-manhattan.herokuapp.com/gun'/*, 'http://gunjs.herokuapp.com/gun/'*/] // run gun-starter-app on port 9090\r\n});\r\n\r\n\r\n\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  router,\r\n  store,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n","\r\nexport default\r\n{\r\n  \"@context\": {\r\n    \"as\": \"https://www.w3.org/ns/activitystreams#\",\r\n    \"ve\": \"https://scenaristeur.github.io/verse#\",\r\n    \"id\": \"@id\",\r\n    \"type\": \"@type\",\r\n    \"name\": \"ve:name\",\r\n    \"age\": \"ve:age\",\r\n    \"url\": \"ve:url\",\r\n    \"privacy\": \"ve:privacy\",\r\n    //\"type\": \"ve:type\",\r\n    \"properties\": \"ve:properties\",\r\n    \"links\": \"ve:links\",\r\n    \"synapses\": \"ve:synapses\",\r\n    \"created\": \"ve:created\",\r\n    \"updated\": \"ve:updated\",\r\n    \"synchronized\": \"ve:synchronized\",\r\n    \"previous\": \"ve:previous\",\r\n    \"next\": \"ve:next\"\r\n  },\r\n  \"id\": null,\r\n  \"name\": \"\" ,\r\n  \"age\": 0 ,\r\n  \"url\": \"\",\r\n  \"privacy\": 'private',\r\n  \"type\": null,\r\n  \"properties\": [],\r\n  \"links\": [],\r\n  \"synapses\": [],\r\n  \"created\": null,\r\n  \"updated\": null,\r\n  \"synchronized\": null,\r\n  \"previous\": null,\r\n  \"next\": null\r\n}\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport modele from './templates/neurone1.js'\r\n\r\n\r\nexport { Base }\r\n\r\nclass Base {\r\n  constructor(options = {}) {\r\n    // this['ve:type'] = \"base\"\r\n    // loading modele\r\n    Object.assign(this, modele);\r\n    // update basic props\r\n    this.id = uuidv4()\r\n    this.type = \"base\"\r\n    this.created = Date.now()\r\n    // updating with options\r\n    Object.assign(this, options);\r\n    // this.options = options\r\n\r\n    // ...\r\n  }\r\n  debug(){\r\n      console.log(this)\r\n  }\r\n}\r\n","import { Base } from \"./base.js\"\r\n\r\nexport { Core }\r\n\r\nclass Core extends Base {\r\n  constructor(options = {}) {\r\n    super(options)\r\n    options.type == undefined ? this.type = \"core\": \"\"\r\n    // this.options = options\r\n\r\n    // this._data = Object.assign({}, modele)\r\n    // this[\"ve:created\"] = Date.now()\r\n    // this.id = uuidv4()\r\n    //console.log(this)\r\n    // ...\r\n  }\r\n}\r\n","\r\nimport { Base } from \"./base.js\"\r\n\r\nexport { Command }\r\n\r\nclass Command extends Base {\r\n  constructor(options = {}) {\r\n    super(options)\r\n    options['type'] == undefined ? this['type'] = \"command\": \"\"\r\n    // this.options = options\r\n\r\n    // this._data = Object.assign({}, modele)\r\n    // this[\"ve:created\"] = Date.now()\r\n    // this.id = uuidv4()\r\n    //console.log(this)\r\n    // ...\r\n    this.init(options.inputValue)\r\n  }\r\n  init(iv){\r\n    // si commence par http --> type = url\r\n  if (this.isValidUrl(iv)){\r\n    this.type = \"url\";\r\n    this.value = iv;\r\n    this.isFile = this.isFile(iv)\r\n  }else{\r\n    // selon le premier charactère, on detecte une commande\r\n    let firstChar = iv.charAt(0);\r\n    let last =\"\"\r\n    switch(firstChar){\r\n      case '/':\r\n      //    let commande = rdf.quad(rdf.blankNode(), rdf.namedNode('commande'),rdf.literal(message))\r\n      //  this.catchCommande(message,this.network,this);\r\n\r\n      this.type = \"commande\";\r\n      this.value = iv;\r\n      this.inputNew = \"\";\r\n      //this.catchCommande(this)\r\n      break;\r\n\r\n      case '.':\r\n      last = this.commandHistory[this.commandHistory.length-1];\r\n      this.inputNew = last.s+\" \"+last.p+\" \"+last.o;\r\n      break;\r\n\r\n      case ';':\r\n      last = this.commandHistory[this.commandHistory.length-1];\r\n      this.inputNew = last.s+\" \"+last.p+\" \";\r\n      break;\r\n\r\n      case ',':\r\n      last = this.commandHistory[this.commandHistory.length-1];\r\n      this.inputNew = last.s+\" \";\r\n      break;\r\n\r\n\r\n      default:\r\n      // si le premier charactère n'indique pas une commande, on traite comme un triplet\r\n      this.traiteTriplet(iv);\r\n    //  this.catchTriplet()\r\n    }\r\n  }\r\n\r\n  //si termine par virgule, point, point-virgule, tiret --> triplet\r\n\r\n  return this;\r\n  }\r\n\r\n  traiteTriplet(message){\r\n  var result = {}\r\n  var inputNew = \"\";\r\n  let lastChar = message.slice(-1);\r\n  let messageCut = message.slice(0,-1).split(\" \");\r\n  let isTriplet = true;\r\n  //  console.log(messageCut);\r\n\r\n  let detectLiteral = \"\";\r\n  let messageCutTemp = [];\r\n  messageCut.forEach(function(part){\r\n    part = part.trim();\r\n    //  console.log(part);\r\n    if (part.startsWith('\"')){\r\n      detectLiteral =\"debut\";\r\n      //  console.log(detectLiteral);\r\n      messageCutTemp.push(part.substr(1));\r\n    }else if (part.endsWith('\"')){\r\n      detectLiteral = \"fin\";\r\n      //console.log(detectLiteral);\r\n      messageCutTemp.push(messageCutTemp.pop()+\" \"+part.slice(0,-1));\r\n    }else if (detectLiteral == \"debut\"){\r\n      //  console.log(\"recupere le dernier et lui ajoute part\" )\r\n      messageCutTemp.push(messageCutTemp.pop()+\" \"+part)\r\n    }else {\r\n      messageCutTemp.push(part);\r\n    }\r\n  });\r\n  if (messageCutTemp.length > 0){\r\n    messageCut = messageCutTemp;\r\n  }\r\n  switch(lastChar){\r\n    case '.':\r\n    inputNew = \"\";\r\n    break;\r\n    case ';':\r\n    if (messageCut[0].indexOf(\" \") > -1){\r\n      inputNew = '\"'+messageCut[0]+'\"'+' ';\r\n    }else{\r\n      inputNew = messageCut[0]+' ';\r\n    }\r\n    break;\r\n    case ',':\r\n    if (messageCut[0].indexOf(\" \") > -1){\r\n      inputNew = '\"'+messageCut[0]+'\" ';\r\n    }else{\r\n      inputNew = messageCut[0]+' ';\r\n    }\r\n    if (messageCut[1].indexOf(\" \") > -1){\r\n      inputNew += '\"'+messageCut[1]+'\" ';\r\n    }else{\r\n      inputNew += messageCut[1]+' ';\r\n    }\r\n    break;\r\n    case '-':\r\n    if (messageCut[2].indexOf(\" \") > -1){\r\n      inputNew = '\"'+messageCut[2]+'\"'+' ';\r\n    }else{\r\n      inputNew = messageCut[2]+' ';\r\n    }\r\n    break;\r\n    default:\r\n    console.log(\"message to chat \"+message)\r\n    //this.sendMessage(message);\r\n    //  this.agentInput.send('agentSocket', {type: \"sendMessage\", message:message});\r\n    //  this.catchTriplet(message.slice(0,-1), this.network); // A REMPLACER PAR CATCHTRIPLETS V2\r\n    inputNew = \"\";\r\n    isTriplet = false;\r\n  }\r\n  if (isTriplet){\r\n    //  console.log(\"est Triplet\",messageCut)\r\n    result.type = \"triplet\";\r\n    var tripletvalue = {};\r\n    tripletvalue.subject = messageCut[0];\r\n    tripletvalue.predicate = messageCut[1];\r\n    tripletvalue.object = messageCut[2];\r\n    result.value = tripletvalue;\r\n    result.inputNew = inputNew;\r\n  }else {\r\n    //  console.log(\"n'est pas triplet\")\r\n    result.type = \"message\";\r\n    result.value = message;\r\n    result.inputNew = inputNew;\r\n  }\r\nObject.assign(this, result);\r\n//  return result;\r\n}\r\n  isValidUrl(string){\r\n    try {\r\n      new URL(string);\r\n      return true;\r\n    } catch (_) {\r\n      return false;\r\n    }\r\n  }\r\n  isFile(pathname) {\r\n    return pathname.split('/').pop().indexOf('.') > -1;\r\n  }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + (chunkId === 43 ? \"test\" : chunkId) + \".\" + {\"26\":\"4ea7e0f1\",\"34\":\"d08b54a1\",\"43\":\"0a34fa65\",\"57\":\"f06b62dc\",\"97\":\"60a18877\",\"118\":\"5c962f38\",\"162\":\"33624a18\",\"214\":\"3c4e0a44\",\"250\":\"bd67e0a2\",\"267\":\"57ab48d4\",\"271\":\"b29d3b0f\",\"325\":\"c205d2ff\",\"358\":\"7bcc6946\",\"444\":\"ff53f3f9\",\"536\":\"40f3b591\",\"564\":\"ef6116a1\",\"578\":\"82dfe48e\",\"622\":\"583938bc\",\"627\":\"773ff415\",\"671\":\"2ac6948f\",\"739\":\"763c63c2\",\"756\":\"44c2d7ae\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"css/\" + chunkId + \".\" + {\"26\":\"7be4b47a\",\"271\":\"5e34e7b1\",\"578\":\"aa5514ea\",\"739\":\"34c762c0\",\"756\":\"49a109d3\"}[chunkId] + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"agent:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/agent/\";","var createStylesheet = function(chunkId, fullhref, resolve, reject) {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tvar onLinkComplete = function(event) {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + realHref + \")\");\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tlinkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\tdocument.head.appendChild(linkTag);\n\treturn linkTag;\n};\nvar findStylesheet = function(href, fullhref) {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = function(chunkId) {\n\treturn new Promise(function(resolve, reject) {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.miniCss = function(chunkId, promises) {\n\tvar cssChunks = {\"26\":1,\"271\":1,\"578\":1,\"739\":1,\"756\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(function() {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, function(e) {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkagent\"] = self[\"webpackChunkagent\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(5855); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","id","module","exports","render","_vm","this","_h","$createElement","_c","_self","attrs","message","_v","_s","_e","staticRenderFns","name","components","data","created","console","methods","loadBrainFromIpfs","watch","ipfsNode","computed","component","register","ready","log","registered","cached","updatefound","updated","alert","offline","error","Vue","VueRouter","routes","path","HomeView","router","mode","base","process","DB_NAME","DB_VERSION","DB","async","Promise","reject","request","window","indexedDB","open","onerror","onsuccess","target","result","onupgradeneeded","db","createObjectStore","keyPath","node","getDb","trans","transaction","oncomplete","store","objectStore","delete","objectStoreRequest","clear","event","getNodes","nodes","openCursor","cursor","push","value","continue","put","vocab","state","core","undefined","currentNode","brain","brains","showBrainLoader","graph","commandHistory","command","links","jsonldProps","graphProps","spinner","ipfs_cids","graph_cid","highlightNodes","Set","highlightLinks","hoverNode","search","galaxy","mutations","setGalaxy","g","setIpfsNode","n","setGraphCid","c","resetIpfsCid","addIpfsCid","cid","setCore","setCurrentNode","setBrain","b","setBrains","setShowBrainLoader","v","setGraph","setDb","setCommand","pushHistory","setLinks","l","spinnerAdd","t","spinnerRemove","filter","x","resetSpinner","actions","context","commit","type","subjectNode","find","subject","predicate","startsWith","p","slice","propertie","object","dispatch","objectNode","nodes2save","forEach","idb","reverse","key","Object","entries","val","Array","isArray","source","linksTemp","last","index","findIndex","assign","includes","rot","Math","random","PI","item","label","curvature","rotation","validLinks","otherLinks","graphData","nodes_ids","__ob__","__threeObj","uuidv4","Date","now","color","switchTo","namespaced","session","pod","setSession","s","setPod","showTerminal","toggleTerminal","rootNode","gunBrains","setGunBrains","br","setRootNode","r","Vuex","getters","modules","solid","terminal","gun","worlds","onCreated","action","installed","version","active","Galaxy","constructor","init","plugin","install","opts","use","prototype","$coreInit","options","Core","$spinnerAdd","task","$spinnerRemove","size","getSize","w","innerWidth","h","innerHeight","highligth","text","length","onLinkClick","ln","nodeThreeObject","image","texture","shape","geometry","material","THREE","round","pow","transparent","opacity","sprite","Image","src","base64","onload","needsUpdate","map","scale","set","nodeEl","document","createElement","textContent","style","className","CSS2DObject","onNodeClick","distance","pos","y","z","distRatio","hypot","cameraPosition","addEventListener","width","height","$graphInit","ForceGraph3D","extraRenderers","CSS2DRenderer","domElement","nodeLabel","nodeAutoColorBy","nodeRelSize","nodeColor","has","nodeThreeObjectExtend","linkCurvature","linkCurveRotation","linkThreeObjectExtend","linkThreeObject","link","SpriteText","textHeight","linkDirectionalArrowLength","linkDirectionalArrowRelPos","linkPositionUpdate","start","end","middlePos","position","linkWidth","linkDirectionalParticles","linkDirectionalParticleWidth","onNodeHover","add","$updateHighlight","onLinkHover","setReverse","main","old","$newNode","$loadNeurone","$addProp","newValue","oldValue","$addLink","o","$checkSolidSession","sc","restorePreviousSession","then","info","isLoggedIn","webId","$getPodInfosFromSession","$login","issuer","oidcIssuer","redirectUrl","location","href","clientName","$logout","logout","logged","$getPodInfos","neuroneStore","storage","workspaces","$checkBrains","dataset","getSolidDataset","fetch","profile","getThing","getStringNoLocale","FOAF","friends","getUrlAll","getUrl","WS","photo","VCARD","publicTypeIndexUtl","pti_ds","indexes","getThingAll","i","types","ws","AS","url","SOLID","loadNeurones","remotesUrl","filePromises","endsWith","$loadBrainFromSolid","file","getFile","reader","FileReader","JSON","parse","err","readAsText","all","lastPartOfUrl","str","lastIndexOf","substring","$saveBrainToSolid","suggestedpath","prompt","savedFile","overwriteFile","Blob","stringify","contentType","getSourceUrl","brainsFile","brainsIndex","currentBrain","checksum","$loadBrainsFromWikidata","tags","aliases","$brainsFromPod","getContainedResourceUrlAll","default_brains","IPFS","ipfs","$initIpfs","IpfsCore","create","$saveBrainToIpfs","$loadBrainFromIpfs","chunks","chunk","cat","concat","decodedData","TextDecoder","decode","toString","$saveNodesToIpfs","stack","edges","u","opt","stop","limit","mod","util","array","from","Dfs","_gun","soul","lbl","lim","Map","get","once","back","Gun","edge","temp","tLabel","arr","next","pop","edgeS","edgeT","makeNodes","makeEdges","processNode","gunNodes","_","$gunSearch","dfs","$gun","$gunListen","on","$saveBrainToGun","$saveNodeToGun","$gunSet","$gunExplore","doc","$saveToGun","brain_name","triple","GalaxyPlugin","VueSocialSharing","CorePlugin","Graph3dPlugin","ToolsPlugin","SolidPlugin","SolidDataPlugin","IpfsDataPlugin","VueFab","iconType","BootstrapVue","IconsPlugin","GunPlugin","VueGun","peers","App","$mount","Base","modele","debug","super","Command","inputValue","iv","isValidUrl","isFile","firstChar","charAt","inputNew","traiteTriplet","lastChar","messageCut","split","isTriplet","detectLiteral","messageCutTemp","part","trim","substr","indexOf","tripletvalue","string","URL","pathname","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","__proto__","ns","def","current","getOwnPropertyNames","definition","defineProperty","enumerable","f","chunkId","reduce","promises","miniCssF","globalThis","Function","prop","hasOwnProperty","inProgress","dataWebpackPrefix","done","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","timeout","nc","setAttribute","onScriptComplete","prev","clearTimeout","doneFns","parentNode","removeChild","setTimeout","bind","head","appendChild","Symbol","toStringTag","nmd","paths","children","createStylesheet","fullhref","linkTag","rel","onLinkComplete","errorType","realHref","findStylesheet","existingLinkTags","tag","dataHref","existingStyleTags","loadStylesheet","installedCssChunks","miniCss","cssChunks","installedChunks","installedChunkData","promise","loadingEnded","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}