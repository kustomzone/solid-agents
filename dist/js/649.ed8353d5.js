"use strict";(self["webpackChunkagent"]=self["webpackChunkagent"]||[]).push([[649],{3649:function(t,e,s){s.r(e),s.d(e,{default:function(){return l}});var i=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",[s("b-button",{on:{click:t.saveBrain}},[t._v("save brain")]),s("b-button",{on:{click:t.saveBrainToSolid}},[t._v("save brain to Solid")]),s("SolidLogin"),s("div",{ref:"graph",attrs:{id:"graph"}},[t._v("Loading graph... ")])],1)},n=[],o={name:"VisualisationView",components:{SolidLogin:()=>s.e(221).then(s.bind(s,4221))},data(){return{}},mounted(){this.$graphInit({domElement:this.$refs.graph}),this.$checkSolidSession()},methods:{saveBrain(){this.$store.dispatch("core/saveBrain")},saveBrainToSolid(){this.$saveBrainToSolid()},update(){if(console.log(this.nodes),void 0!=this.graph){let t=this.nodes.map((t=>({...t}))),e=this.links.map((t=>({...t})));this.graph.graphData({nodes:t,links:e}),console.log(this.nodes)}}},watch:{nodes(){console.log(this.nodes),this.update()},links(){console.log(this.links),this.update()},graph(){this.update()}},computed:{nodes(){return this.$store.state.core.nodes},links(){return this.$store.state.core.links},graph(){return this.$store.state.core.graph}}},a=o,r=s(1001),h=(0,r.Z)(a,i,n,!1,null,null,null),l=h.exports}}]);
//# sourceMappingURL=649.ed8353d5.js.map