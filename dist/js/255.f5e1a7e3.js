"use strict";(self["webpackChunkagent"]=self["webpackChunkagent"]||[]).push([[255],{4255:function(e,s,n){n.r(s),n.d(s,{default:function(){return c}});var l=function(){var e=this,s=e.$createElement,n=e._self._c||s;return n("b-form-file",{attrs:{multiple:"",size:"sm"},model:{value:e.files,callback:function(s){e.files=s},expression:"files"}})},t=[],o={name:"UploadFile",data(){return{files:[]}},methods:{async processFiles(){console.log(this.files);let e=this;const s=this.files.map((async function(s){return console.log(s),e.$spinnerAdd({id:"loading "+s.name}),new Promise((function(n,l){const t=new FileReader;t.readAsDataURL(s),t.onload=async function(){s.base64=await t.result,console.log(s);let l=await e.$newNode(s);await e.$store.dispatch("core/saveNode",l),e.$spinnerRemove({id:"loading "+s.name}),n(l)},t.onerror=function(e){console.log("Error: ",e),l(e)}}))}));let n=await Promise.all(s);console.log(n),this.files=[],await this.$store.dispatch("core/getNodes")}},watch:{files(){this.files.length>0&&this.processFiles()}}},i=o,a=n(1001),r=(0,a.Z)(i,l,t,!1,null,null,null),c=r.exports}}]);
//# sourceMappingURL=255.f5e1a7e3.js.map