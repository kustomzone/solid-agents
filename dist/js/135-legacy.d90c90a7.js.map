{"version":3,"file":"js/135-legacy.d90c90a7.js","mappings":"sJAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,gBAAgB,CAACE,YAAYN,EAAIO,GAAG,CAAC,CAACC,IAAI,SAASC,GAAG,WAAW,MAAO,CAAET,EAAIU,MAAMC,OAAS,EAAGP,EAAG,gBAAgB,CAACQ,MAAM,CAAC,cAAc,KAAK,aAAa,OAAO,QAAUZ,EAAIU,OAAOG,MAAM,CAACC,MAAOd,EAAY,SAAEe,SAAS,SAAUC,GAAMhB,EAAIiB,SAASD,GAAKE,WAAW,aAAa,CAACd,EAAG,uBAAuB,CAACQ,MAAM,CAAC,MAAQ,OAAO,CAACZ,EAAImB,GAAG,oBAAoB,GAAGnB,EAAIoB,KAAKhB,EAAG,WAAW,CAACQ,MAAM,CAAC,QAAU,kBAAkBS,GAAG,CAAC,MAAQrB,EAAIsB,QAAQ,CAACtB,EAAImB,GAAG,SAASI,OAAM,MAAS,CAACnB,EAAG,eAAe,CAACoB,IAAI,QAAQZ,MAAM,CAAC,GAAK,QAAQ,UAAY,GAAG,MAAQ,uCAAuC,YAAc,uBAAuBS,GAAG,CAAC,MAAQ,CAAC,SAASI,GAAQ,OAAIA,EAAOC,KAAKC,QAAQ,QAAQ3B,EAAI4B,GAAGH,EAAOI,QAAQ,QAAQ,GAAGJ,EAAOjB,IAAI,SAAkB,KAAcR,EAAI8B,QAAQC,MAAM,KAAMC,YAAYhC,EAAIiC,WAAWpB,MAAM,CAACC,MAAOd,EAAc,WAAEe,SAAS,SAAUC,GAAMhB,EAAIkC,WAAWlB,GAAKE,WAAW,iBAAiB,IACp/BiB,EAAkB,G,4CCgCtB,GACEC,KAAM,eAENC,KAHF,WAII,MAAO,CACLH,WAAY,GACZI,eAAgB,GAChBrB,SAAU,OAGdsB,QAAS,CACPjB,MADJ,WAEMrB,KAAKiC,WAAa,IAEpBD,SAJJ,WAKMO,QAAQC,IAAIxC,KAAKiC,aAInBJ,QATJ,WAWMU,QAAQC,IAAIxC,KAAKiC,YACjB,IAAN,yBACM,GAAIQ,EAAW/B,OAAS,EAA9B,CACQ,IAAR,YAAA+B,WAAAA,EAAAzB,SAAAA,KAAAA,WAEQuB,QAAQC,IAAI,cAApBD,GAIQvC,KAAK0C,OAAOC,SAAS,0BAA2BC,GAChD5C,KAAKiC,WAAaW,EAAYC,YAIpCC,MAAFA,CACIC,YADJ,WAEM,GAAN,wBACQ,IAAR,6CACQ/C,KAAKiC,WAAae,EAA1B,IACQhD,KAAKiD,MAAMC,MAAMC,UAGrBnC,SARJ,WAQA,WAEM,GADAuB,QAAQC,IAAI,WAAlBD,KAAAA,UACA,qBACQ,IAAR,0DACQA,QAAQC,IAAIY,GACZ,IAAR,0CACQpD,KAAKiC,WAAaiB,EAAQ,KAC1BlD,KAAKiD,MAAMC,MAAMC,WAWvBE,SAAU,CACRN,YADJ,WAEM,OAAO/C,KAAK0C,OAAOY,MAAMC,KAAKR,aAEhCtC,MAJJ,WAKM,OAAOT,KAAK0C,OAAOY,MAAMC,KAAK9C,SCnGoO,I,UCOpQ+C,GAAY,OACd,EACA1D,EACAoC,GACA,EACA,KACA,KACA,MAIF,EAAesB,EAAiB","sources":["webpack://agent/./src/views/CommandInput.vue?c951","webpack://agent/src/views/CommandInput.vue","webpack://agent/./src/views/CommandInput.vue?98d8","webpack://agent/./src/views/CommandInput.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-input-group',{scopedSlots:_vm._u([{key:\"append\",fn:function(){return [(_vm.nodes.length > 0)?_c('b-form-select',{attrs:{\"value-field\":\"id\",\"text-field\":\"name\",\"options\":_vm.nodes},model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v},expression:\"selected\"}},[_c('b-form-select-option',{attrs:{\"value\":null}},[_vm._v(\"current nodes\")])],1):_vm._e(),_c('b-button',{attrs:{\"variant\":\"outline-danger\"},on:{\"click\":_vm.clear}},[_vm._v(\"X\")])]},proxy:true}])},[_c('b-form-input',{ref:\"input\",attrs:{\"id\":\"input\",\"autofocus\":\"\",\"title\":\"type three words followed by a comma\",\"placeholder\":\"/h + Enter for help\"},on:{\"keyup\":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.onEnter.apply(null, arguments)},_vm.onChange]},model:{value:(_vm.main_input),callback:function ($$v) {_vm.main_input=$$v},expression:\"main_input\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <!-- <div> -->\n  <b-input-group>\n    <b-form-input\n    id=\"input\"\n    ref=\"input\"\n    autofocus\n    v-model=\"main_input\"\n    v-on:keyup.enter=\"onEnter\"\n    @keyup=\"onChange\"\n    title=\"type three words followed by a comma\"\n    placeholder=\"/h + Enter for help\"></b-form-input>\n    <template #append>\n      <b-form-select\n      v-if=\"nodes.length > 0\"\n      v-model=\"selected\"\n      value-field=\"id\"\n      text-field=\"name\"\n      :options=\"nodes\"\n      >\n      <b-form-select-option :value=\"null\">current nodes</b-form-select-option>\n\n    </b-form-select>\n    <b-button @click=\"clear\" variant=\"outline-danger\">X</b-button>\n  </template>\n</b-input-group>\n\n\n</template>\n\n<script>\nimport { Command } from '@/neurone-factory'\n\nexport default {\n  name: \"CommandInput\",\n\n  data() {\n    return {\n      main_input: \"\",\n      commandHistory: [],\n      selected: null,\n    }\n  },\n  methods: {\n    clear(){\n      this.main_input = \"\"\n    },\n    onChange(){\n      console.log(this.main_input)\n      // let s = this.$refs.input.value\n      // this.$store.commit('app/setSearch', s)\n    },\n    onEnter(){\n      //  console.log(Command)\n      console.log(this.main_input)\n      let inputValue = this.main_input.trim()\n      if (inputValue.length > 0){\n        let inputObject = new Command({inputValue: inputValue, selected: this.selected})\n        //  var inputObject = this.getInputType(inputValue)\n        console.log(\"inputObject\",inputObject);\n        //  this.traiteInput(inputObject);\n        //  this.updateInput(inputObject.inputNew);\n        // this.$emit('onCommand', inputObject)\n        this.$store.dispatch('core/pushCommandHistory', inputObject)\n        this.main_input = inputObject.inputNew\n      }\n    },\n  },\n  watch:{\n    currentNode(){\n      if(this.currentNode != null){\n        let val = this.currentNode.name || this.currentNode.id\n        this.main_input = val+ \" \"\n        this.$refs.input.focus()\n      }\n    },\n    selected(){\n      console.log(\"selected\",this.selected)\n      if(this.selected != null){\n        let node = this.nodes.find(x => x.id == this.selected)\n        console.log(node)\n        let input = this.main_input.trim() + \" \"+node.name || node.id\n        this.main_input = input + \" ,\"\n        this.$refs.input.focus()\n      }\n\n\n    },\n    // nodes(){\n    //   this.options = this.nodes\n    //   this.options.unshift(this.defaultOption)\n    //   console.log(\"options\", this.options)\n    // }\n  },\n  computed: {\n    currentNode() {\n      return this.$store.state.core.currentNode\n    },\n    nodes() {\n      return this.$store.state.core.nodes\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CommandInput.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CommandInput.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CommandInput.vue?vue&type=template&id=881de8d4&\"\nimport script from \"./CommandInput.vue?vue&type=script&lang=js&\"\nexport * from \"./CommandInput.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","scopedSlots","_u","key","fn","nodes","length","attrs","model","value","callback","$$v","selected","expression","_v","_e","on","clear","proxy","ref","$event","type","indexOf","_k","keyCode","onEnter","apply","arguments","onChange","main_input","staticRenderFns","name","data","commandHistory","methods","console","log","inputValue","$store","dispatch","inputObject","inputNew","watch","currentNode","val","$refs","input","focus","node","computed","state","core","component"],"sourceRoot":""}