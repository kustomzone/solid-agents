"use strict";(self["webpackChunkagent"]=self["webpackChunkagent"]||[]).push([[584],{2584:function(e,s,t){t.r(s),t.d(s,{default:function(){return c}});var n=function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("b-form-file",{attrs:{multiple:""},scopedSlots:e._u([{key:"file-name",fn:function(s){var n=s.names;return[t("b-badge",{attrs:{variant:"dark"}},[e._v(e._s(n[0]))]),n.length>1?t("b-badge",{staticClass:"ml-1",attrs:{variant:"dark"}},[e._v(" + "+e._s(n.length-1)+" More files ")]):e._e()]}}]),model:{value:e.files,callback:function(s){e.files=s},expression:"files"}})},a=[],l={name:"UploadFile",data(){return{files:[]}},methods:{async processFiles(){console.log(this.files);let e=this;const s=this.files.map((async function(s){return console.log(s),e.$spinnerAdd({id:"loading "+s.name}),new Promise((function(t,n){const a=new FileReader;a.readAsDataURL(s),a.onload=async function(){s.base64=await a.result,console.log(s);let n=await e.$newNode(s);await e.$store.dispatch("core/saveNode",n),e.$spinnerRemove({id:"loading "+s.name}),t(n)},a.onerror=function(e){console.log("Error: ",e),n(e)}}))}));let t=await Promise.all(s);console.log(t),this.files=[],await this.$store.dispatch("core/getNodes")}},watch:{files(){this.files.length>0&&this.processFiles()}}},i=l,o=t(1001),r=(0,o.Z)(i,n,a,!1,null,null,null),c=r.exports}}]);
//# sourceMappingURL=584.891357ae.js.map