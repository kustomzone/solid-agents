{"version":3,"file":"js/app.f19872aa.js","mappings":"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","sources":["webpack://agent/./node_modules/gun/ sync","webpack://agent/./src/App.vue?9775","webpack://agent/src/App.vue","webpack://agent/./src/App.vue?facb","webpack://agent/./src/App.vue","webpack://agent/./src/registerServiceWorker.js","webpack://agent/./src/views/HomeView.vue?2db6","webpack://agent/src/views/HomeView.vue","webpack://agent/./src/views/HomeView.vue?4768","webpack://agent/./src/views/HomeView.vue","webpack://agent/./src/router/index.js","webpack://agent/./src/api/galaxy.js","webpack://agent/./src/plugins/galaxy-plugin.js","webpack://agent/./src/plugins/core-plugin.js","webpack://agent/./src/plugins/graph3d-plugin.js","webpack://agent/./src/plugins/tools-plugin.js","webpack://agent/./src/plugins/solid-plugin.js","webpack://agent/./src/plugins/solid-data-plugin.js","webpack://agent/./src/plugins/ipfs-data-plugin.js","webpack://agent/./src/plugins/search-plugin.js","webpack://agent/./src/plugins/brain-plugin.js","webpack://agent/./src/api/dfs.js","webpack://agent/./src/plugins/gun-plugin.js","webpack://agent/./src/main.js","webpack://agent/./src/neurone-factory/templates/neurone1.js","webpack://agent/./src/neurone-factory/base.js","webpack://agent/./src/neurone-factory/core.js","webpack://agent/./src/neurone-factory/command.js","webpack://agent/./src/api/idb-nodes.js","webpack://agent/./src/store/modules/core.js","webpack://agent/./src/store/modules/solid.js","webpack://agent/./src/store/modules/terminal.js","webpack://agent/./src/store/modules/gun.js","webpack://agent/./src/store/index.js","webpack://agent/webpack/bootstrap","webpack://agent/webpack/runtime/chunk loaded","webpack://agent/webpack/runtime/compat get default export","webpack://agent/webpack/runtime/create fake namespace object","webpack://agent/webpack/runtime/define property getters","webpack://agent/webpack/runtime/ensure chunk","webpack://agent/webpack/runtime/get javascript chunk filename","webpack://agent/webpack/runtime/get mini-css chunk filename","webpack://agent/webpack/runtime/global","webpack://agent/webpack/runtime/hasOwnProperty shorthand","webpack://agent/webpack/runtime/load script","webpack://agent/webpack/runtime/make namespace object","webpack://agent/webpack/runtime/node module decorator","webpack://agent/webpack/runtime/publicPath","webpack://agent/webpack/runtime/css loading","webpack://agent/webpack/runtime/jsonp chunk loading","webpack://agent/webpack/startup"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 1661;\nmodule.exports = webpackEmptyContext;","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('NavBar'),(_vm.message != null)?_c('div',[_c('b',[_c('hr'),_c('hr'),_vm._v(_vm._s(_vm.message)),_c('hr'),_c('hr')])]):_vm._e(),_c('router-view'),_c('small',[_c('i',[_vm._v(\"0.0.1 - soukai layout | \"),_c('a',{attrs:{\"href\":\"https://github.com/scenaristeur/agent\",\"target\":\"_blank\"}},[_vm._v(\"contribute\")]),_vm._v(\" | \"),_c('a',{attrs:{\"href\":\"https://github.com/scenaristeur/agent/wiki\",\"target\":\"_blank\"}},[_vm._v(\"help\")]),_vm._v(\" | \"),_c('a',{attrs:{\"href\":\"https://youtu.be/YT61BcjGfwc\",\"target\":\"_blank\"}},[_vm._v(\"How To use 3dmindmap Video Demo\")]),_vm._v(\" | \"),_c('router-link',{attrs:{\"to\":\"/test\"}},[_vm._v(\"Test\")])],1)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"app\">\n    <NavBar />\n    <!-- <hr>\n    <hr>\n    <hr>\n    <hr> -->\n    <!-- <nav>\n    <router-link to=\"/\">Home</router-link> |\n    <router-link to=\"/about\">About</router-link>\n  </nav> -->\n  <div v-if=\"message != null\"><b><hr><hr>{{message}}<hr><hr></b></div>\n\n  <router-view/>\n  <small><i>0.0.1 - soukai layout |\n    <a href=\"https://github.com/scenaristeur/agent\" target=\"_blank\">contribute</a> |\n    <a href=\"https://github.com/scenaristeur/agent/wiki\" target =\"_blank\">help</a> |\n    <a href=\"https://youtu.be/YT61BcjGfwc\" target =\"_blank\">How To use 3dmindmap Video Demo</a> |\n    <router-link to=\"/test\">Test</router-link>\n  </i></small>\n    <!-- <LevelgraphJsonld /> -->\n  <!-- <DataCaching /> -->\n\n</div>\n</template>\n\n\n<script>\n// @ is an alias to /src\n// import HelloWorld from '@/components/HelloWorld.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    'NavBar': ()=>import('@/views/NavBar'),\n    // 'DataCaching': ()=>import('@/views/experiments/DataCaching'),\n    // 'LevelgraphJsonld': ()=>import('@/views/experiments/LevelgraphJsonld'),\n  },\n  data(){\n    return{\n      message: null\n    }\n  },\n  created(){\n    this.$coreInit({name: \"SuperCore\"})\n    if(this.$route.query.source){\n      let source = this.$route.query.source\n      console.log(\"source\",source)\n      this.$loadBrainFromSolid(source)\n    }else if(this.$route.query.cid){\n      this.loadBrainFromIpfs()\n    }else{\n      this.$checkSolidSession()\n      this.$store.dispatch('core/getNodes')\n    }\n  },\n  methods:{\n    loadBrainFromIpfs(){\n      if(this.$route.query.cid){\n        if (this.ipfsNode != null){\n          this.$loadBrainFromIpfs(this.$route.query.cid)\n          this.message = null\n        }else{\n          this.message = \"connecting to ipfs, could take 30s, please be patient (todo : fusion avec le graph existant)\"\n        }\n      }\n    }\n  },\n  watch:{\n    ipfsNode(){\n      this.loadBrainFromIpfs()\n\n    }\n  },\n  computed: {\n    ipfsNode() {\n      return this.$store.state.core.ipfsNode\n    },\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n}\n\nnav {\n  padding: 30px;\n  text-align: center;\n}\n\nnav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\nnav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=79efb7e1&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      )\n    },\n    registered () {\n      console.log('Service worker has been registered.')\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound () {\n      console.log('New content is downloading.')\n    },\n    updated () {\n      console.log('New content is available; please refresh.')\n      alert('This app has been updated, please, close and reopen.')\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n    }\n  })\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('CommandInput',{attrs:{\"fluid\":\"sm\"}}),_c('b-row',[_c('b-col',{attrs:{\"md\":\"6\"}},[_c('VisualisationView')],1),_c('b-col',{attrs:{\"md\":\"6\"}},[_c('SideView')],1)],1),_c('FabMenu'),_c('ExternalSource')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <CommandInput fluid=\"sm\" />\n    <b-row>\n      <b-col md=\"6\">\n        <VisualisationView />\n      </b-col>\n      <b-col md=\"6\">\n        <SideView />\n\n      </b-col>\n    </b-row>\n    <FabMenu />\n    <ExternalSource />\n  </div>\n\n\n\n</template>\n\n<script>\n\nexport default {\n  name: 'HomeView',\n  components: {\n    'VisualisationView': ()=>import('@/views/VisualisationView'),\n    'CommandInput': ()=>import('@/views/CommandInput'),\n    'FabMenu': ()=>import('@/views/FabMenu'),\n    'ExternalSource': ()=>import('@/views/ExternalSource'),\n    'SideView': ()=>import('@/views/SideView'),\n\n\n  }\n}\n</script>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HomeView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./HomeView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./HomeView.vue?vue&type=template&id=36486b12&\"\nimport script from \"./HomeView.vue?vue&type=script&lang=js&\"\nexport * from \"./HomeView.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport HomeView from '../views/HomeView.vue'\n\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView\n  },\n  {\n    path: '/test',\n    name: 'test',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"test\" */ '../views/TestView.vue')\n  }\n]\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n})\n\nexport default router\n","let worlds = [\n  {\n    name: \"gundb\",\n    onCreated: {action: \"$gunListen\"/*, params: \"brains\"*/},\n  //  onMounted: {action: \"$gunListen\", params: \"blop\"}, // brains\n    installed : null,\n    version: null,\n    type: \"gundb\",\n    state: null,\n    active: false\n  },\n  {name: \"browser\"},\n  {name: \"graph3d\"},\n  {name: 'indexeddb'},\n  {name: \"Solid Public\"},\n  {name: \"Solid Pod\"},\n  {name: \"Solid Friends\", active: false},\n  {name: \"Solid Notification\"},\n  {name: \"Wikidata\"},\n  {name: \"realtime\"},\n  {name: \"automerge\"},\n  {name: \"ipfs\", onCreated: {action: \"$initIpfs\"}, active: true},\n  {name: \"pinata\"},\n  {name: \"safe\"},\n  {name: \"darkweb\"},\n  {name: \"excel/ods\"},\n  {name: \"notion\"},\n  {name: \"upload\"},\n  {name: \"url_param\"},\n  {name: \"Persée\"},\n  {name: \"sparqlanything\"},\n  {name: \"semapps\"},\n  {name: \"websocket\"},\n  {name: \"socket.io\"},\n  {name: \"matrix-crdt\"},\n  {name: \"jmv\"},\n  {name: \"soukai\"}\n]\n\n\nexport { Galaxy }\n\nclass Galaxy {\n  constructor() {\n\n  }\n  init(){\n    this.worlds = worlds\n  }\n\n\n}\n","import { Galaxy } from '@/api/galaxy';\nconst plugin = {\n  install(Vue, opts = {}) {\n    let store = opts.store\n    console.log(store)\n    let galaxy = new Galaxy()\n    galaxy.init()\n    console.log(galaxy)\n    store.commit('core/setGalaxy', galaxy)\n    // Vue.prototype.$search = async function(params){\n    //   console.log(\"searching \", params.text, store.state.core.nodes)\n    //   let candidates = store.state.core.nodes\n    //   let results = candidates.filter(n => (n.name != undefined && n.name.includes(params.text)) )\n    //   if (params.searchById == true){\n    //     /* || n.id.includes(text)*/\n    //     let resultsById = candidates.filter(n => (n.id.includes(params.text)) )\n    //     results = results.concat(resultsById)\n    //   }\n    //\n    //\n    //   //store.commit('app/setBrain', brain)\n    //   return results\n    // }\n\n\n  }\n}\n\n// Auto-install\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(plugin)\n}\n\nexport default plugin\n","// import ForceGraph3D from '3d-force-graph';\nimport { Core /*Neurone, Brain,  Graph*/ } from '@/neurone-factory'\n//\n// let graph = undefined\nconst plugin = {\n  install(Vue, opts = {}) {\n    let store = opts.store\n    Vue.prototype.$coreInit = async function(options = {}){\n        let core = new Core(options)\n      store.commit ('core/setCore', core)\n    }\n    Vue.prototype.$spinnerAdd = function(task){\n      store.commit('core/spinnerAdd', task)\n    }\n    Vue.prototype.$spinnerRemove = function(task){\n      store.commit('core/spinnerRemove', task)\n    }\n  }\n}\n\n// Auto-install\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(plugin)\n}\n\nexport default plugin\n","import ForceGraph3D from '3d-force-graph';\nimport {CSS2DRenderer, CSS2DObject} from 'three/examples/jsm/renderers/CSS2DRenderer.js';\nimport SpriteText from 'three-spritetext';\nimport * as THREE from 'three';\n\n// let selectedNodes = new Set(),\n// let highlightNodes = new Set(),\n// highlightLinks = new Set(),\n// hoverNode= null\n// import { Neurone/*, Brain,*/ /* Graph*/ } from '@/neurone-factory'\n\n// let graph = undefined\nconst plugin = {\n  install(Vue, opts = {}) {\n    let store = opts.store\n    let size = getSize()\n\n    function getSize(){\n      //768 = medium bootstrap\n      return {w: window.innerWidth > 768 ? window.innerWidth/2 : window.innerWidth,\n        h: window.innerWidth > 768 ? window.innerHeight*.9 : window.innerHeight*.8}\n      }\n      window.addEventListener('resize', function(){\n        if (store.state.core.graph != null){\n          size = getSize()\n          store.state.core.graph.width(size.w)\n          store.state.core.graph.height(size.h)\n        }\n      } );\n\n\n      Vue.prototype.$graphInit = async function(options){\n        // console.log(options)\n        let graphData={nodes: [], links: []}\n        let highlightNodes = store.state.core.highlightNodes\n        let highlightLinks = store.state.core.highlightLinks\n        let hoverNode = store.state.core.hoverNode\n\n        let graph = ForceGraph3D({extraRenderers: [new CSS2DRenderer()]})(options.domElement).graphData(graphData)\n        graph\n        .width(size.w)\n        .height(size.h)\n        //.backgroundColor('#eafaff')\n        // .nodeId('id')\n        .nodeLabel('name')\n        .nodeAutoColorBy(\"type\")\n        //.nodeRelSize(5)\n        .nodeColor(node => highligth(node) ? 'yellow' : highlightNodes.has(node) ? node === hoverNode ? 'rgb(255,0,0,1)' : 'rgba(255,160,0,0.8)' : node.color)\n        //.nodeColor(node => /*highlightNodes.has(node) ? node === hoverNode ? 'rgb(255,0,0,1)' : 'rgba(255,160,0,0.8)' :*/ node.color)\n        //.onBackgroundClick(event => onBackgroundClick(event))\n        .onNodeClick(node => onNodeClick(node))\n        .onLinkClick(ln => onLinkClick(ln))\n        .nodeThreeObjectExtend(node => node.shape == undefined || node.shape == null)\n        .nodeThreeObject(node => nodeThreeObject(node))\n        // .nodeThreeObject(node => nodeThreeObjectGroup(node))\n        .linkCurvature('curvature')\n        .linkCurveRotation('rotation')\n        .linkThreeObjectExtend(true)\n        .linkThreeObject(link => {\n          // extend link with text sprite\n          if(link.label != undefined){\n            const sprite = new SpriteText(`${link.label}`);\n            sprite.color = 'lightgrey';\n            sprite.textHeight = 1.5;\n            return sprite;\n          }\n        })\n        .linkDirectionalArrowLength(3.5)\n        .linkDirectionalArrowRelPos(1)\n        //  .linkCurvature(0.25)\n        .linkPositionUpdate((sprite, { start, end }) => {\n          if(sprite != undefined){\n            const middlePos = Object.assign(...['x', 'y', 'z'].map(c => ({\n              [c]: start[c] + (end[c] - start[c]) / 4 // calc middle point\n            })))\n            // Position sprite\n            Object.assign(sprite.position, middlePos);\n          }\n        })\n        .linkWidth(link => highlightLinks.has(link) ? 4 : 1)\n        .linkDirectionalParticles(link => highlightLinks.has(link) ? 4 : 0)\n        .linkDirectionalParticleWidth(4)\n        .onNodeHover(node => {\n          // no state change\n          if ((!node && !highlightNodes.size) || (node && hoverNode === node)) return;\n\n          highlightNodes.clear();\n          highlightLinks.clear();\n          if (node) {\n            highlightNodes.add(node);\n            //  node.neighbors.forEach(neighbor => highlightNodes.add(neighbor));\n            //  node.links.forEach(link => highlightLinks.add(link));\n          }\n\n          hoverNode = node || null;\n\n          Vue.prototype.$updateHighlight();\n        })\n        .onLinkHover(link => {\n          highlightNodes.clear();\n          highlightLinks.clear();\n\n          if (link) {\n            highlightLinks.add(link);\n            highlightNodes.add(link.source);\n            highlightNodes.add(link.target);\n          }\n          Vue.prototype.$updateHighlight();\n        })\n        // console.log(graph)\n        store.commit ('core/setGraph', graph)\n      }\n\n      function highligth(node){\n        //console.log(node)\n        return store.state.core.search != null && store.state.core.search.text.length > 0 && node.name.includes(store.state.core.search.text)\n      }\n      // Vue.prototype.$onNodeSearch = async function (node, event){\n      //   console.log(node, event)\n      //     // if (event.ctrlKey || event.shiftKey || event.altKey) { // multi-selection\n      //     //   store.state.core.selectedNodes.has(node) ? store.state.core.selectedNodes.delete(node) : store.state.core.selectedNodes.add(node);\n      //     // } else { // single-selection\n      //     //   const untoggle = store.state.core.selectedNodes.has(node) && store.state.core.selectedNodes.size === 1;\n      //     //   store.state.core.selectedNodes.clear();\n      //     //   !untoggle && store.state.core.selectedNodes.add(node);\n      //     // }\n      //     store.state.core.selectedNodes.add(node)\n      //\n      //     store.state.core.graph.nodeColor(store.state.core.graph.nodeColor()); // update color of selected nodes\n      //   }\n\n      Vue.prototype.$updateHighlight = function() {\n        // trigger update of highlighted objects in scene\n      //  console.log(store.state.core.highlightNodes)\n        let graph = store.state.core.graph\n        graph\n        .nodeColor(graph.nodeColor())\n        .linkWidth(graph.linkWidth())\n        .linkDirectionalParticles(graph.linkDirectionalParticles());\n      }\n\n\n      function onLinkClick(ln){\n        console.log(ln)\n      }\n\n\n      function nodeThreeObject(node){\n        let shape = null\n        let geometry = null\n        let material =   new THREE.MeshLambertMaterial({\n          color: node.color ||Math.round(Math.random() * Math.pow(2, 24)),\n          transparent: true,\n          opacity: 0.75\n        })\n        let image, texture, sprite = null\n        // console.log(material)\n        // console.log(node.shape)\n        switch (node.shape) {\n          case \"box\":\n          geometry = new THREE.BoxGeometry( 20,  20,  20)\n          break;\n          case \"cylinder\":\n          geometry = new THREE.CylinderGeometry( 10,  10,  20)\n          break;\n          case \"cone\":\n          geometry = new THREE.ConeGeometry( 10,  20)\n          break;\n          case \"dodecahedron\":\n          geometry = new THREE.DodecahedronGeometry( 10)\n          break;\n          case \"sphere\":\n          geometry = new THREE.SphereGeometry( 10)\n          break;\n          case \"torus\":\n          geometry = new THREE.TorusGeometry( 10,  2)\n          break;\n          case \"torusKnot\":\n          geometry = new THREE.TorusKnotGeometry( 10,  2)\n          break;\n          case \"base64\":\n          //  console.log(\"base64\",node)\n          image = new Image();\n          image.src = node.base64;\n          texture = new THREE.Texture();\n          texture.image = image;\n          image.onload = function () {\n            texture.needsUpdate = true;\n          };\n          material = new THREE.SpriteMaterial({ map: texture });\n          sprite = new THREE.Sprite(material);\n          sprite.scale.set(2, 2);\n          //return sprite;\n          break;\n          default:\n          //  geometry = null\n\n        }\n        if (sprite != null){\n          shape = sprite\n          //  console.log(\"sprite\", shape)\n        }else{\n          if(geometry == null){\n            const nodeEl = document.createElement('div');\n            nodeEl.textContent = node.name //node.id;\n            nodeEl.style.color = node.color || \"#ffffff\";\n            nodeEl.className = 'node-label';\n            shape = new CSS2DObject(nodeEl);\n            // console.log(shape)\n            // nodeEl.addEventListener('pointerdown', () => {\n            //   alert(1)\n            //   console.log(shape)\n            //  })\n          }else{\n            shape = new THREE.Mesh(geometry, material)\n          }\n        }\n        return shape\n      }\n\n\n      // function nodeThreeObjectGroup(node){\n      //\n      //   const group = new THREE.Group();\n      //\n      //   let label = null\n      //   let geometry = null\n      //   let material =   new THREE.MeshLambertMaterial({\n      //     color: node.color ||Math.round(Math.random() * Math.pow(2, 24)),\n      //     transparent: true,\n      //     opacity: 0.75\n      //   })\n      //   // console.log(material)\n      //   // console.log(node.shape)\n      //   switch (node.shape) {\n      //     case \"box\":\n      //     geometry = new THREE.BoxGeometry(Math.random() * 20, Math.random() * 20, Math.random() * 20)\n      //     break;\n      //     case \"cylinder\":\n      //     geometry = new THREE.CylinderGeometry(Math.random() * 10, Math.random() * 10, Math.random() * 20)\n      //     break;\n      //     case \"cone\":\n      //     geometry = new THREE.ConeGeometry(Math.random() * 10, Math.random() * 20)\n      //     break;\n      //     case \"dodecahedron\":\n      //     geometry = new THREE.DodecahedronGeometry(Math.random() * 10)\n      //     break;\n      //     case \"sphere\":\n      //     geometry = new THREE.SphereGeometry(Math.random() * 10)\n      //     break;\n      //     case \"torus\":\n      //     geometry = new THREE.TorusGeometry(Math.random() * 10, Math.random() * 2)\n      //     break;\n      //     case \"torusKnot\":\n      //     geometry = new THREE.TorusKnotGeometry(Math.random() * 10, Math.random() * 2)\n      //     break;\n      //     default:\n      //   }\n      //\n      //   const nodeEl = document.createElement('div');\n      //   nodeEl.textContent = node.name //node.id;\n      //   nodeEl.style.color = node.color || \"#ffffff\";\n      //   nodeEl.className = 'node-label';\n      //   label =  new CSS2DObject(nodeEl);\n      //\n      //   if (geometry != null){\n      //     group.add(new THREE.Mesh(geometry, material))\n      //   }\n      //   group.add(label)\n      //\n      //   return group\n      // }\n\n\n      // function nodeThreeObject1(node){\n      //   const nodeEl = document.createElement('div');\n      //   nodeEl.textContent = node.name //node.id;\n      //   nodeEl.style.color = node.color || \"#ffffff\";\n      //   nodeEl.className = 'node-label';\n      //   return new CSS2DObject(nodeEl);\n      // }\n      // function nodeThreeObject({url}){\n      //   // .nodeThreeObject(({ url }) => {\n      //\n      //   // if(url == undefined){\n      //   //   url = \"root\"\n      //   // }\n      //   if (url != undefined && (url.endsWith('.png') || url.endsWith('.jpg') || url.endsWith('.jpeg'))){\n      //     const imgTexture = new THREE.TextureLoader().load(`${url}`);\n      //     const material = new THREE.SpriteMaterial({ map: imgTexture });\n      //     const sprite = new THREE.Sprite(material);\n      //     sprite.scale.set(12, 12);\n      //     return sprite;\n      //   }\n      //\n      // // })\n      // }\n\n\n      async function onNodeClick(node){\n        // Aim at node from outside it\n        //  console.log(node)\n        //this.selectedNodes.clear()\n        //this.selectedNodes.has(node) ? this.selectedNodes.delete(node) : this.selectedNodes.add(node);\n        // console.log(this.selectedNodes)\n        // if(node.url != undefined && node.url.startsWith('http')){\n        //   app.$store.commit ('app/mustExplore', node.url)\n        // }\n        console.log(\"node\",node)\n\n        const distance = 40;\n        let pos = {x: distance, y: distance, z: distance}\n        if(node.x != 0 && node.y != 0 && node.z != 0){\n          const distRatio = 1 + distance/Math.hypot(node.x, node.y, node.z);\n          pos = { x: node.x * distRatio, y: node.y * distRatio, z: node.z * distRatio }\n        }\n        store.state.core.graph.cameraPosition(\n          pos, // new position\n          node, // lookAt ({ x, y, z })\n          3000  // ms transition duration\n        );\n        // console.log(store.state.core.graph)\n        let n = store.state.core.nodes.find(n => n.id == node.id)\n        store.commit ('core/setCurrentNode', n)\n\n      }\n\n      // async function onBackgroundClick(event){\n      //   // let node =       new Neurone(\n      //   //   {\n      //   //     //  blip: \"blop\",\n      //   //     //  color: this.randomColor(),\n      //   //     //\n      //   //     //  id: i,\n      //   //     //  name: \"node fictif \"+i, //\"name for graph_\",\n      //   //     age: 0,\n      //   //     type: \"neurone\",\n      //   //     color: '#ffff00'\n      //   //   }\n      //   // )\n      //   console.log(event)\n      //   store.dispatch('core/newNode')\n      //   // console.log(\"new\", node)\n      //   //  Vue.prototype.$bvModal.show(\"modal-node\")\n      //\n      // }\n    }\n  }\n\n  // Auto-install\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(plugin)\n  }\n\n  export default plugin\n","// import ForceGraph3D from '3d-force-graph';\n// import { Core /*Neurone, Brain,  Graph*/ } from '@/neurone-factory'\n//\nimport { v4 as uuidv4 } from 'uuid';\n// let graph = undefined\nconst plugin = {\n  install(Vue, opts = {}) {\n    opts ? console.log(opts): {}\n    // let store = opts.store\n    // console.log(store)\n\n    Vue.prototype.$newNode = async function(options = {}){\n      if (options.name != undefined && options.name.startsWith(\"http\")){\n        console.log(\"search\", options)\n        let node = await Vue.prototype.$loadNeurone(options.name)\n        console.log(\"neurone\", node)\n        return node\n      }else{\n        let context =  {\n          \"name\": \"http://xmlns.com/foaf/0.1/name\",\n          \"knows\": \"http://xmlns.com/foaf/0.1/knows\",\n          \"@base\": \"http://local/\",\n          \"@vocab\": \"https://scenaristeur.github.io/agent/\",\n          \"id\": \"@id\",\n          \"type\": \"@type\",\n          \"reverse\": \"@reverse\",\n          \"homepage\": {\n            \"@id\": \"http://xmlns.com/foaf/0.1/homepage\",\n            \"@type\": \"@id\"\n          }\n        }\n        let node = {\n          \"@context\" : Object.assign(context, options['@context']),\n          \"id\": options['@id'] || options.id || uuidv4(),\n          \"name\": options.name && options.name['@value'] || options.name || \"\",\n          type: options.type || \"neurone\",\n         //'shape': 'sphere' || options.shape,\n          //color: \"#00ff00\",\n          \"homepage\": \"https://scenaristeur.github.io/agent/\",\n        };\n        if(options.base64 != undefined){\n          node.shape = 'base64'\n          node.base64 = options.base64\n          node.type = options.type\n        }\n        if (options.neurones != undefined ){\n          node.neurones = options.neurones\n        }\n\n        return node\n      }\n    }\n\n    Vue.prototype.$addProp = function(data){\n      let n = data.node\n      let p = data.propertie\n      let newValue = data.value\n      let oldValue = n[p]\n      console.log(typeof oldValue, oldValue)\n      if (oldValue == undefined){\n        n[p] = newValue\n      }else if(Array.isArray(oldValue)){\n        n[p].push(newValue)\n      }else{\n        n[p] = [oldValue, newValue]\n      }\n\n      // }else if(typeof oldValue == 'object'){\n      //\n      // }else if(typeof oldValue == 'string'){\n      //   n[p] = [oldValue, newValue]\n      // }else{\n      //   console.log(\"todo\", data)\n      // }\n\n\n\n      return n\n    }\n\n    Vue.prototype.$addLink = function(t){\n      console.log(t)\n      let s = t.subject\n      let p = t.predicate\n      let o = t.object\n      s = set(s, p, o)\n      o = setReverse(o, p, s)\n      return [s,o]\n    }\n\n    function setReverse(main, p, item){\n      main.reverse ==  undefined ? main.reverse = {}: \"\"\n      if(main.reverse[p] == undefined){\n        main.reverse[p] = {id: item.id, name: item.name}\n      }else{\n        switch (typeof main.reverse[p]) {\n          case \"string\":\n          console.log(\"TODO string\", main.reverse[p] )\n          break;\n          default:\n          if(Array.isArray(main.reverse[p])){\n            main.reverse[p].push({id: item.id, name: item.name})\n          }else{\n            let old = main.reverse[p]\n            main.reverse[p] = []\n            main.reverse[p].push(old)\n            main.reverse[p].push({id: item.id, name: item.name})\n          }\n        }\n      }\n      console.log(main)\n      return main\n    }\n    function set(main, p, item){\n      console.log(typeof main[p], main[p], item)\n      let name = item.name\n      let id = item.id\n\n      if(main[p] == undefined){\n        main[p] = {id: id, name: name}\n      }else{\n        switch (typeof main[p]) {\n          case \"string\":\n          console.log(\"TODO string\", main[p] )\n          // let old =\n          main[p] = [main[p]]\n          main[p].push({id: id, name: name})\n          break;\n          default:\n          if(Array.isArray(main[p])){\n            main[p].push({id: id, name: name})\n          }else{\n            let old = main[p]\n            main[p] = []\n            main[p].push(old)\n            main[p].push({id: id, name: name})\n          }\n        }\n      }\n      console.log(main)\n      return main\n    }\n\n\n    // Vue.prototype.$findNodeByName = async function(name){\n    //   console.log(name)\n    //   let nodes = store.state.nodes\n    //   console.log(nodes)\n    //\n    //\n    //\n    //\n    //\n    //\n    // }\n    //\n    // Vue.prototype.$findNodeById = async function(id){\n    //   console.log(id)\n    //   let nodes = store.state.nodes\n    //   console.log(nodes)\n    //\n    // }\n\n\n  }\n}\n\n// Auto-install\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(plugin)\n}\n\nexport default plugin\n","import {\n  getSolidDataset,\n  getThingAll,\n  //getPublicAccess,\n  //  getAgentAccess,\n  //getSolidDatasetWithAcl,\n  //getPublicAccess,\n  //getAgentAccess,\n  // getFile,\n  // isRawData,\n  // getContentType,\n  //saveFileInContainer,\n  // getContainedResourceUrlAll,\n  // getStringNoLocaleAll,\n  // createContainerAt,\n  // getSourceUrl,\n  // deleteFile,\n  //removeThing,\n  // removeAll,\n  //removeStringNoLocale,\n  //deleteContainer,\n  //addStringNoLocale,\n  //setThing,\n  //saveSolidDatasetAt,\n  //createSolidDataset,\n  //createThing,\n  //addUrl,\n  //buildThing,\n  //overwriteFile,\n  getStringNoLocale,\n  getThing,\n  getUrlAll,\n  getUrl,\n  //addDatetime,\n  //  getDatetime,\n  //setUrl,\n  //setStringNoLocale,\n  //setDecimal,\n  //setInteger,\n  //  getDecimal,\n  //getInteger,\n  // setDatetime\n} from \"@inrupt/solid-client\";\nimport { FOAF, /*LDP,*/ VCARD, /*RDF,*/ AS, /*RDFS, OWL*/  } from \"@inrupt/vocab-common-rdf\";\nimport { WS, SOLID } from \"@inrupt/vocab-solid-common\";\n\nimport * as sc from '@inrupt/solid-client-authn-browser'\n\nconst plugin = {\n  install(Vue, opts = {}) {\n    let store = opts.store\n\n    Vue.prototype.$checkSolidSession = async function(){\n      await sc.handleIncomingRedirect({\n        //restorePreviousSession: true\n      }).then((info) => {\n        if(info.isLoggedIn ==  true){\n          console.log(`Logged in with WebID [${info.webId}]`)\n          store.commit('solid/setSession',info)\n          let session = sc.getDefaultSession()\n          this.$getPodInfosFromSession(session)\n        }\n      })\n\n    },\n\n    Vue.prototype.$login = async function(issuer){\n      console.log(\"login\", issuer)\n      if (!sc.getDefaultSession().info.isLoggedIn) {\n        await sc.login({\n          oidcIssuer: issuer,\n          redirectUrl: window.location.href,\n          clientName: \"Verse\"\n        });\n      }\n    },\n\n    Vue.prototype.$logout = async function(){\n      let session = sc.getDefaultSession()\n      await session.logout()\n      store.commit('solid/setSession',null)\n      store.commit('solid/setPod', null)\n      //store.dispatch('nodes/clearStore')\n    },\n    Vue.prototype.$getPodInfosFromSession = async function(session){\n      // try{\n      let pod = {}\n      pod.logged = session.info.isLoggedIn\n      if (pod.logged) {\n        pod.webId = session.info.webId\n        pod = await this.$getPodInfos(pod)\n        pod.neuroneStore == undefined ? pod.neuroneStore = pod.storage+'public/neurones/' : \"\"\n        pod.workspaces == undefined ? pod.workspaces = [] : \"\"\n\n        store.commit('solid/setPod', pod)\n        //  this.$checkChanges()\n        //this.$synchronize()\n        //  await this.$getVerses(pod)\n\n        if (pod.storage != null){\n          pod.brains = pod.storage+'brains.json'\n          Vue.prototype.$checkBrains()\n          //  this.$setCurrentThingUrl(pod.storage)\n          //  store.commit('booklice/setPath', pod.storage+'public/bookmarks/')\n          //let publicTagFile = pod.storage+'public/tags.ttl'\n          //let privateTagFile = podStorage+'private/tags.ttl'\n          // let tags = await this.$getTags(publicTagFile)\n          // console.log(\"############################tags\",tags)\n        }\n      }else{\n        store.commit('solid/setPod', null)\n        //  store.commit('solid/setThings', [])\n      }\n      // } catch(e){\n      //   alert(\"$getPodInfosFromSession \"+e)\n      // }\n    },\n    Vue.prototype.$getPodInfos = async function(pod){\n      try{\n        const dataset = await getSolidDataset( pod.webId, { fetch: sc.fetch });\n        let profile = await getThing( dataset, pod.webId );\n        pod.name = await getStringNoLocale(profile, FOAF.name);\n        pod.friends = await getUrlAll(profile, FOAF.knows).map(webId => {return {webId: webId}})\n        pod.storage = await getUrl(profile, WS.storage);\n        pod.photo = await getUrl(profile, VCARD.hasPhoto);\n        pod.neuroneStore == undefined ? pod.neuroneStore = pod.storage+'public/neurones/' : \"\"\n        pod.workspaces = []\n\n        let publicTypeIndexUtl = pod.storage+'settings/publicTypeIndex.ttl'\n        const pti_ds = await getSolidDataset( publicTypeIndexUtl, { fetch: sc.fetch });\n        let indexes = await getThingAll(pti_ds)\n        for await (const i of indexes){\n          let types = await getUrlAll(i, \"http://www.w3.org/ns/solid/terms#forClass\");\n          //console.log(types)\n          if(types.includes(\"https://scenaristeur.github.io/verse#Workspace\")){\n            console.log(i)\n            let ws = {}\n            ws.name =  await getStringNoLocale(i, AS.name)\n            ws.url = await getUrl(i,SOLID.instance)\n            pod.workspaces.push(ws)\n          }\n        }\n        //console.log(ws)\n        //  pod.workspaces = await getUrlAll(pti_ds, \"http://www.w3.org/ns/solid/terms#forClass\", \"https://www.w3.org/ns/activitystreams#Collection\");\n        // pod.publicTags = await this.$getTags(pod.storage+'public/tags.ttl')\n        // store.commit(\"vatch/addToNetwork\", pod.publicTags)\n        //this.$subscribe(pod.storage)\n        //  console.log(\"getpodinfos\",pod)\n      }catch(e)\n      {\n        console.log(\"erreur\",e, pod)\n      }\n      console.log(pod)\n      return await pod\n    }\n\n\n\n\n  }\n}\n\n// Auto-install\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(plugin)\n}\n\nexport default plugin\n","// import ForceGraph3D from '3d-force-graph';\n// import { Core /*Neurone, Brain,  Graph*/ } from '@/neurone-factory'\n//\nimport { v4 as uuidv4 } from 'uuid';\n// let graph = undefined\n\n\nimport {\n  getSolidDataset,\n  // getThingAll,\n  //getPublicAccess,\n  //  getAgentAccess,\n  //getSolidDatasetWithAcl,\n  //getPublicAccess,\n  //getAgentAccess,\n  getFile,\n  // isRawData,\n  // getContentType,\n  //saveFileInContainer,\n  getContainedResourceUrlAll,\n  //getStringNoLocaleAll,\n  // createContainerAt,\n  getSourceUrl,\n  // deleteFile,\n  //removeThing,\n  // removeAll,\n  //removeStringNoLocale,\n  //deleteContainer,\n  // addStringNoLocale,\n  // setThing,\n  // saveSolidDatasetAt,\n  //createSolidDataset,\n  // createThing,\n  // addUrl,\n  //buildThing,\n\n  overwriteFile,\n  // getStringNoLocale,\n  // getThing,\n  // getUrlAll,\n  // getUrl,\n  //addDatetime,\n  //  getDatetime,\n  //setUrl,\n  //setStringNoLocale,\n  //setDecimal,\n  //setInteger,\n  //  getDecimal,\n  //getInteger,\n  // setDatetime\n} from \"@inrupt/solid-client\";\n\n// import * as jsonld from 'jsonld';\n// import { RDF,  } from \"@inrupt/vocab-common-rdf\";\n\nimport * as sc from '@inrupt/solid-client-authn-browser'\nconst plugin = {\n  install(Vue, opts = {}) {\n    let store = opts.store\n\n    Vue.prototype.$saveBrainToSolid = async function(){\n      console.log(store.state.core.nodes)\n      if(store.state.solid.pod == null){\n        alert(\"Please Login to your pod before trying to save this brain\")\n      }else{\n\n        let suggestedpath = store.state.solid.pod.storage+\"brains/\"\n        console.log(suggestedpath)\n\n        let  path = prompt(\"Please confirm the path where to store the nodes\", suggestedpath);\n        console.log(path)\n        if(path != null){\n          path = !path.endsWith('/') ? path+= '/' : path\n\n          store.state.core.nodes.forEach(n => {\n            Vue.prototype.$spinnerAdd({id: \"saving \"+n.id})\n          });\n\n\n\n          for await (const n of store.state.core.nodes){\n            console.log(n.id, n)\n\n            n['@context']['@base'] = path\n\n            const savedFile = await overwriteFile(\n              path+lastPartOfUrl(n.id),\n              new Blob([JSON.stringify(n)], { type: \"application/ld+json\" }),\n              { contentType: \"application/ld+json\", fetch: sc.fetch }\n            );\n            //  console.log(savedFile)\n\n            console.log(`File saved at ${getSourceUrl(savedFile)}`);\n            Vue.prototype.$spinnerRemove({id: \"saving \"+n.id})\n\n\n            // let brainsDataset = await getSolidDataset(\n            //   store.state.solid.pod.brains, {\n            //     fetch: sc.fetch\n            //   });\n            //\n            //   let brain = await getThing(brainsDataset, path, {fetch: sc.fetch})\n            //   console.log(brain)\n            //   if (brain == null){\n            //\n            //\n            //\n            //\n            //\n            //\n            //\n            //\n            //     // let last = lastPartOfUrl(path)\n            //     // console.log(last)\n            //     // let brainThing = createThing({ name: last });\n            //     // brainThing = addStringNoLocale(brainThing, \"http://xmlns.com/foaf/0.1/name\", last);\n            //     // brainThing = addUrl(brainThing, RDF.type, \"https://scenaristeur.github.io/agent/brain\");\n            //     // brainsDataset = setThing(brainsDataset, brainThing);\n            //     // console.log(brainsDataset)\n            //     // const savedSolidDataset = await saveSolidDatasetAt(\n            //     //   store.state.solid.pod.brains,\n            //     //   brainsDataset,\n            //     //   { fetch: sc.fetch }             // fetch from authenticated Session\n            //     // );\n            //     // console.log(savedSolidDataset)\n            //   }\n\n          }\n\n          Vue.prototype.$spinnerAdd({id: \"saving \"+store.state.solid.pod.brains})\n          const brainsFile = await getFile(store.state.solid.pod.brains, { fetch: sc.fetch });\n          //  console.log(brainsFile)\n          const reader = new FileReader();\n          reader.onload = async () => {\n            try {\n\n              let brainsIndex = JSON.parse(reader.result)\n\n              let now = Date.now()\n              let currentBrain = {id: path, name: lastPartOfUrl(path), updated: now, checksum: 1000*Math.random()}\n              var index = brainsIndex.brains.findIndex(x => x.id==currentBrain.id);\n              if(index === -1){\n                currentBrain.created= now\n                brainsIndex.brains.push(currentBrain)\n              }else{\n                Object.assign(brainsIndex.brains[index], currentBrain)\n              }\n\n\n              await overwriteFile(\n                store.state.solid.pod.brains,\n\n                new Blob([JSON.stringify(brainsIndex)], { type: \"application/ld+json\" }),\n                { contentType: \"application/ld+json\", fetch: sc.fetch }\n              );\n\n              //reload brains\n              Vue.prototype.$checkBrains()\n              Vue.prototype.$spinnerRemove({id: \"saving \"+store.state.solid.pod.brains})\n            } catch (err) {\n              console.log(err);\n            }\n          };\n          reader.onerror = (error) => {\n            console.log(error);\n          };\n          reader.readAsText(brainsFile);\n\n        }else{\n          alert(\"saving to Solid Pod aborted\")\n        }\n      }\n    }\n\n\n    Vue.prototype.$loadBrainsFromWikidata = async function(tags){\n      console.log(tags)\n\n      tags.forEach(async function(t) {\n        console.log(t)\n        let node = {id: t.url, name: t.item.aliases && t.item.aliases[0] || t.item.label || t.text, color: \"lightblue\", url: t.url, source: \"https://wikidata.org\"}\n\n\n        await store.dispatch('core/saveNode', node)\n\n      });\n\n      await store.dispatch('core/getNodes')\n\n\n\n      // let test = \"https://www.wikidata.org/wiki/Special:EntityData/Q182665.jsonld\"\n      // console.log(test)\n      //loadExternalNeurones(tags)\n\n    }\n\n    Vue.prototype.$brainsFromPod = async function(pod){\n      let path = pod.storage+\"public/brains/\"\n      Vue.prototype.$spinnerAdd({id: \"loading \"+path})\n      let dataset = null\n      try{\n        dataset = await getSolidDataset( path, { fetch: sc.fetch });\n        let remotesUrl  = await getContainedResourceUrlAll(dataset,{fetch: sc.fetch} )\n        console.log(remotesUrl)\n      //  await loadNeurones(remotesUrl)\n        return remotesUrl\n      }\n      catch(e){\n        console.log(e)\n      }\n      Vue.prototype.$spinnerRemove({id: \"loading \"+path})\n    }\n\n\n    Vue.prototype.$loadBrainFromSolid = async function(path){\n      if (path == undefined){\n        let suggestedpath = store.state.solid.pod != null ? store.state.solid.pod.storage+\"brains/\" : \"https://solid.provider/brains_folder or example...\"\n        console.log(suggestedpath)\n        path = prompt(\"Load brain from \", suggestedpath);\n      }\n\n      if(path != null){\n        console.log(\"load brain from\", path)\n        Vue.prototype.$spinnerAdd({id: \"loading \"+path})\n        let dataset = null\n        try{\n          dataset = await getSolidDataset( path, { fetch: sc.fetch });\n          let remotesUrl  = await getContainedResourceUrlAll(dataset,{fetch: sc.fetch} )\n          console.log(remotesUrl)\n          await loadNeurones(remotesUrl)\n        }\n        catch(e){\n          alert(e)\n        }\n        Vue.prototype.$spinnerRemove({id: \"loading \"+path})\n      }\n    }\n\n    Vue.prototype.$checkBrains = async function(){\n      Vue.prototype.$spinnerAdd({id: \"checkBrains\"})\n      try{\n        const file = await getFile(store.state.solid.pod.brains, { fetch: sc.fetch });\n        console.log(file)\n      }catch(e){\n        let default_brains = {\n          \"@context\": {\n            \"name\": \"http://xmlns.com/foaf/0.1/name\",\n            \"knows\": \"http://xmlns.com/foaf/0.1/knows\",\n            \"@base\": \"http://local/\",\n            \"@vocab\": \"https://scenaristeur.github.io/agent/\",\n            \"id\": \"@id\",\n            \"type\": \"@type\",\n            \"reverse\": \"@reverse\",\n            \"homepage\": {\n              \"@id\": \"http://xmlns.com/foaf/0.1/homepage\",\n              \"@type\": \"@id\"\n            }\n          },\n          \"id\": uuidv4(),\n          \"name\": \"Brain Index\",\n          type: \"brainIndex\",\n          brains: [],\n          \"homepage\": \"https://scenaristeur.github.io/agent\",\n        };\n        await overwriteFile(\n          store.state.solid.pod.brains,\n          new Blob([JSON.stringify(default_brains)], { type: \"application/ld+json\" }),\n          { contentType: \"application/ld+json\", fetch: sc.fetch }\n        );\n      }\n\n      try{\n        const file = await getFile(store.state.solid.pod.brains, { fetch: sc.fetch });\n        const reader = new FileReader();\n\n        reader.onload = async () => {\n          try {\n            let brainsIndex = JSON.parse(reader.result)\n            store.commit('core/setBrains',brainsIndex)\n          } catch (err) {\n            console.log(err);\n          }\n        };\n        reader.onerror = (error) => {\n          console.log(error);\n        };\n        reader.readAsText(file);\n      }catch(e){\n        console.log(e)\n      }finally{\n        Vue.prototype.$spinnerRemove({id: \"checkBrains\"})\n      }\n    }\n\n\n    // async function loadExternalNeurones(sources){\n    //   // todo : move move outside \"solid\"-data-plugin\n    //   console.log(sources)\n    //   let test = \"simple\" // \"jsonld\" || \"json\"\n    //   // let test =  \"jsonld\"\n    //\n    //   for await (let s of sources){\n    //     console.log(s)\n    //     let id = s.item.id\n    //     let node = null\n    //\n    //     if(test == \"simple\"){\n    //       let response = await fetch(\"https://www.wikidata.org/wiki/Special:EntityData/\"+id+\".json\")\n    //       let data = await response.json()\n    //       console.log(data)\n    //       node = data.entities[id]\n    //       console.log(node)\n    //       await store.dispatch('core/saveNode', node)\n    //       //let node = JSON.parse(reader.result)\n    //\n    //     }else{\n    //       //full loading the graph of the resource\n    //       Vue.prototype.$spinnerAdd({id: \"loading \"+id})\n    //       let response = await fetch(\"https://www.wikidata.org/wiki/Special:EntityData/\"+id+\".jsonld\")\n    //       let jsonld = await response.json()\n    //       console.log(jsonld)\n    //       console.log(jsonld['@graph'])\n    //       let cpt = 1000\n    //       for(let item of jsonld['@graph']){\n    //         if (cpt ==0){\n    //           store.dispatch('core/getNodes')\n    //           Vue.prototype.$spinnerRemove({id: \"loading \"+id})\n    //           return\n    //         }\n    //         cpt--\n    //         Vue.prototype.$spinnerAdd({id: \"loading \"+cpt})\n    //         console.log(cpt)\n    //         console.log(item)\n    //         // let options = {}\n    //        item['@context'] == undefined ? item['@context'] = jsonld['@context'] : \"\"\n    //         // // item['@context'].id = '@id'\n    //         // // item['@context'].type = \"@type\"\n    //         // options.id = item['@id']\n    //         // options.name = item.about\n    //         // //  item.type = item['@type']\n    //         // console.log(options)\n    //         node = Vue.prototype.$newNode(item)\n    //         console.log(node)\n    //         await store.dispatch('core/saveNode', node)\n    //         Vue.prototype.$spinnerRemove({id: \"loading \"+cpt})\n    //\n    //       }\n    //\n    //     }\n    //\n    //     console.log(\"done\")\n    //\n    //     store.dispatch('core/getNodes')\n    //\n    //   }\n    //\n    //\n    //   //     var url = \"https://en.wikipedia.org/w/api.php\";\n    //   //\n    //   //     var params = {\n    //   //         action: \"query\",\n    //   //         format: \"json\",\n    //   //         titles: \"Lyon\",\n    //   //         prop: \"links\"\n    //   //     };\n    //   //\n    //   //     url = url + \"?origin=*\";\n    //   //     Object.keys(params).forEach(function(key){url += \"&\" + key + \"=\" + params[key];});\n    //   //\n    //   //     fetch(url)\n    //   //         .then(function(response){return response.json();})\n    //   //         .then(function(response) {\n    //   //           console.log(response)\n    //   //             var pages = response.query.pages;\n    //   //             for (var p in pages) {\n    //   //                 for (var l of pages[p].links) {\n    //   //                     console.log(l.title);\n    //   //                 }\n    //   //             }\n    //   //         })\n    //   //         .catch(function(error){console.log(error);});\n    //   //\n    //   // }\n    //\n    //\n    //   // async function loadExternalNeurones1(sources){\n    //   //   console.log(sources)\n    //   //\n    //   //   var url = \"https://wikidata.org/w/api.php\";\n    //   //   // var url = \"https://en.wikipedia.org/w/api.php\";\n    //   //\n    //   //   var params = {\n    //   //     action: \"query\",\n    //   //     format: \"json\",\n    //   //     // titles: \"Albert Einstein\",\n    //   //     pageids: \"680\",\n    //   //     prop: \"links\"\n    //   //   };\n    //   //   // var params = {\n    //   //   //     action: \"query\",\n    //   //   //     format: \"json\",\n    //   //   //     list: \"tags\",\n    //   //   //     tgprop: \"hitcount\",\n    //   //   //     tglimit: \"3\"\n    //   //   // };\n    //   //\n    //   //   url = url + \"?origin=*\";\n    //   //   Object.keys(params).forEach(function(key){url += \"&\" + key + \"=\" + params[key];});\n    //   //\n    //   //\n    //   //   fetch(url)\n    //   //   .then(function(response){return response.json();})\n    //   //   .then(function(response) {\n    //   //     var pages = response.query.pages;\n    //   //     for (var p in pages) {\n    //   //       for (var l of pages[p].links) {\n    //   //         console.log(l.title);\n    //   //       }\n    //   //     }\n    //   //   })\n    //   //   .catch(function(error){console.log(error);});\n    //   //\n    //   //   // fetch(url)\n    //   //   //     .then(function(response){return response.json();})\n    //   //   //     .then(function(response) {\n    //   //   //         var tags = response.query.tags;\n    //   //   //         for (var t in tags) {\n    //   //   //             console.log(tags[t].name);\n    //   //   //         }\n    //   //   //     })\n    //   //   //     .catch(function(error){console.log(error);});\n    //   //\n    //   //\n    //   //   // const filePromises = sources.map(async function(s) {\n    //   //   //   // let url = s.url+'.jsonld'\n    //   //   //   let url = s.item.concepturi+\".jsonld&origin*\"\n    //   //   //   //https://www.wikidata.org/entity/Q42.jsonld\n    //   //   //   console.log(\"loading\",s.text)\n    //   //   //   try{\n    //   //   //     console.log(\"fetching\",url)\n    //   //   //     const res = await fetch(url)\n    //   //   //     const data = await res.json()\n    //   //   //     console.log(data)\n    //   //   //     // this.items = suggestions.search\n    //   //   //     // console.log(this.items)\n    //   //   //     // this.autocompleteItems = suggestions.search.map(a => {\n    //   //   //     //   return { text: a.match.text+\" (\"+a.description+\")\", url: a.concepturi };\n    //   //   //     // });\n    //   //   //   }catch(e){\n    //   //   //     alert(e)\n    //   //   //   }\n    //   //   // });\n    //   //   //\n    //   //   // // Wait for all promises to be resolved\n    //   //   // await Promise.all(filePromises);\n    //   //   //  store.dispatch('core/getNodes')\n    //   //\n    //   //\n    // }\n\n    async function loadNeurones(remotesUrl){\n\n      // urls.forEach(async function (u) {\n      //   // let doc = null\n      //   console.log(u)\n      //   const file = await getFile(u, { fetch: sc.fetch });\n      //   //  console.log(file)\n      //   const reader = new FileReader();\n      //\n      //   reader.onload = async () => {\n      //     try {\n      //       //response =\n      //       // Resolve the promise with the response value\n      //       let doc = JSON.parse(reader.result)\n      //       let context = doc['@context']\n      //       console.log(\"result\", doc);\n      //\n      //       const compacted = await jsonld.compact(doc, context);\n      //       console.log(JSON.stringify(compacted, null, 2));\n      //\n      //       await store.dispatch('core/saveNode', compacted)\n      //\n      //\n      //     } catch (err) {\n      //       console.log(err);\n      //     }\n      //   };\n      //   reader.onerror = (error) => {\n      //     console.log(error);\n      //   };\n      //   reader.readAsText(file);\n      //\n      // });\n\n      // let nodes = []\n\n      const filePromises = remotesUrl.map(async function(url) {\n\n        if(url.endsWith('/')){\n          Vue.prototype.$loadBrainFromSolid(url)\n          return\n        }\n\n        // Return a promise per file\n        Vue.prototype.$spinnerAdd({id: \"loading \"+url})\n        const file = await getFile(url, { fetch: sc.fetch });\n        return new Promise( function(resolve, reject) {\n\n          const reader = new FileReader();\n          reader.onload = async () => {\n            try {\n              //response =\n              // Resolve the promise with the response value\n              let node = JSON.parse(reader.result)\n              await store.dispatch('core/saveNode', node)\n              Vue.prototype.$spinnerRemove({id: \"loading \"+url})\n              resolve(node);\n            } catch (err) {\n              reject(err);\n            }\n          };\n          reader.onerror = (error) => {\n            reject(error);\n          };\n          reader.readAsText(file);\n        });\n      });\n\n      // Wait for all promises to be resolved\n      await Promise.all(filePromises);\n      store.dispatch('core/getNodes')\n\n    }\n\n    Vue.prototype.$loadNeurone = async function(url){\n      Vue.prototype.$spinnerAdd({id: \"loading \"+url})\n      const file = await getFile(url, { fetch: sc.fetch });\n      return new Promise( function(resolve, reject) {\n\n        const reader = new FileReader();\n        reader.onload = async () => {\n          try {\n            //response =\n            // Resolve the promise with the response value\n            let node = JSON.parse(reader.result)\n          //  await store.dispatch('core/saveNode', node)\n            Vue.prototype.$spinnerRemove({id: \"loading \"+url})\n            resolve(node);\n          } catch (err) {\n            reject(err);\n          }\n        };\n        reader.onerror = (error) => {\n          reject(error);\n        };\n        reader.readAsText(file);\n      });\n    }\n\n    function lastPartOfUrl(str){\n      var n = str.lastIndexOf('/');\n      var result = str.substring(n + 1);\n      return result.length == 0 ? lastPartOfUrl(str.slice(0, -1)) : result\n    }\n\n    // Vue.prototype.$newNode = function(options = {}){\n    //   let node = {\n    //     \"@context\": {\n    //       \"name\": \"http://xmlns.com/foaf/0.1/name\",\n    //       \"knows\": \"http://xmlns.com/foaf/0.1/knows\",\n    //       \"id\": \"@id\",\n    //       \"type\": \"@type\",\n    //       \"reverse\": \"@reverse\",\n    //       \"homepage\": {\n    //         \"@id\": \"http://xmlns.com/foaf/0.1/homepage\",\n    //         \"@type\": \"@id\"\n    //       }\n    //     },\n    //     \"id\": \"http://local/\"+uuidv4(),\n    //     \"name\": options.name || \"\",\n    //     type: \"neurone\",\n    //     //color: \"#00ff00\",\n    //     \"homepage\": \"http://manu.sporny.org/\",\n    //     // \"knows\": [{\n    //     //   \"name\": \"Daniele\"\n    //     // }, {\n    //     //   \"name\": \"Lucio\"\n    //     // }],\n    //     // \"knows\": [{\n    //     //   \"id\": \"_:7053c150-5fea-11e3-a62e-adadc4e3df76\",\n    //     //   \"name\": \"Boby\"\n    //     // }, {\n    //     //   \"id\": \"_:9d2bb59d-3baf-42ff-ba5d-9f8eab34ada4\",\n    //     //   \"name\": \"John\"\n    //     // }]\n    //   };\n    //\n    //   return node\n    // }\n    //\n    // Vue.prototype.$addProp = function(data){\n    //   let n = data.node\n    //   let p = data.propertie\n    //   let newValue = data.value\n    //   let oldValue = n[p]\n    //   console.log(typeof oldValue, oldValue)\n    //   if (oldValue == undefined){\n    //     n[p] = newValue\n    //   }else if(Array.isArray(oldValue)){\n    //     n[p].push(newValue)\n    //   }else{\n    //     n[p] = [oldValue, newValue]\n    //   }\n    //\n    //   // }else if(typeof oldValue == 'object'){\n    //   //\n    //   // }else if(typeof oldValue == 'string'){\n    //   //   n[p] = [oldValue, newValue]\n    //   // }else{\n    //   //   console.log(\"todo\", data)\n    //   // }\n    //\n    //\n    //\n    //   return n\n    // }\n    //\n    // Vue.prototype.$addLink = function(t){\n    //   console.log(t)\n    //   let s = t.subject\n    //   let p = t.predicate\n    //   let o = t.object\n    //   s = set(s, p, o)\n    //   o = setReverse(o, p, s)\n    //   return [s,o]\n    // }\n    //\n    // function setReverse(main, p, item){\n    //   main.reverse ==  undefined ? main.reverse = {}: \"\"\n    //   if(main.reverse[p] == undefined){\n    //     main.reverse[p] = {id: item.id, name: item.name}\n    //   }else{\n    //     switch (typeof main.reverse[p]) {\n    //       case \"string\":\n    //       console.log(\"TODO string\", main.reverse[p] )\n    //       break;\n    //       default:\n    //       if(Array.isArray(main.reverse[p])){\n    //         main.reverse[p].push({id: item.id, name: item.name})\n    //       }else{\n    //         let old = main.reverse[p]\n    //         main.reverse[p] = []\n    //         main.reverse[p].push(old)\n    //         main.reverse[p].push({id: item.id, name: item.name})\n    //       }\n    //     }\n    //   }\n    //   console.log(main)\n    //   return main\n    // }\n    // function set(main, p, item){\n    //   console.log(typeof main[p], main[p], item)\n    //   if(main[p] == undefined){\n    //     main[p] = {id: item.id, name: item.name}\n    //   }else{\n    //     switch (typeof main[p]) {\n    //       case \"string\":\n    //       console.log(\"TODO string\", main[p] )\n    //       break;\n    //       default:\n    //       if(Array.isArray(main[p])){\n    //         main[p].push({id: item.id, name: item.name})\n    //       }else{\n    //         let old = main[p]\n    //         main[p] = []\n    //         main[p].push(old)\n    //         main[p].push({id: item.id, name: item.name})\n    //       }\n    //     }\n    //   }\n    //   console.log(main)\n    //   return main\n    // }\n\n\n    // Vue.prototype.$findNodeByName = async function(name){\n    //   console.log(name)\n    //   let nodes = store.state.nodes\n    //   console.log(nodes)\n    //\n    //\n    //\n    //\n    //\n    //\n    // }\n    //\n    // Vue.prototype.$findNodeById = async function(id){\n    //   console.log(id)\n    //   let nodes = store.state.nodes\n    //   console.log(nodes)\n    //\n    // }\n\n\n  }\n}\n\n// Auto-install\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(plugin)\n}\n\nexport default plugin\n","// import ForceGraph3D from '3d-force-graph';\n// import { Core /*Neurone, Brain,  Graph*/ } from '@/neurone-factory'\n//\n\n// import * as IPFS from 'ipfs-core' // pb webpack https://github.com/ipfs/js-ipfs/issues/1927\n\n\nimport {concat} from 'uint8arrays'\n\n// import { v4 as uuidv4 } from 'uuid';\n\nconst plugin = {\n  async install(Vue, opts = {}) {\n    let store = opts.store\n    let IPFS, ipfs\n\n    Vue.prototype.$initIpfs = async function(){\n       IPFS = window.IpfsCore;\n      ipfs = await IPFS.create()\n      let id = await ipfs.id()\n      console.log(ipfs,id )\n      store.commit('core/setIpfsNode',id)\n    }\n\n\n    Vue.prototype.$saveBrainToIpfs = async function(){\n\n      console.log(\"IPFS\",ipfs,store.state.core.nodes)\n      let nodes = store.state.core.nodes\n    //  let links = store.state.core.links\n    //  let graph = nodes.concat(links)\n      const graph_cid = await ipfs.add(JSON.stringify(nodes))\n\n      console.log(graph_cid)\n      store.commit('core/setGraphCid', graph_cid)\n\n    }\n\nVue.prototype.$loadBrainFromIpfs = async function(cid){\n  console.log(cid)\n  let chunks = []\n\n  for await (const chunk of ipfs.cat(cid)) {\n    chunks.push(chunk);\n  }\n\n  const data = concat(chunks)\n  const decodedData = JSON.parse(new TextDecoder().decode(data).toString());\n  console.log(\"decoded\",decodedData)\n  for await (const node of decodedData) {\n    await store.dispatch('core/saveNode', node)\n  }\n  console.log('1')\n  await store.dispatch('core/getNodes')\n  console.log('2')\n  //alert(\"comming soon\",JSON.stringify(decodedData))\n\n}\n\n\n    Vue.prototype.$saveNodesToIpfs = async function(){\n\n      console.log(\"IPFS\",ipfs,store.state.core.nodes)\n      store.commit('core/resetIpfsCid')\n\n\n      store.state.core.nodes.forEach(async function(node) {\n\n        console.log(node)\n        const cid = await ipfs.add(JSON.stringify(node))\n        console.log(cid, node)\n        let c = {cid: cid.path, name: node.name, id: node.id}\n        store.commit('core/addIpfsCid', c)\n        let chunks = []\n\n        for await (const chunk of ipfs.cat(cid.path)) {\n          chunks.push(chunk);\n        }\n\n        const data = concat(chunks)\n        const decodedData = JSON.parse(new TextDecoder().decode(data).toString());\n        console.log(decodedData)\n        // const cid = await ipfs.object.new(node)\n        // console.log(cid)\n      });\n\n\n\n      // we loop over the results because 'add' supports multiple\n      // additions, but we only added one entry here so we only see\n      // one log line in the output\n      // for await (const { cid } of results) {\n      //   // CID (Content IDentifier) uniquely addresses the data\n      //   // and can be used to get it again.\n      //   console.log(cid.toString())\n      // }\n\n      // const { cid } = await ipfs.add('Hello world')\n      // console.info(cid)\n\n\n\n\n    }\n\n\n  }\n}\n\n// Auto-install\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(plugin)\n}\n\nexport default plugin\n","const plugin = {\n  install(Vue, opts = {}) {\n    let store = opts.store\n    console.log(store)\n\n    Vue.prototype.$search = async function(params){\n      console.log(\"searching \", params.text, store.state.core.nodes)\n      let candidates = store.state.core.nodes\n      let results = candidates.filter(n => (n.name != undefined && n.name.includes(params.text)) )\n      if (params.searchById == true){\n        /* || n.id.includes(text)*/\n        let resultsById = candidates.filter(n => (n.id.includes(params.text)) )\n        results = results.concat(resultsById)\n      }\n\n\n      //store.commit('app/setBrain', brain)\n      return results\n    }\n\n\n  }\n}\n\n// Auto-install\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(plugin)\n}\n\nexport default plugin\n","// import { Galaxy } from '@/api/galaxy';\nconst plugin = {\n  install(Vue, opts = {}) {\n    let store = opts.store\n    console.log(store)\n\n    Vue.prototype.$brain_create = async function(){\n      console.log(store.state.core.nodes)\n\n      let brainName = prompt(\"What is the name of this brain ?\");\n      console.log(brainName)\n      let brainNode\n      if (brainName != undefined) {\n        let b = {name: brainName,\n          neurones : store.state.core.nodes.map(n => {return {id: n.id.startsWith('http') ? n.id : n['@context']['@base']+n.id}}),\n          type: \"brain\",\n          color: \"purple\"}\n          brainNode = await Vue.prototype.$newNode(b)\n          console.log(brainNode)\n          store.dispatch('core/saveNode', brainNode)\n        }\n\n        for (const n of store.state.core.nodes){\n          let brainNodeId = brainNode.id.startsWith('http') ? brainNode.id : n['@context']['@base']+brainNode.id\n          n.brains == undefined ? n.brains = [] : \"\"\n          var index = n.brains.findIndex(x => x.id==brainNodeId);\n          if(index === -1){\n            n.brains.push({id: brainNodeId})\n          }\n          store.dispatch('core/saveNode', brainNode)\n\n          console.log(n)\n        }\n\n\n      }\n      // let galaxy = new Galaxy()\n      // galaxy.init()\n      // console.log(galaxy)\n      // store.commit('core/setGalaxy', galaxy)\n      // Vue.prototype.$search = async function(params){\n      //   console.log(\"searching \", params.text, store.state.core.nodes)\n      //   let candidates = store.state.core.nodes\n      //   let results = candidates.filter(n => (n.name != undefined && n.name.includes(params.text)) )\n      //   if (params.searchById == true){\n      //     /* || n.id.includes(text)*/\n      //     let resultsById = candidates.filter(n => (n.id.includes(params.text)) )\n      //     results = results.concat(resultsById)\n      //   }\n      //\n      //\n      //   //store.commit('app/setBrain', brain)\n      //   return results\n      // }\n\n\n    }\n  }\n\n  // Auto-install\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(plugin)\n  }\n\n  export default plugin\n","// from https://github.com/Dletta/visualGraph/blob/master/visualGraph.js\n/* Depth First Search - explore all of the nodes from the given Soul\n* then update D3 data and the force-layout from the html\n*/\nimport Gun from 'gun'\nvar stack;\nvar nodes;\nvar edges;\nvar start;\nvar u;\nvar label;\nvar opt = false;\nvar stop = false;\nvar limit = 500;\nvar gun = undefined\nlet mod = undefined\n\nvar util = {}\n\n  util.printMap = function (map) {\n    var array = Array.from(map);\n    var i =0;\n    var l = array.length;\n    for(;i<l;i++){\n      console.log(array[i][1])\n    }\n  }\n\n  util.printArr = function (array){\n    var i =0;\n    var l = array.length;\n    for(;i<l;i++){\n      console.log(array[i])\n    }\n  };\n\n  util.makeNodes = function (map){\n    var array = Array.from(map);\n    var nodes = [];\n    var i =0;\n    var l = array.length;\n    for(;i<l;i++){\n      nodes.push(array[i][1])\n    }\n    return nodes;\n  };\n\n  util.makeEdges = function (map) {\n    var array = Array.from(map);\n    var edges = [];\n    var i =0;\n    var l = array.length;\n    for(;i<l;i++){\n      edges.push(array[i][1])\n    }\n    return edges;\n  };\n\nexport { Dfs }\n\nclass Dfs {\n  constructor(_gun) {\n    gun = _gun\n    console.log(gun)\n    mod = this\n  }\n  search(soul, lbl, lim){\n    console.log('Starting with:',soul);\n    if(lbl){opt = true;} else { opt = false;}\n    if(lim){limit = lim}\n    console.log(limit);\n    label = lbl;\n    start = soul;\n    stack = [];\n    nodes = new Map();\n    edges = new Map();\n    gun.get(soul).once(mod.node)\n  }\n\n  node(node, key) {\n    //console.log('called', nodes.size);\n    if(!node){console.error('no data:',key, node); mod.back();return;}\n    var soul = Gun.node.soul(node);\n    if(soul == start){\n      stack.push(soul);\n    }\n    u = node;\n    if(!opt || node[label] == undefined){\n      nodes.set(soul, {id:soul,label:key})\n    } else {\n      nodes.set(soul, {id:soul,label:node[label]})\n    }\n    console.log(this)\n    console.log(u, edges)\n    mod.edge(u, edges);\n  }\n\n\n    edge(node, edges) {\n      if(stop){console.log('stopped');return;}\n      var temp;\n      var soul = Gun.node.soul(node);\n      var tLabel = 'none';\n      var arr = Object.keys(node);\n      for(var item of arr){\n        //save label if the prop meets the label\n        if(item == label) { tLabel = node[item] }\n        //console.log(tLabel);\n        // if it's an object, then there is more\n        if(typeof node[item] == 'object'){\n          //skip nulled items or metadata\n          if(node[item] == null || item == \"_\"){continue}\n          if(!edges.has(soul+node[item]['#'])){\n           temp = node[item];\n\n            break;\n          }\n        }\n      }\n      if(temp){\n        mod.next(temp, soul,temp['#'], tLabel);\n      } else {\n        if(start == soul) {stack.pop()}\n        mod.back();\n      }\n    }\n\n    next(next, edgeS, edgeT, tLabel) {\n      console.log(tLabel)\n      var v = next;\n      var soul = v['#'];\n      nodes.set(soul, {id:soul,label:v['#']})\n      edges.set(edgeS+edgeT, {source:edgeS,target:edgeT})\n      stack.push(soul)\n      u = v;\n      if(nodes.size >= limit){console.info('Reached limit');mod.render();return;}\n      gun.get(soul).once(mod.node)\n    }\n\n  back() {\n    if(!(stack.length == 0)){\n      var soul = stack.pop();\n      gun.get(soul).once(mod.node)\n    } else {\n      mod.render();\n    }\n  }\n\n    render() {\n      //console.log('Rendering');\n      let graph = {}\n      graph.nodes = util.makeNodes(nodes);\n      graph.edges = util.makeEdges(edges);\n      console.log(\"graph\", graph)\n      //update();\n    }\n\n\n}\n\n\n\n// var DFS = (function(){\n//   var stack;\n//   var nodes;\n//   var edges;\n//   var start;\n//   var u;\n//   var label;\n//   var opt = false;\n//   var stop = false;\n//   var limit = 500;\n//\n//   var util = {};\n//\n//   util.printMap = function (map) {\n//     var array = Array.from(map);\n//     var i =0;\n//     var l = array.length;\n//     for(;i<l;i++){\n//       console.log(array[i][1])\n//     }\n//   }\n//\n//   util.printArr = function (array){\n//     var i =0;\n//     var l = array.length;\n//     for(;i<l;i++){\n//       console.log(array[i])\n//     }\n//   };\n//\n//   util.makeNodes = function (map){\n//     var array = Array.from(map);\n//     var nodes = [];\n//     var i =0;\n//     var l = array.length;\n//     for(;i<l;i++){\n//       nodes.push(array[i][1])\n//     }\n//     return nodes;\n//   };\n//\n//   util.makeEdges = function (map) {\n//     var array = Array.from(map);\n//     var edges = [];\n//     var i =0;\n//     var l = array.length;\n//     for(;i<l;i++){\n//       edges.push(array[i][1])\n//     }\n//     return edges;\n//   };\n//\n//   var dfs = {};\n//\n//   dfs.search = function(soul, lbl, lim){\n//     console.log('Starting with:',soul);\n//     if(lbl){opt = true;} else { opt = false;}\n//     if(lim){limit = lim}\n//     console.log(limit);\n//     label = lbl;\n//     start = soul;\n//     stack = [];\n//     nodes = new Map();\n//     edges = new Map();\n//     gun.get(soul).once(dfs.node)\n//   };\n//\n//   dfs.node = function(node, key) {\n//     //console.log('called', nodes.size);\n//     if(!node){console.error('no data:',key, node); dfs.back();return;}\n//     var soul = Gun.node.soul(node);\n//     if(soul == start){\n//       stack.push(soul);\n//     }\n//     u = node;\n//     if(!opt || node[label] == undefined){\n//       nodes.set(soul, {id:soul,label:key})\n//     } else {\n//       nodes.set(soul, {id:soul,label:node[label]})\n//     }\n//     dfs.edge(u, edges);\n//   };\n//\n//   dfs.edge = function (node, edges) {\n//     if(stop){console.log('stopped');return;}\n//     var temp;\n//     var soul = Gun.node.soul(node);\n//     var tLabel = 'none';\n//     var arr = Object.keys(node);\n//     for(var item of arr){\n//       //save label if the prop meets the label\n//       if(item == label) { tLabel = node[item] }\n//       //console.log(tLabel);\n//       // if it's an object, then there is more\n//       if(typeof node[item] == 'object'){\n//         //skip nulled items or metadata\n//         if(node[item] == null || item == \"_\"){continue}\n//         if(!edges.has(soul+node[item]['#'])){\n//          temp = node[item];\n//\n//           break;\n//         }\n//       }\n//     }\n//     if(temp){\n//       dfs.next(temp, soul,temp['#'], tLabel);\n//     } else {\n//       if(start == soul) {stack.pop()}\n//       dfs.back();\n//     }\n//   };\n//\n//   dfs.next = function (next, edgeS, edgeT, tLabel) {\n//     console.log(tLabel)\n//     var v = next;\n//     var soul = v['#'];\n//     nodes.set(soul, {id:soul,label:v['#']})\n//     edges.set(edgeS+edgeT, {source:edgeS,target:edgeT})\n//     stack.push(soul)\n//     u = v;\n//     if(nodes.size >= limit){console.info('Reached limit');dfs.render();return;}\n//     gun.get(soul).once(dfs.node)\n//   };\n//\n//   dfs.back = function () {\n//     if(!(stack.length == 0)){\n//       var soul = stack.pop();\n//       gun.get(soul).once(dfs.node)\n//     } else {\n//       dfs.render();\n//     }\n//   };\n//\n//   dfs.render = function () {\n//     //console.log('Rendering');\n//     let graph = {}\n//     graph.nodes = util.makeNodes(nodes);\n//     graph.edges = util.makeEdges(edges);\n//     console.log(\"graph\", graph)\n//     update();\n//   };\n//\n//   return dfs;\n// }) (Gun, gun, graph, update);\n","// import * as sc from '@inrupt/solid-client-authn-browser'\n// gun JSON https://gist.github.com/rosko/57ab2083ee4adf2f078d4d76851d9dc6\nimport { Dfs } from '@/api/dfs';\n\nconst plugin = {\n  install(Vue, opts = {}) {\n    let store = opts.store\n    //  console.log(store)\n\n\n    Vue.prototype.$gunSearch = async function(/*'brains')*/){\n      console.log(Dfs)\n      let dfs = new Dfs(Vue.prototype.$gun)\n      dfs.search(store.state.gun.rootNode, 'name')\n    }\n\n    Vue.prototype.$gunListen = async function(){\n      // let gunBrains = []\n      console.log(\"Map\",await Vue.prototype.$gun.get(store.state.gun.rootNode).map())\n      await Vue.prototype.$gun.get(store.state.gun.rootNode).map().on(\n        (node, key) => store.commit('gun/addGunBrains', {node:node, key: key})\n      )\n      //   function(node,key) {\n      //   console.log(node,key)\n      //   Vue.prototype.$gun.get(key).open((doc) => {\n      //   //console.log(\"doc\",key,  doc)\n      //   doc.key = key\n      //   gunBrains.push(doc)\n      // //  gunBrains[key] = doc\n      //   console.log(gunBrains)\n      //     store.commit('gun/setGunBrains', gunBrains)\n      //   });\n    }\n\n\n\n    // await Vue.prototype.$gun.get('neurones').map().on(function(node,key) {\n    // //  console.log(node,key)\n    // let gunNeurones = []\n    //   Vue.prototype.$gun.get(key).open((doc) => {\n    //   //console.log(\"doc\",key,  doc)\n    //   doc.key = key\n    //   gunNeurones.push(doc)\n    // //  gunBrains[key] = doc\n    //   console.log(gunNeurones)\n    //     //store.commit('gun/setGunBrains', gunBrains)\n    //   });\n    // })\n\n    // }\n    Vue.prototype.$saveBrainToGun = async function(){\n      let path = Vue.prototype.$gun.get(store.state.gun.rootNode).get(store.state.core.brain.key).get('nodes')\n      for await (const n of store.state.core.nodes){\n        delete n['@context']\n        console.error(\"must not be used , use store.rootNode\",n.id, n)\n        path.set(n)\n\n      }\n    }\n\n    Vue.prototype.$saveNodeToGun = async function(node){\n      console.log(\"Brain\", store.state.core.brain, store.state.core.galaxy, store.state.core.galaxy.worlds, node)\n      // if (store.state.brain != null){\n      //\n      // }\n\n    }\n\n    Vue.prototype.$gunSet = async function(object){\n      console.log(store.state.gun.rootNode, object)\n      Vue.prototype.$gun.get(store.state.gun.rootNode).set(object)\n    }\n\n    Vue.prototype.$gunExplore = async function(){\n      // inspiration https://github.com/Stefdv/gun-ui-graph/blob/master/gun-ui-graph.html\n      let rootNode = store.state.gun.rootNode\n      console.log(rootNode)\n      console.log('build gun._.graph')\n      // var self = this\n      // function each(node) {\n      //   console.log(node)\n      //   //self._processGunNode(node)\n      // }\n      // function ended(collection) {\n      //   console.log('Done mapping over:', collection);\n      //   //self._initCy()\n      //\n      //\n      //   self._mapNodes()\n      // }\n\n      let node = Vue.prototype.$gun.get(rootNode)//.valMapEnd(each,ended)\n      console.log(\"Gun Node\", node)\n      let graph = await processNode(node)\n      console.log(\"graph\", graph)\n      console.log(Vue.prototype.$gun)\n      Vue.prototype.$gun.get(rootNode).open((doc) => {\n        console.log(\"doc\", doc)\n      });\n      return graph\n\n    }\n    async function processNode(n){\n      let gunNodes = []\n      var soul = n._['#'];\n      console.log(\"soul\", soul)\n      n.map().once((node) => {\n        //console.log(key, node)\n        gunNodes.push(node)\n        // add results straight to the Vue component state\n        // and get updates when nodes are updated by GUN\n        // this.todos[key] = node;\n        //  console.log(this.todos)\n      });\n      //let isSet = await _isSet(soul)\n      //console.log(isSet)\n      // console.log(gunNodes)\n      return gunNodes\n    }\n\n\n    // Vue.prototype.$createBrain = async function(brain){\n    //\n    //   console.log(\"creation\",brain)\n    //   let brains = []\n    //   let rootNode = null\n    //   switch (brain.world) {\n    //     case \"gun\":\n    //     if (brain.privacy == \"user\"){\n    //       rootNode = Vue.prototype.$gun.user().get('brains')\n    //     }else {\n    //       rootNode = Vue.prototype.$gun.get('brains')\n    //     }\n    //\n    //\n    //\n    //     rootNode.map().on((node, key) => {\n    //       console.log(key, node)\n    //       brains.push({key: key, node: node})\n    //       // add results straight to the Vue component state\n    //       // and get updates when nodes are updated by GUN\n    //       // this.todos[key] = node;\n    //       //  console.log(this.todos)\n    //     });\n    //\n    //     rootNode.set({name: brain.name, created: Date.now(), type: brain.type})\n    //\n    //\n    //     brain.brains = brains\n    //     console.log(\"brains\",brain.brains)\n    //\n    //\n    //\n    //     break;\n    //     default:\n    //     console.log(\"todo\")\n    //   }\n    //\n    //   //store.commit('app/setBrain', brain)\n    //   return brain\n    // }\n\n    // Vue.prototype.$gunGet = async function(brain){\n    //   let gunNodes = []\n    //   Vue.prototype.$gun.get(brain.name).map().on((node, key) => {\n    //     console.log(key, node)\n    //     gunNodes.push({key: key, node: node})\n    //     // add results straight to the Vue component state\n    //     // and get updates when nodes are updated by GUN\n    //     // this.todos[key] = node;\n    //     //  console.log(this.todos)\n    //   });\n    //   console.log(gunNodes)\n    //   brain.gunNodes = gunNodes\n    //   console.log(brain)\n    //   store.commit('app/setBrain', brain)\n    //   //  Vue.prototype.$listenNeurones(brain)\n    //   return brain\n    // }\n\n\n\n    Vue.prototype.$saveToGun = async function(data){\n      console.log(\"brain\", store.state.gun.brain)\n      let brain_name = store.state.gun.brain.name\n      console.log(data, data.value, data.triple)\n      let object = data.triple.object\n      delete object.__ob__\n      delete object.__threeObj\n      let objectNode  = Vue.prototype.$gun.get(brain_name).set(object)\n\n      let subject = data.triple.subject\n      delete subject.__ob__\n      delete subject.__threeObj\n\n      let key = data.triple.edge.label\n      subject[key] = objectNode\n\n\n      console.log(subject)\n\n      Vue.prototype.$gun.get(brain_name).set(subject)\n\n    }\n\n    // Vue.prototype.$listenNeurones = async function(brain){\n    //   Vue.prototype.$gun.get(brain.name).map().on((node, key) => {\n    //     console.log(key, node)\n    //     // add results straight to the Vue component state\n    //     // and get updates when nodes are updated by GUN\n    //     // this.todos[key] = node;\n    //     //  console.log(this.todos)\n    //   });\n    //   console.log(\"ready to hear neurones\")\n    // }\n\n\n\n\n    // async function _isSet(ref){\n    //   Vue.prototype.$gun.get(ref).once(function(node){\n    //     let set = true\n    //     let iterated = false\n    //     console.log(node)\n    //     // Vue.prototype.$gun.node.is(node, function(value, field){\n    //     //   console.log(field)\n    //     //   iterated = true\n    //     //   if(!Vue.prototype.$gun.val.rel.is(value)){\n    //     //     set = false\n    //     //   }\n    //     // })\n    //     return {set: set, iterated: iterated}\n    //   })\n    // }\n\n  }\n}\n\n// Auto-install\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(plugin)\n}\n\nexport default plugin\n","import Vue from 'vue'\nimport App from './App.vue'\nimport './registerServiceWorker'\nimport router from './router'\nimport store from './store'\n\n// import OsCorePlugin from './plugins/os-core-plugin';\n// Vue.use(OsCorePlugin, {store: store});\nimport GalaxyPlugin from './plugins/galaxy-plugin';\nVue.use(GalaxyPlugin, {store: store});\n\nimport VueSocialSharing from 'vue-social-sharing'\nVue.use(VueSocialSharing);\n\nimport CorePlugin from './plugins/core-plugin';\nVue.use(CorePlugin, {store: store});\n\nimport Graph3dPlugin from './plugins/graph3d-plugin';\nVue.use(Graph3dPlugin, {store: store});\nimport ToolsPlugin from './plugins/tools-plugin';\nVue.use(ToolsPlugin, {store: store});\nimport SolidPlugin from './plugins/solid-plugin';\nVue.use(SolidPlugin, {store: store});\nimport SolidDataPlugin from './plugins/solid-data-plugin';\nVue.use(SolidDataPlugin, {store: store});\nimport IpfsDataPlugin from './plugins/ipfs-data-plugin';\nVue.use(IpfsDataPlugin, {store: store});\nimport SearchPlugin from './plugins/search-plugin';\nVue.use(SearchPlugin, {store: store});\nimport BrainPlugin from './plugins/brain-plugin';\nVue.use(BrainPlugin, {store: store});\n// import LevelgraphJsonLDPlugin from './plugins/levelgraphjsonld-plugin';\n// Vue.use(LevelgraphJsonLDPlugin, {store: store});\nimport VueFab from 'vue-float-action-button'\n\nVue.use(VueFab,  {\n  // opitons Optional Alibaba iconfont icon or MaterialIcons\n  iconType: 'MaterialDesign'\n  // iconType: 'iconfont'\n} )\n\n\nimport { BootstrapVue, IconsPlugin } from 'bootstrap-vue'\n\n// Import Bootstrap an BootstrapVue CSS files (order is important)\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap-vue/dist/bootstrap-vue.css'\n\n// Make BootstrapVue available throughout your project\nVue.use(BootstrapVue)\n// Optionally install the BootstrapVue icon components plugin\nVue.use(IconsPlugin)\n\nimport GunPlugin from './plugins/gun-plugin';\nVue.use(GunPlugin, {store: store});\n\nimport VueGun from 'vue-gun';\nimport('gun/lib/load.js')\n// import SEA from 'gun/sea'; // Required for SEA functions and user authentication\n// Vue.use(SEA)\nVue.use(VueGun, {\n  //  gun: gun // must be passed in at `gun` key\n   peers: ['https://spogg.herokuapp.com/gun',/*'http://localhost:9090/gun',*/ 'https://gun-manhattan.herokuapp.com/gun'/*, 'http://gunjs.herokuapp.com/gun/'*/] // run gun-starter-app on port 9090\n});\n\n\n\nVue.config.productionTip = false\n\nnew Vue({\n  router,\n  store,\n  render: h => h(App)\n}).$mount('#app')\n","\nexport default\n{\n  \"@context\": {\n    \"as\": \"https://www.w3.org/ns/activitystreams#\",\n    \"ve\": \"https://scenaristeur.github.io/verse#\",\n    \"id\": \"@id\",\n    \"type\": \"@type\",\n    \"name\": \"ve:name\",\n    \"age\": \"ve:age\",\n    \"url\": \"ve:url\",\n    \"privacy\": \"ve:privacy\",\n    //\"type\": \"ve:type\",\n    \"properties\": \"ve:properties\",\n    \"links\": \"ve:links\",\n    \"synapses\": \"ve:synapses\",\n    \"created\": \"ve:created\",\n    \"updated\": \"ve:updated\",\n    \"synchronized\": \"ve:synchronized\",\n    \"previous\": \"ve:previous\",\n    \"next\": \"ve:next\"\n  },\n  \"id\": null,\n  \"name\": \"\" ,\n  \"age\": 0 ,\n  \"url\": \"\",\n  \"privacy\": 'private',\n  \"type\": null,\n  \"properties\": [],\n  \"links\": [],\n  \"synapses\": [],\n  \"created\": null,\n  \"updated\": null,\n  \"synchronized\": null,\n  \"previous\": null,\n  \"next\": null\n}\n","import { v4 as uuidv4 } from 'uuid';\nimport modele from './templates/neurone1.js'\n\n\nexport { Base }\n\nclass Base {\n  constructor(options = {}) {\n    // this['ve:type'] = \"base\"\n    // loading modele\n    Object.assign(this, modele);\n    // update basic props\n    this.id = uuidv4()\n    this.type = \"base\"\n    this.created = Date.now()\n    // updating with options\n    Object.assign(this, options);\n    // this.options = options\n\n    // ...\n  }\n  debug(){\n      console.log(this)\n  }\n}\n","import { Base } from \"./base.js\"\n\nexport { Core }\n\nclass Core extends Base {\n  constructor(options = {}) {\n    super(options)\n    options.type == undefined ? this.type = \"core\": \"\"\n    // this.options = options\n\n    // this._data = Object.assign({}, modele)\n    // this[\"ve:created\"] = Date.now()\n    // this.id = uuidv4()\n    //console.log(this)\n    // ...\n  }\n}\n","\nimport { Base } from \"./base.js\"\n\nexport { Command }\n\nclass Command extends Base {\n  constructor(options = {}) {\n    super(options)\n    options['type'] == undefined ? this['type'] = \"command\": \"\"\n    // this.options = options\n\n    // this._data = Object.assign({}, modele)\n    // this[\"ve:created\"] = Date.now()\n    // this.id = uuidv4()\n    //console.log(this)\n    // ...\n    this.init(options.inputValue)\n  }\n  init(iv){\n    // si commence par http --> type = url\n  if (this.isValidUrl(iv)){\n    this.type = \"url\";\n    this.value = iv;\n    this.isFile = this.isFile(iv)\n  }else{\n    // selon le premier charactère, on detecte une commande\n    let firstChar = iv.charAt(0);\n    let last =\"\"\n    switch(firstChar){\n      case '/':\n      //    let commande = rdf.quad(rdf.blankNode(), rdf.namedNode('commande'),rdf.literal(message))\n      //  this.catchCommande(message,this.network,this);\n\n      this.type = \"commande\";\n      this.value = iv;\n      this.inputNew = \"\";\n      //this.catchCommande(this)\n      break;\n\n      case '.':\n      last = this.commandHistory[this.commandHistory.length-1];\n      this.inputNew = last.s+\" \"+last.p+\" \"+last.o;\n      break;\n\n      case ';':\n      last = this.commandHistory[this.commandHistory.length-1];\n      this.inputNew = last.s+\" \"+last.p+\" \";\n      break;\n\n      case ',':\n      last = this.commandHistory[this.commandHistory.length-1];\n      this.inputNew = last.s+\" \";\n      break;\n\n\n      default:\n      // si le premier charactère n'indique pas une commande, on traite comme un triplet\n      this.traiteTriplet(iv);\n    //  this.catchTriplet()\n    }\n  }\n\n  //si termine par virgule, point, point-virgule, tiret --> triplet\n\n  return this;\n  }\n\n  traiteTriplet(message){\n  var result = {}\n  var inputNew = \"\";\n  let lastChar = message.slice(-1);\n  let messageCut = message.slice(0,-1).split(\" \");\n  let isTriplet = true;\n  //  console.log(messageCut);\n\n  let detectLiteral = \"\";\n  let messageCutTemp = [];\n  messageCut.forEach(function(part){\n    part = part.trim();\n    //  console.log(part);\n    if (part.startsWith('\"')){\n      detectLiteral =\"debut\";\n      //  console.log(detectLiteral);\n      messageCutTemp.push(part.substr(1));\n    }else if (part.endsWith('\"')){\n      detectLiteral = \"fin\";\n      //console.log(detectLiteral);\n      messageCutTemp.push(messageCutTemp.pop()+\" \"+part.slice(0,-1));\n    }else if (detectLiteral == \"debut\"){\n      //  console.log(\"recupere le dernier et lui ajoute part\" )\n      messageCutTemp.push(messageCutTemp.pop()+\" \"+part)\n    }else {\n      messageCutTemp.push(part);\n    }\n  });\n  if (messageCutTemp.length > 0){\n    messageCut = messageCutTemp;\n  }\n  switch(lastChar){\n    case '.':\n    inputNew = \"\";\n    break;\n    case ';':\n    if (messageCut[0].indexOf(\" \") > -1){\n      inputNew = '\"'+messageCut[0]+'\"'+' ';\n    }else{\n      inputNew = messageCut[0]+' ';\n    }\n    break;\n    case ',':\n    if (messageCut[0].indexOf(\" \") > -1){\n      inputNew = '\"'+messageCut[0]+'\" ';\n    }else{\n      inputNew = messageCut[0]+' ';\n    }\n    if (messageCut[1].indexOf(\" \") > -1){\n      inputNew += '\"'+messageCut[1]+'\" ';\n    }else{\n      inputNew += messageCut[1]+' ';\n    }\n    break;\n    case '-':\n    if (messageCut[2].indexOf(\" \") > -1){\n      inputNew = '\"'+messageCut[2]+'\"'+' ';\n    }else{\n      inputNew = messageCut[2]+' ';\n    }\n    break;\n    default:\n    console.log(\"message to chat \"+message)\n    //this.sendMessage(message);\n    //  this.agentInput.send('agentSocket', {type: \"sendMessage\", message:message});\n    //  this.catchTriplet(message.slice(0,-1), this.network); // A REMPLACER PAR CATCHTRIPLETS V2\n    inputNew = \"\";\n    isTriplet = false;\n  }\n  if (isTriplet){\n    //  console.log(\"est Triplet\",messageCut)\n    result.type = \"triplet\";\n    var tripletvalue = {};\n    tripletvalue.subject = messageCut[0];\n    tripletvalue.predicate = messageCut[1];\n    tripletvalue.object = messageCut[2];\n    result.value = tripletvalue;\n    result.inputNew = inputNew;\n  }else {\n    //  console.log(\"n'est pas triplet\")\n    result.type = \"message\";\n    result.value = message;\n    result.inputNew = inputNew;\n  }\nObject.assign(this, result);\n//  return result;\n}\n  isValidUrl(string){\n    try {\n      new URL(string);\n      return true;\n    } catch (_) {\n      return false;\n    }\n  }\n  isFile(pathname) {\n    return pathname.split('/').pop().indexOf('.') > -1;\n  }\n}\n","const DB_NAME = 'nodedb';\r\nconst DB_VERSION = 1;\r\nlet DB;\r\n// https://www.raymondcamden.com/2019/10/16/using-indexeddb-with-vuejs\r\n\r\nexport default {\r\n\r\n\tasync getDb() {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\tif(DB) { return resolve(DB); }\r\n\t\t\tconsole.log('OPENING DB', DB);\r\n\t\t\tlet request = window.indexedDB.open(DB_NAME, DB_VERSION);\r\n\r\n\t\t\trequest.onerror = e => {\r\n\t\t\t\tconsole.log('Error opening db', e);\r\n\t\t\t\treject('Error');\r\n\t\t\t};\r\n\r\n\t\t\trequest.onsuccess = e => {\r\n\t\t\t\tDB = e.target.result;\r\n\t\t\t\tresolve(DB);\r\n\t\t\t};\r\n\r\n\t\t\trequest.onupgradeneeded = e => {\r\n\t\t\t\tconsole.log('onupgradeneeded');\r\n\t\t\t\tlet db = e.target.result;\r\n\t\t\t\tdb.createObjectStore(\"nodes\", { keyPath:'id' });\r\n\t\t\t};\r\n\t\t});\r\n\t},\r\n\tasync deleteNode(node) {\r\n\r\n\t\tlet db = await this.getDb();\r\n\r\n\t\treturn new Promise(resolve => {\r\n\r\n\t\t\tlet trans = db.transaction(['nodes'],'readwrite');\r\n\t\t\ttrans.oncomplete = () => {\r\n\t\t\t\tresolve();\r\n\t\t\t};\r\n\r\n\t\t\tlet store = trans.objectStore('nodes');\r\n\t\t\tstore.delete(node.id);\r\n\t\t});\r\n\t},\r\n\tasync clearStore(){\r\n\t\tconsole.log(\"clear store\")\r\n\t\ttry{\r\n\t\t\tlet db = await this.getDb();\r\n\t\t\tvar transaction = db.transaction([\"nodes\"], \"readwrite\");\r\n\t\t\t// create an object store on the transaction\r\n\t\t\tvar objectStore = transaction.objectStore(\"nodes\");\r\n\r\n\t\t\t// Make a request to clear all the data out of the object store\r\n\t\t\tvar objectStoreRequest = objectStore.clear();\r\n\r\n\t\t\tobjectStoreRequest.onsuccess = function(event) {\r\n\t\t\t\tconsole.log(event)\r\n\t\t\t\t// report the success of our request\r\n\t\t\t\t//note.innerHTML += '<li>Request successful.</li>';\r\n\t\t\t};\r\n\t\t\t//window.indexedDB.deleteDatabase(DB_NAME)\r\n\t\t}catch(e){\r\n\t\t\talert(e)\r\n\t\t}\r\n\t\tawait this.getNodes()\r\n\t},\r\n\tasync getNodes() {\r\n\r\n\t\tlet db = await this.getDb();\r\n\r\n\t\treturn new Promise(resolve => {\r\n\r\n\t\t\tlet trans = db.transaction(['nodes'],'readonly');\r\n\t\t\ttrans.oncomplete = () => {\r\n\t\t\t\tresolve(nodes);\r\n\t\t\t};\r\n\r\n\t\t\tlet store = trans.objectStore('nodes');\r\n\t\t\tlet nodes = [];\r\n\r\n\t\t\tstore.openCursor().onsuccess = e => {\r\n\t\t\t\tlet cursor = e.target.result;\r\n\t\t\t\tif (cursor) {\r\n\t\t\t\t\tnodes.push(cursor.value)\r\n\t\t\t\t\tcursor.continue();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t});\r\n\t},\r\n\r\n\tasync saveNode(node) {\r\n\r\n\t\tlet db = await this.getDb();\r\n\r\n\t\treturn new Promise(resolve => {\r\n\r\n\t\t\tlet trans = db.transaction(['nodes'],'readwrite');\r\n\t\t\ttrans.oncomplete = () => {\r\n\t\t\t\tresolve();\r\n\t\t\t};\r\n\r\n\t\t\tlet store = trans.objectStore('nodes');\r\n\t\t\tstore.put(node);\r\n\r\n\t\t});\r\n\r\n\t}\r\n\r\n}\r\n","import Vue from 'vue'\nimport idb from '@/api/idb-nodes';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst vocab = \"https://scenaristeur.github.io/agent/\"\n\nconst state = () => ({\n  core: undefined,\n  currentNode : undefined,\n  brain: undefined,\n  brains: undefined,\n  showBrainLoader: false,\n  graph: undefined,\n  db: undefined,\n  commandHistory: [],\n  command: null,\n  nodes: [],\n  links: [],\n  jsonldProps: ['@context', 'id', 'reverse', 'type'],\n  graphProps: ['__ob__', '__threeObj', 'index', 'vx', 'vy', 'vz', 'x', 'y', 'z' ],\n  spinner: [],\n  ipfsNode: null,\n  ipfs_cids: [],\n  graph_cid : null,\n  highlightNodes: new Set(),\n  highlightLinks: new Set(),\n  // selectedNodes: new Set(),\n  hoverNode: null,\n  search: null,\n  galaxy : null\n})\n\nconst mutations = {\n  setGalaxy(state, g){\n    state.galaxy = g\n  },\n  setIpfsNode(state, n){\n    state.ipfsNode = n\n  },\n  setGraphCid(state, c){\n    state.graph_cid = c\n  },\n  resetIpfsCid(state){\n    state.ipfs_cids = []\n  },\n  addIpfsCid(state, cid){\n    state.ipfs_cids.push(cid)\n  },\n  setCore(state, c){\n    state.c = c\n  },\n  setCurrentNode(state, n){\n    state.currentNode = n\n  },\n  setBrain(state, b){\n    console.log(b)\n    state.brain = b\n  },\n  setBrains(state, b){\n    state.brains = b\n    state.showBrainLoader = true\n  },\n  setShowBrainLoader(state, v){\n    state.showBrainLoader = v\n  },\n  setGraph(state, g){\n    state.graph = g\n  },\n  setDb(state, db){\n    state.db = db\n  },\n  setCommand(state, c){\n    state.command = c\n  },\n  pushHistory(state, c){\n    state.commandHistory.push(c)\n  },\n  setLinks(state, l){\n    state.links = l\n  },\n  spinnerAdd(state,t){\n    state.spinner.push(t)\n  },\n  spinnerRemove(state, t){\n    state.spinner = state.spinner.filter(x => x.id!=t.id )\n  },\n  resetSpinner(state){\n    state.spinner = []\n  },\n  setSearch(state, params){\n    state.search = params\n    Vue.prototype.$updateHighlight();\n  },\n  // setSelectedNodes(state, nodes){\n  //   //state.selectedNodes.clear();\n  //   nodes.forEach(item => {\n  //     console.log(item)\n  //     //state.selectedNodes.add(item)\n  //     let event = {}\n  //     event.ctrlKey = true\n  //     Vue.prototype.$onNodeSearch(item,event)\n  //   })\n  //   //state.graph.nodeColor(state.graph.nodeColor()); // update color of selected nodes\n  // },\n  setHighlightNodes(state, nodes){\n    state.highlightNodes.clear();\n    state.highlightLinks.clear();\n    nodes.forEach(item => {\n      console.log(item)\n      state.highlightNodes.add(item)\n    })\n    Vue.prototype.$updateHighlight()\n  }\n}\n\nconst actions = {\n  async pushCommandHistory(context, c){\n    context.commit('setCommand', c)\n    context.commit('pushHistory',c)\n    if(c.type == \"triplet\"){\n      let subjectNode = context.state.nodes.find(x => x.name == c.value.subject)\n      subjectNode == undefined ? subjectNode = await Vue.prototype.$newNode({name: c.value.subject}) : \"\"\n      if (c.value.predicate.startsWith('.'))\n      {\n        let p = c.value.predicate.slice(1)\n        let n = await Vue.prototype.$addProp({node: subjectNode, propertie: p, value: c.value.object})\n        await context.dispatch('saveNode', n)\n        await context.dispatch('getNodes')\n      }\n      else\n      {\n        let objectNode = context.state.nodes.find(x => x.id == c.value.object || x.name == c.value.object)\n        objectNode == undefined ? objectNode = await Vue.prototype.$newNode({name: c.value.object}) : \"\"\n        let nodes2save  = await Vue.prototype.$addLink({subject: subjectNode, predicate:c.value.predicate, object:objectNode})\n        nodes2save.forEach(async function(n) {\n          await context.dispatch('saveNode', n)\n        });\n        await context.dispatch('getNodes') // pose problème de rafraichissement, certainement car on a enlevé __ob & __threeObj\n      }\n    }\n  },\n  async newNode(context){\n    let node = await Vue.prototype.$newNode()\n    context.commit('setCurrentNode', node)\n  },\n  async saveNode(context, node){\n    node['@context'] == undefined ? node['@context'] = {} : \"\"\n    node['@context']['@vocab'] == undefined ? node['@context']['@vocab'] = vocab : \"\"\n    try{\n      // console.log(\"saving\", node)\n      await idb.saveNode(node);\n    //  await Vue.prototype.$saveNodeToGun(node)\n    }catch(e){\n      alert(e)\n    }\n  },\n  async removeNode(context,n){\n    console.log(\"removing\", n)\n    console.log(\"todo remove backlinks/reverse\")\n\n    if(n.reverse){\n      console.log(n.reverse)\n      for (const [key, value] of Object.entries(n.reverse)) {\n        let val = Array.isArray(value) ? value : [value]\n        console.log(val)\n        console.log(\"must remove\", n.id, \"in\",val, key);\n        console.log(\"get each node from id \")\n      }\n    }\n\n\n    // if (n.reverse){\n    //   console.log(\"must update DOES NOT WORK\", n.reverse)\n    //   for (const [key, value] of Object.entries(n.reverse)) {\n    //     console.log(key, \":\", value);\n    //     if(Array.isArray(value)){\n    //       for(const item of value ){\n    //         console.log(\"remove\",n.id , \"at\", key, \"from\",  item.name)\n    //         let node = context.state.nodes.find(x => x.id == item.id)\n    //         //  console.log(node)\n    //         console.log(\"----A\", key,  node[key])\n    //         if(Array.isArray(node[key])){\n    //           node[key] = node[key].filter(function(candidate) {\n    //             return candidate.id != n.id;\n    //           });\n    //         }else{\n    //           delete node[key]\n    //         }\n    //\n    //         console.log(\"====A\",key,  node[key])\n    //         console.log(node)\n    //         context.dispatch('saveNode',node)\n    //       }\n    //     }else{\n    //       console.log(\"remove object\", n.id, \"at\", key, \"from\",  value.id , value.name)\n    //       let node = context.state.nodes.find(x => x.id == value.id)\n    //       console.log(node)\n    //       console.log(\"----O\", key,  node[key])\n    //       if(Array.isArray(node[key])){\n    //         node[key] = node[key].filter(function(candidate) {\n    //           return candidate.id != n.id;\n    //         });\n    //       }else{\n    //         delete node[key]\n    //       }\n    //       // node[key] = node[key].filter(function(candidate) {\n    //       //   return candidate.id != n.id;\n    //       // });\n    //       // console.log(\"====O\",key,  node[key])\n    //       console.log(node)\n    //       context.dispatch('saveNode',node)\n    //     }\n    //   }\n    // }\n    try{\n      await idb.deleteNode(n);\n      context.state.links = context.state.links.filter(l => l.source != n.id && l.target != n.id)\n      context.state.nodes = context.state.nodes.filter(x=> x.id!= n.id)\n      await context.dispatch('getNodes')\n    }catch(e){\n      alert(e)\n    }\n\n\n  },\n  async removeAllNodes(context){\n    try{\n      context.state.links = []\n      context.state.nodes.forEach(async function(n) {\n        await idb.deleteNode(n);\n\n      });\n      context.state.nodes = []\n      await context.dispatch('getNodes')\n      //  await context.dispatch('getNodes')\n    }catch(e){\n      alert(e)\n    }\n  },\n  async getNodes(context) {\n    let nodes = await idb.getNodes();\n    let linksTemp = []\n    console.log(\"nodes in db\", nodes)\n    let last = null\n    nodes.forEach(n => {\n      n.type == undefined ? n.type = \"neurone\" : \"\"\n      n['@context'] == undefined ? n['@context'] = {} : \"\"\n      n['@context']['@vocab'] == undefined ? n['@context']['@vocab'] = vocab : \"\"\n      var index = context.state.nodes.findIndex(x => x.id==n.id);\n\n      index === -1 ? context.state.nodes.push(n) : Object.assign(context.state.nodes[index], n)\n      for (let [p,v] of Object.entries(n)){\n        if(!context.state.jsonldProps.includes(p) && !context.state.graphProps.includes(p)){\n          // console.log(\"#\", typeof v,p, v)\n          let rot = Math.random()*Math.PI\n          if(Array.isArray(v)){\n            for(let item of v ){\n              //  console.log('##',item.id, item)\n              linksTemp.push({source: n.id, target: item.id, label: p, curvature: .3, rotation: rot})\n            }\n          }else if(typeof v == \"object\" && v.id != undefined){\n            linksTemp.push({source: n.id, target: v.id, label: p, curvature: .3, rotation: rot})\n          }\n        }\n      }\n      last = n\n    });\n\n\n    let validLinks = linksTemp.filter(l => context.state.nodes.findIndex(n => n.id==l.target) > -1 )\n    let otherLinks = linksTemp.filter(l => context.state.nodes.findIndex(n => n.id==l.target) === -1 )\n    console.log(\"validlinks, otherlinks\",validLinks, otherLinks)\n    context.commit('setLinks', validLinks)\n    console.log(\"last\",last)\n  },\n  async saveBrain(context){\n    let {nodes, links} = context.state.graph.graphData()\n    console.log(nodes, links)\n    let nodes_ids = []\n    for (let node of nodes){\n      console.log(node)\n      delete node.__ob__\n      delete node.__threeObj\n      node.id == undefined ? node.id = uuidv4() : \"\"\n      node.created == undefined ? node.created = Date.now() : \"\"\n      node.updated = Date.now()\n      nodes_ids.push(node.id)\n      console.log(node)\n      await idb.saveNode(node);\n    }\n\n    let brain = {id: uuidv4(), nodes: nodes_ids, type: 'brain', color: \"#fffff\"}\n    await idb.saveNode(brain);\n    //  context.dispatch('getNodes')\n\n  },\n  switchTo(context, id){\n    let n = context.state.nodes.find(n=> n.id == id)\n    context.commit('setCurrentNode', n)\n  }\n  // async addWorkspace(context, w) {\n  //   context.state.pod.workspaces.push(w)\n  //   Vue.prototype.$addWorkspaceToPod(w)\n  // },\n}\n\nexport default {\n  namespaced: true,\n  state,\n  actions,\n  mutations\n}\n","// import Vue from 'vue'\n// import idb from '@/api/idb-nodes';\n// import * as Automerge from 'automerge'\n// import { v4 as uuidv4 } from 'uuid';\n\nconst state = () => ({\n  // doc: null\n  session: null,\n  pod: null\n})\n\nconst mutations = {\n  setSession(state, s){\n    console.log(\"session\",s)\n    state.session = s\n  },\n  setPod(state, p){\n    console.log(\"pod\",p)\n    state.pod = p\n  },\n  // updateDoc(state, newDoc) {\n  //   state.doc = newDoc\n  //   //render(newDoc)\n  // },\n\n}\n\nconst actions = {\n  // async newDoc(context){\n  //   let doc = Automerge.init()\n  //   context.commit('setDoc', doc)\n  // },\n  // addItem(context, text) {\n  //   console.log(context.state.doc)\n  //   let newDoc = Automerge.change(context.state.doc, doc => {\n  //     if (!doc.items) doc.items = []\n  //     doc.items.push({ text, done: false })\n  //   })\n  //   context.commit('updateDoc', newDoc)\n  // }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  actions,\n  mutations\n}\n","// import Vue from 'vue'\n// import idb from '@/api/idb-nodes';\n// import { v4 as uuidv4 } from 'uuid';\n//\n// const vocab = \"https://scenaristeur.github.io/agent/\"\n\nconst state = () => ({\n  showTerminal: false\n})\n\nconst mutations = {\n  toggleTerminal(state){\n    state.showTerminal = ! state.showTerminal\n  },\n}\n\nconst actions = {\n  // async pushCommandHistory(context, c){\n  //   context.commit('setCommand', c)\n  //   context.commit('pushHistory',c)\n  //   if(c.type == \"triplet\"){\n  //     let subjectNode = context.state.nodes.find(x => x.name == c.value.subject)\n  //     subjectNode == undefined ? subjectNode = await Vue.prototype.$newNode({name: c.value.subject}) : \"\"\n  //     if (c.value.predicate.startsWith('.'))\n  //     {\n  //       let p = c.value.predicate.slice(1)\n  //           let n = await Vue.prototype.$addProp({node: subjectNode, propertie: p, value: c.value.object})\n  //             await context.dispatch('saveNode', n)\n  //       await context.dispatch('getNodes')\n  //     }\n  //     else\n  //     {\n  //       let objectNode = context.state.nodes.find(x => x.id == c.value.object || x.name == c.value.object)\n  //       objectNode == undefined ? objectNode = await Vue.prototype.$newNode({name: c.value.object}) : \"\"\n  //       let nodes2save  = await Vue.prototype.$addLink({subject: subjectNode, predicate:c.value.predicate, object:objectNode})\n  //       nodes2save.forEach(async function(n) {\n  //         await context.dispatch('saveNode', n)\n  //       });\n  //       await context.dispatch('getNodes') // pose problème de rafraichissement, certainement car on a enlevé __ob & __threeObj\n  //     }\n  //   }\n  // },\n\n}\n\nexport default {\n  namespaced: true,\n  state,\n  actions,\n  mutations\n}\n","// import Vue from 'vue'\n\nconst state = () => ({\n  rootNode: \"test-brains\",\n  gunBrains : []\n})\n\nconst mutations = {\n  setGunBrains(state, b){\n    state.gunBrains = b\n  },\n  async addGunBrains(state, b){\n    console.log(b)\n    const index = await state.gunBrains.findIndex(object => object.key == b.key);\n    console.log(index)\n    if (index === -1) {\n      let br = Object.assign({},b.node)\n      br.key = b.key\n      await state.gunBrains.push(br)\n      // await Vue.prototype.$gun.get(b.key).open(async (doc) => {\n      //   console.log(\"doc\",b.key,  doc)\n      //   doc.key = b.key\n      //   await state.gunBrains.push(doc)\n      // })\n    }\n\n\n\n  },\n  setRootNode(state,r){\n    state.rootNode = r\n  }\n  // setPod(state, p){\n  //   console.log(\"pod\",p)\n  //   state.pod = p\n  // },\n  // updateDoc(state, newDoc) {\n  //   state.doc = newDoc\n  //   //render(newDoc)\n  // },\n\n}\n\nconst actions = {\n  // async newDoc(context){\n  //   let doc = Automerge.init()\n  //   context.commit('setDoc', doc)\n  // },\n  // addItem(context, text) {\n  //   console.log(context.state.doc)\n  //   let newDoc = Automerge.change(context.state.doc, doc => {\n  //     if (!doc.items) doc.items = []\n  //     doc.items.push({ text, done: false })\n  //   })\n  //   context.commit('updateDoc', newDoc)\n  // }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  actions,\n  mutations\n}\n","import Vue from 'vue'\nimport Vuex from 'vuex'\nimport core from './modules/core'\nimport solid from './modules/solid'\nimport terminal from './modules/terminal'\nimport gun from './modules/gun'\n// import automerge from './modules/automerge'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n  },\n  getters: {\n  },\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n    core, solid, terminal, gun /*automerge*/\n  }\n})\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + (chunkId === 43 ? \"test\" : chunkId) + \".\" + {\"26\":\"81483ee3\",\"34\":\"b9966dc6\",\"43\":\"13203f87\",\"57\":\"43d8a2f4\",\"88\":\"c89e369c\",\"97\":\"a435ad36\",\"118\":\"6629ef40\",\"162\":\"b539f018\",\"170\":\"62f2c102\",\"171\":\"6ccc4f0b\",\"194\":\"19f30d59\",\"214\":\"02dfcd0c\",\"235\":\"a0b5a8ba\",\"250\":\"145f525d\",\"267\":\"7a064b82\",\"325\":\"1e20ec4f\",\"358\":\"c9b5c12c\",\"430\":\"a4fa224e\",\"444\":\"accd6ef8\",\"536\":\"104fc45b\",\"578\":\"a8a0cda3\",\"611\":\"77f68a83\",\"627\":\"a1f5030c\",\"650\":\"cbc35fb8\",\"756\":\"1ec906a7\",\"811\":\"ebc2fea4\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"css/\" + chunkId + \".\" + {\"26\":\"9af57d6c\",\"170\":\"728fbe8d\",\"194\":\"3dd4c5f9\",\"235\":\"2bf21112\",\"578\":\"aa5514ea\",\"756\":\"cc4d8120\"}[chunkId] + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"agent:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/agent/\";","var createStylesheet = function(chunkId, fullhref, resolve, reject) {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tvar onLinkComplete = function(event) {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + realHref + \")\");\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tlinkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\tdocument.head.appendChild(linkTag);\n\treturn linkTag;\n};\nvar findStylesheet = function(href, fullhref) {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = function(chunkId) {\n\treturn new Promise(function(resolve, reject) {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.miniCss = function(chunkId, promises) {\n\tvar cssChunks = {\"26\":1,\"170\":1,\"194\":1,\"235\":1,\"578\":1,\"756\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(function() {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, function(e) {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkagent\"] = self[\"webpackChunkagent\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(1367); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","id","module","exports","render","_vm","this","_h","$createElement","_c","_self","attrs","message","_v","_s","_e","staticRenderFns","name","components","data","created","console","methods","loadBrainFromIpfs","watch","ipfsNode","computed","component","register","ready","log","registered","cached","updatefound","updated","alert","offline","error","Vue","VueRouter","routes","path","HomeView","router","mode","base","process","worlds","onCreated","action","installed","version","type","state","active","Galaxy","constructor","init","plugin","install","opts","store","galaxy","commit","window","use","prototype","$coreInit","async","options","core","Core","$spinnerAdd","task","$spinnerRemove","size","getSize","w","innerWidth","h","innerHeight","highligth","node","search","text","length","includes","onLinkClick","ln","nodeThreeObject","image","texture","shape","geometry","material","THREE","color","Math","round","random","pow","transparent","opacity","sprite","Image","src","base64","onload","needsUpdate","map","scale","set","nodeEl","document","createElement","textContent","style","className","CSS2DObject","onNodeClick","distance","pos","x","y","z","distRatio","hypot","graph","cameraPosition","n","nodes","find","addEventListener","width","height","$graphInit","graphData","links","highlightNodes","highlightLinks","hoverNode","ForceGraph3D","extraRenderers","CSS2DRenderer","domElement","nodeLabel","nodeAutoColorBy","nodeColor","has","nodeThreeObjectExtend","undefined","linkCurvature","linkCurveRotation","linkThreeObjectExtend","linkThreeObject","link","label","SpriteText","textHeight","linkDirectionalArrowLength","linkDirectionalArrowRelPos","linkPositionUpdate","start","end","middlePos","Object","assign","c","position","linkWidth","linkDirectionalParticles","linkDirectionalParticleWidth","onNodeHover","clear","add","$updateHighlight","onLinkHover","source","target","setReverse","main","p","item","reverse","Array","isArray","push","old","$newNode","startsWith","$loadNeurone","context","uuidv4","neurones","$addProp","propertie","newValue","value","oldValue","$addLink","t","s","subject","predicate","o","object","$checkSolidSession","sc","then","info","isLoggedIn","webId","session","$getPodInfosFromSession","$login","issuer","oidcIssuer","redirectUrl","location","href","clientName","$logout","logout","pod","logged","$getPodInfos","neuroneStore","storage","workspaces","brains","$checkBrains","dataset","getSolidDataset","fetch","profile","getThing","getStringNoLocale","FOAF","friends","getUrlAll","getUrl","WS","photo","VCARD","publicTypeIndexUtl","pti_ds","indexes","getThingAll","i","types","ws","AS","url","SOLID","loadNeurones","remotesUrl","filePromises","endsWith","$loadBrainFromSolid","file","getFile","Promise","reject","reader","FileReader","JSON","parse","result","dispatch","err","onerror","readAsText","all","lastPartOfUrl","str","lastIndexOf","substring","slice","$saveBrainToSolid","solid","suggestedpath","prompt","forEach","savedFile","overwriteFile","Blob","stringify","contentType","getSourceUrl","brainsFile","brainsIndex","now","Date","currentBrain","checksum","index","findIndex","$loadBrainsFromWikidata","tags","aliases","$brainsFromPod","getContainedResourceUrlAll","default_brains","IPFS","ipfs","$initIpfs","IpfsCore","create","$saveBrainToIpfs","graph_cid","$loadBrainFromIpfs","cid","chunks","chunk","cat","concat","decodedData","TextDecoder","decode","toString","$saveNodesToIpfs","$search","params","candidates","results","filter","searchById","resultsById","$brain_create","brainNode","brainName","b","brainNodeId","stack","edges","u","opt","stop","limit","gun","mod","util","array","from","l","Dfs","_gun","soul","lbl","lim","Map","get","once","key","back","Gun","edge","temp","tLabel","arr","next","pop","edgeS","edgeT","v","makeNodes","makeEdges","processNode","gunNodes","_","$gunSearch","dfs","$gun","rootNode","$gunListen","on","$saveBrainToGun","brain","$saveNodeToGun","$gunSet","$gunExplore","open","doc","$saveToGun","brain_name","triple","__ob__","__threeObj","objectNode","GalaxyPlugin","VueSocialSharing","CorePlugin","Graph3dPlugin","ToolsPlugin","SolidPlugin","SolidDataPlugin","IpfsDataPlugin","SearchPlugin","BrainPlugin","VueFab","iconType","BootstrapVue","IconsPlugin","GunPlugin","VueGun","peers","App","$mount","Base","modele","debug","super","Command","inputValue","iv","isValidUrl","isFile","firstChar","charAt","last","inputNew","commandHistory","traiteTriplet","lastChar","messageCut","split","isTriplet","detectLiteral","messageCutTemp","part","trim","substr","indexOf","tripletvalue","string","URL","pathname","DB_NAME","DB_VERSION","DB","request","indexedDB","onsuccess","onupgradeneeded","db","createObjectStore","keyPath","getDb","trans","transaction","oncomplete","objectStore","delete","objectStoreRequest","event","getNodes","openCursor","cursor","continue","put","vocab","currentNode","showBrainLoader","command","jsonldProps","graphProps","spinner","ipfs_cids","Set","mutations","setGalaxy","g","setIpfsNode","setGraphCid","resetIpfsCid","addIpfsCid","setCore","setCurrentNode","setBrain","setBrains","setShowBrainLoader","setGraph","setDb","setCommand","pushHistory","setLinks","spinnerAdd","spinnerRemove","resetSpinner","setSearch","setHighlightNodes","actions","subjectNode","nodes2save","idb","entries","val","linksTemp","rot","PI","curvature","rotation","validLinks","otherLinks","nodes_ids","switchTo","namespaced","setSession","setPod","showTerminal","toggleTerminal","gunBrains","setGunBrains","br","setRootNode","r","Vuex","getters","modules","terminal","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","__proto__","ns","def","current","getOwnPropertyNames","definition","defineProperty","enumerable","f","chunkId","reduce","promises","miniCssF","globalThis","Function","prop","hasOwnProperty","inProgress","dataWebpackPrefix","done","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","timeout","nc","setAttribute","onScriptComplete","prev","clearTimeout","doneFns","parentNode","removeChild","setTimeout","bind","head","appendChild","Symbol","toStringTag","nmd","paths","children","createStylesheet","fullhref","linkTag","rel","onLinkComplete","errorType","realHref","findStylesheet","existingLinkTags","tag","dataHref","existingStyleTags","loadStylesheet","installedCssChunks","miniCss","cssChunks","installedChunks","installedChunkData","promise","loadingEnded","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}