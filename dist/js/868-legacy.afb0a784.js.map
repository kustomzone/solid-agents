{"version":3,"file":"js/868-legacy.afb0a784.js","mappings":"uJAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAA+B,GAAvBF,EAAIM,gBAAyBF,EAAG,cAAc,CAACA,EAAG,WAAW,CAACG,GAAG,CAAC,MAAQP,EAAIQ,qBAAqB,CAACR,EAAIS,GAAG,qCAAqCL,EAAG,WAAW,CAACG,GAAG,CAAC,MAAQP,EAAIU,OAAO,CAACV,EAAIS,GAAG,2BAAmCE,GAAZX,EAAIY,OAAmBR,EAAG,eAAeJ,EAAIa,GAAIb,EAAIY,OAAa,QAAE,SAASE,GAAG,OAAOV,EAAG,oBAAoB,CAACW,IAAID,EAAEE,GAAGC,MAAM,CAAC,OAAS,IAAIV,GAAG,CAAC,MAAQ,SAASW,GAAQ,OAAOlB,EAAImB,UAAUL,MAAM,CAACV,EAAG,IAAI,CAACA,EAAG,IAAI,CAACa,MAAM,CAAC,KAAOH,EAAEE,GAAG,OAAS,WAAW,CAAChB,EAAIS,GAAGT,EAAIoB,GAAGN,EAAEO,WAAWjB,EAAG,QAAQ,CAACA,EAAG,IAAI,CAACJ,EAAIS,GAAG,YAAYT,EAAIoB,GAAGN,EAAEQ,SAAS,eAAetB,EAAIoB,GAAGN,EAAES,cAAcnB,EAAG,WAAW,CAACa,MAAM,CAAC,KAAO,KAAK,QAAU,WAAWV,GAAG,CAAC,MAAQ,SAASW,GAAiC,OAAzBA,EAAOM,kBAAyBxB,EAAIyB,MAAMX,EAAEE,OAAO,CAACZ,EAAG,iBAAiB,IAAI,MAAK,GAAGJ,EAAI0B,MAAM,GAAG1B,EAAI0B,MACl2BC,EAAkB,GCDtB,GACEC,QAAS,CACPC,UADO,SACGC,EAAOC,GAAyB,IAAhBC,EAAgB,uDAAN,KAClC/B,KAAKgC,SAASC,MAAMH,EAAU,CAC5BD,MAAOA,EACPE,QAASA,EACTG,OAAO,OCiBf,GACEd,KAAM,cACNe,OAAQ,CAACA,GACTR,QAAFA,CACIT,UADJ,SACAL,GACMuB,QAAQC,IAAI,UAAlBD,GACMpC,KAAKsC,oBAAoBzB,EAAEE,IAC3Bf,KAAKS,QAEPF,mBANJ,WAOMP,KAAKsC,sBACLtC,KAAKS,QAEPA,KAVJ,WAWMT,KAAKuC,OAAOC,OAAO,2BAA2B,IAEhDhB,MAbJ,SAaAT,GACM,IAAN,mDACA,OAIM0B,UAAUC,UAAUC,UAAUC,GAAUC,MAAK,WAG3CC,EAAIlB,UAAU,mCAAoCgB,EAA1DE,yCAAAA,cACA,WAGQA,EAAIlB,UAAU,sDAAuDgB,EAAU,gBAIrFG,SAAU,CACRpC,OADJ,WAEM,OAAOX,KAAKuC,OAAOS,MAAMC,KAAKtC,QAEhCN,gBAJJ,WAKM,OAAOL,KAAKuC,OAAOS,MAAMC,KAAK5C,mBC7DmO,I,UCOnQ6C,GAAY,OACd,EACApD,EACA4B,GACA,EACA,KACA,KACA,MAIF,EAAewB,EAAiB","sources":["webpack://agent/./src/views/BrainLoader.vue?4484","webpack://agent/./src/mixins/ToastMixin.js","webpack://agent/src/views/BrainLoader.vue","webpack://agent/./src/views/BrainLoader.vue?15f2","webpack://agent/./src/views/BrainLoader.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.showBrainLoader == true)?_c('b-container',[_c('b-button',{on:{\"click\":_vm.loadBrainFromSolid}},[_vm._v(\"Choose path for loading a brain\")]),_c('b-button',{on:{\"click\":_vm.hide}},[_vm._v(\"Hide BrainLoader\")]),(_vm.brains!=undefined)?_c('b-list-group',_vm._l((_vm.brains.brains),function(b){return _c('b-list-group-item',{key:b.id,attrs:{\"button\":\"\"},on:{\"click\":function($event){return _vm.loadBrain(b)}}},[_c('b',[_c('a',{attrs:{\"href\":b.id,\"target\":\"_blank\"}},[_vm._v(_vm._s(b.name))])]),_c('small',[_c('i',[_vm._v(\"created: \"+_vm._s(b.created)+\" / updated: \"+_vm._s(b.updated))])]),_c('b-button',{attrs:{\"size\":\"sm\",\"variant\":\"success\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.share(b.id)}}},[_c('b-icon-share')],1)],1)}),1):_vm._e()],1):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default {\n  methods: {\n    makeToast(title, content, variant = null) {\n      this.$bvToast.toast(content , {\n        title: title,\n        variant: variant,\n        solid: true\n      })\n    }\n  }\n}\n","<template>\n  <b-container v-if=\"showBrainLoader == true\">\n    <b-button @click=\"loadBrainFromSolid\">Choose path for loading a brain</b-button>\n    <b-button @click=\"hide\">Hide BrainLoader</b-button>\n    <b-list-group v-if=\"brains!=undefined\">\n      <b-list-group-item\n      v-for=\"b in brains.brains\"\n      :key=\"b.id\"\n      @click=\"loadBrain(b)\"\n      button>\n      <b><a :href=\"b.id\" target=\"_blank\">{{b.name}}</a></b>\n      <small><i>created: {{b.created}} / updated: {{b.updated}}</i></small>\n\n      <b-button @click.stop=\"share(b.id)\"  size=\"sm\" variant=\"success\"><b-icon-share></b-icon-share></b-button>\n      <!-- <b-icon-share @click=\"share(b.id)\"></b-icon-share> -->\n    </b-list-group-item>\n  </b-list-group>\n</b-container>\n</template>\n\n<script>\nimport ToastMixin from '@/mixins/ToastMixin'\n\nexport default {\n  name: \"BrainLoader\",\n  mixins: [ToastMixin],\n  methods:{\n    loadBrain(b){\n      console.log(\"loading\",b)\n      this.$loadBrainFromSolid(b.id)\n      this.hide()\n    },\n    loadBrainFromSolid(){\n      this.$loadBrainFromSolid()\n      this.hide()\n    },\n    hide(){\n      this.$store.commit('core/setShowBrainLoader', false)\n    },\n    share(id){\n      let copyText = \"https://scenaristeur.github.io/agent?source=\"+id //window.location.href\n      let app = this\n      //  !copyText.endsWith(\".ttl\") ?\n      //copyText = copyText+this.file.url //: \"\"\n      //  console.log(copyText)\n      navigator.clipboard.writeText(copyText).then(function() {\n        /* clipboard successfully set */\n        //  console.log(\"clipok\", copyText)\n        app.makeToast(\"The url is in your clipboard ;-)\", copyText+\".               Use Ctrl+V to share it\", \"success\")\n      }, function() {\n        /* clipboard write failed */\n        //  console.log(\"clipERROR\", copyText)\n        app.makeToast(\"Houston, we've got a problem with the clipboard ;-(\", copyText, \"warning\")\n      })\n    }\n  },\n  computed: {\n    brains() {\n      return this.$store.state.core.brains\n    },\n    showBrainLoader() {\n      return this.$store.state.core.showBrainLoader\n    },\n  },\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./BrainLoader.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./BrainLoader.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BrainLoader.vue?vue&type=template&id=10380638&\"\nimport script from \"./BrainLoader.vue?vue&type=script&lang=js&\"\nexport * from \"./BrainLoader.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","showBrainLoader","on","loadBrainFromSolid","_v","hide","undefined","brains","_l","b","key","id","attrs","$event","loadBrain","_s","name","created","updated","stopPropagation","share","_e","staticRenderFns","methods","makeToast","title","content","variant","$bvToast","toast","solid","mixins","console","log","$loadBrainFromSolid","$store","commit","navigator","clipboard","writeText","copyText","then","app","computed","state","core","component"],"sourceRoot":""}