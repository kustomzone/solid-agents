{"version":3,"file":"js/995.60080fe0.js","mappings":"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","sources":["webpack://agent/./src/views/connectors/LocalConnector.vue?7d10","webpack://agent/./src/views/connectors/connector/base.js","webpack://agent/./src/views/connectors/connector/local.js","webpack://agent/src/views/connectors/LocalConnector.vue","webpack://agent/./src/views/connectors/LocalConnector.vue?4f11","webpack://agent/./src/views/connectors/LocalConnector.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-button',{attrs:{\"variant\":\"primary\"},on:{\"click\":_vm.download}},[_c('b-icon-file-arrow-down')],1),_c('b-button',{attrs:{\"variant\":\"primary\"},on:{\"click\":function($event){return _vm.openFileUpload()}}},[_c('b-icon-file-arrow-up')],1),_c('input',{ref:\"fileUpload\",attrs:{\"type\":\"file\",\"multiple\":\"\",\"hidden\":\"\"},on:{\"change\":_vm.loadFiles}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { v4 as uuidv4 } from 'uuid';\r\n\r\n// import modele from './templates/neurone1.js'\r\n\r\n\r\nexport { Base }\r\n\r\nclass Base {\r\n  constructor(options = {}) {\r\n    // this['ve:type'] = \"base\"\r\n    // loading modele\r\n    //Object.assign(this, modele);\r\n    // update basic props\r\n    this.id = uuidv4()\r\n    this.type = \"baseConnector\"\r\n    this.created = Date.now()\r\n    // updating with options\r\n    Object.assign(this, options);\r\n    // this.options = options\r\n\r\n    // ...\r\n  }\r\n  debug(){\r\n      console.log(this)\r\n  }\r\n}\r\n","import { Base } from \"./base.js\"\r\nimport store from '@/store'\r\n\r\nexport { LocalConnector }\r\n\r\nclass LocalConnector extends Base {\r\n\r\n  constructor(options = {}) {\r\n    super(options)\r\n    options['type'] == undefined ? this['type'] = \"LocalConnector\": \"\"\r\n  }\r\n  async upload (file, cb){\r\n    const fileReader = new FileReader()\r\n\r\n    await fileReader.addEventListener('load', () => {\r\n      cb(fileReader.result)\r\n    })\r\n    fileReader.readAsText(file, \"UTF-8\")\r\n    // console.log(result)\r\n    // return result\r\n  }\r\n  async upload1(files){\r\n    for (var i = 0; i < files.length; i++) {\r\n      let f = files[i]\r\n      let filename = f.name\r\n      var extension = f.name.split('.').pop();\r\n      const fileReader = new FileReader()\r\n      fileReader.addEventListener('load', () => {\r\n        var result = fileReader.result;\r\n        console.log(typeof result, result);\r\n        switch (extension) {\r\n          case 'json':\r\n          var data = JSON.parse(result)\r\n          console.log(data)\r\n          if(data.nodes != undefined){\r\n            console.log(data)\r\n            store.commit('soukai/setNeurones', data.nodes)\r\n            // store.commit ('graph3D/addNodes', data.nodes)\r\n            // store.commit('graph3D/setNeurones', data.nodes)\r\n            // store.commit('graph3D/addNodes', data.nodes)\r\n            // store.commit('graph3D/addLinks', data.links)\r\n          }\r\n          break;\r\n          default:\r\n          alert(\"your file must be a .json file\", filename)\r\n\r\n        }\r\n        // let result = {name: filename, result: fileReader.result}\r\n        // console.log(result)\r\n      })\r\n      fileReader.readAsText(f)\r\n    }\r\n  }\r\n\r\n  downloadFile(data){\r\n    var contenu = JSON.stringify(data.content, null, 2) //`{\"test\": \"json\" }` //this.content\r\n    console.log(\"todo: poser la question compresser\",contenu)\r\n    var format = data.format || \"json\" //this.format;\r\n    //  console.log(contenu, format)\r\n    var contentType = \"\";\r\n    var fileNameToSaveAs = \"\"\r\n    let suggested = \"Brain_\"+Date.now()\r\n    var filename = prompt(\"Choose a name for the exported file :\", suggested);\r\n    if (filename == null || filename == \"\") {\r\n      return;\r\n    }\r\n\r\n    switch (format) {\r\n      case 'json':\r\n      contentType = 'application/json';\r\n      fileNameToSaveAs = filename + \".json\"; //Date.now() +\r\n      break;\r\n      case 'ttl':\r\n      contentType = 'text/turtle';\r\n      fileNameToSaveAs = filename + \".ttl\"; //Date.now() +\r\n      break;\r\n      case 'jsonld':\r\n      contentType = 'application/ld+json';\r\n      fileNameToSaveAs = filename + \".jsonld\"; //Date.now() +\r\n      break;\r\n      default:\r\n      alert('Format de fichier non reconnu', format);\r\n    }\r\n    var textFileAsBlob = new Blob([contenu], { type: contentType }\r\n    );\r\n    var downloadLink = document.createElement(\"a\");\r\n    downloadLink.download = fileNameToSaveAs;\r\n    downloadLink.innerHTML = \"Download File\";\r\n    if(navigator.userAgent.indexOf(\"Chrome\") != -1) {\r\n      downloadLink.href = window.URL.createObjectURL(textFileAsBlob);\r\n    } else {\r\n      downloadLink.href = window.URL.createObjectURL(textFileAsBlob);\r\n      downloadLink.target=\"_blank\";\r\n      downloadLink.style.display = \"none\";\r\n      document.body.appendChild(downloadLink);\r\n    }\r\n    var event = document.createEvent(\"MouseEvents\");\r\n    event.initMouseEvent(\r\n      \"click\", true, false, window, 0, 0, 0, 0, 0\r\n      , false, false, false, false, 0, null\r\n    );\r\n    downloadLink.dispatchEvent(event);\r\n    setTimeout(function(){\r\n      document.body.removeChild(downloadLink);\r\n      window.URL.revokeObjectURL(downloadLink);\r\n    }, 1000);\r\n  }\r\n}\r\n","<template>\r\n  <div>\r\n    <b-button @click=\"download\" variant=\"primary\">\r\n      <b-icon-file-arrow-down></b-icon-file-arrow-down>\r\n    </b-button>\r\n    <b-button @click=\"openFileUpload()\" variant=\"primary\">\r\n      <b-icon-file-arrow-up></b-icon-file-arrow-up>\r\n    </b-button>\r\n    <input ref=\"fileUpload\" type=\"file\" multiple hidden @change=\"loadFiles\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { LocalConnector } from \"./connector/local.js\"\r\nexport default {\r\n  name: \"LocalConnectorConnector\",\r\n  data(){\r\n    return {\r\n      connector : new LocalConnector(/*options*/)\r\n    }\r\n  },\r\n  mounted(){\r\n    console.log(this.connector)\r\n  },\r\n  methods: {\r\n    async loadFiles(event){\r\n      const files = event.target.files\r\n      for(const file of files) {\r\n        this.connector.upload(file, this.processFile)\r\n      }\r\n    },\r\n    async processFile(f){\r\n      console.log(f)\r\n      console.log(f.name)\r\n      let g = JSON.parse(f)\r\n      console.log()\r\n      for await (let n of g.nodes){\r\n        console.log(n)\r\n        await this.$newNode(n)\r\n        //await context.dispatch('saveNode', n)\r\n        await this.$store.dispatch('core/saveNode',n)\r\n        //this.$soukai_create(n)\r\n      }\r\n      //\r\n      // for(let l of g.links){\r\n      //   this.$addLink(l)\r\n      //   //this.$soukai_create(n)\r\n      // }\r\n      console.log(\"end\")\r\n      await this.$store.dispatch('core/getNodes')\r\n\r\n    },\r\n    openFileUpload(){\r\n      this.$refs.fileUpload.click()\r\n    },\r\n    download(){\r\n      //https://github.com/scenaristeur/ipgs/blob/4436a12ccdb2b3de9c02a34fc2a699ccf9c68bf2/src/components/network/ExportModal.vue\r\n      console.log(\"download\"/*,  this.$store.state.soukai.neurones*/)\r\n      let graphData = {format: \"json\",\r\n      content: {\r\n        nodes: this.$store.state.core.nodes,\r\n        links: this.$store.state.core.links,\r\n        //  neurones: this.$store.state.soukai.neurones\r\n      }}\r\n      this.connector.downloadFile(graphData)\r\n    },\r\n    // upload(){\r\n    //   //https://github.com/scenaristeur/ipgs/blob/4436a12ccdb2b3de9c02a34fc2a699ccf9c68bf2/src/components/network/ImportModal.vue\r\n    //   console.log(\"upload\")\r\n    // }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.custom-file-input:lang(en) ~ .custom-file-label::after {\r\n  content: 'Uplaod a brain';\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LocalConnector.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LocalConnector.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./LocalConnector.vue?vue&type=template&id=c96d003e&\"\nimport script from \"./LocalConnector.vue?vue&type=script&lang=js&\"\nexport * from \"./LocalConnector.vue?vue&type=script&lang=js&\"\nimport style0 from \"./LocalConnector.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","on","download","$event","openFileUpload","ref","loadFiles","staticRenderFns","Base","constructor","options","id","uuidv4","type","created","Date","now","Object","assign","debug","console","log","LocalConnector","super","undefined","file","cb","fileReader","FileReader","addEventListener","result","readAsText","files","i","length","f","filename","name","extension","split","pop","data","JSON","parse","nodes","store","alert","downloadFile","contenu","stringify","content","format","contentType","fileNameToSaveAs","suggested","prompt","textFileAsBlob","Blob","downloadLink","document","createElement","innerHTML","navigator","userAgent","indexOf","href","window","URL","createObjectURL","target","style","display","body","appendChild","event","createEvent","initMouseEvent","dispatchEvent","setTimeout","removeChild","revokeObjectURL","connector","mounted","methods","links","component"],"sourceRoot":""}